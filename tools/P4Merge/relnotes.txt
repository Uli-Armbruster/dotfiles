                            Release Notes for
                 P4, the Helix Command Line, and
                          P4D, the Helix Versioning Engine 

                            Version 2015.2

Introduction

	This document lists all user-visible changes to the Helix 
	Versioning Engine (P4D) and command line client (P4) between
	Release 97.3 and 2015.2. Release notes for other Perforce
	Helix products are available separately on the Perforce
	Documentation web page.

	Perforce numbers releases YYYY.R/CCCCC, e.g. 2002.1/30547.
	YYYY is the year; R is the release of that year; CCCCC is the
	bugfix change level.  Each bugfix in these release notes is
	marked by its change number.  Any build includes (1) all bugfixes
	of all previous releases and (2) all bugfixes of the current
	release up to the bugfix change level.

	Both 'p4' and 'p4d' will report their version information by
	passing the '-V' flag.  Additionally, 'p4' can report the server's
	information with the 'p4 info' command.

Supported Platforms for p4d

	Linux kernel 2.6 for Intel(x86, x86_64)
	Linux kernel 2.6 for ARM
	Linux kernel 2.6 for 64-bit Itanium
	Windows 7 for Intel(x86, x64)
	Windows 8 for Intel(x86, x64)
	Windows 8.1 for Intel(x86, x64)
	Windows 2008 for Intel(x86, x64)
	Windows 2012 for Intel(x64)
	Windows 2008 for 64-bit Itanium(ia64)
	Apple Darwin 9.0 for Intel(x86, x86_64)
	FreeBSD 10.0 for Intel(x86, x86_64)
	
Supported Platforms for p4

	Linux kernel 2.6 for Intel(x86, x86_64)
	Linux kernel 2.6 for ARM
	Linux kernel 2.6 for 64-bit Itanium
	Windows 7 for Intel(x86, x64)
	Windows 8 for Intel(x86, x64)
	Windows 8.1 for Intel(x86, x64)
	Windows 2008 for Intel(x86, x64)
	Windows 2012 for Intel (x64)
	Windows 2008 for 64-bit Itanium(ia64)
	Mac OS X 10.5, 10.6, 10.7, 10.8(x86, x86_64)
	Apple Darwin 9.0 for Intel(x86, x86_64)
	FreeBSD 10.0 for Intel(x86, x86_64)

--------------------------------------------------------------------------

Important security note
    This release links OpenSSL version 1.0.1q.
    Note: 2015.2 patch 2 upgrades to OpenSSL 1.0.1q
    to handle the following vulnerabilities:
    * CVE-2015-3194
    * CVE-2015-3195
    * CVE-2015-3196

--------------------------------------------------------------------------

Important export note

	This product is subject to U.S. export control laws and regulations
	including, but not limited to, the U.S. Export Administration
	Regulations, the International Traffic in Arms Regulation requirements,
	and all applicable end-use, end-user and destination restrictions.
	Licensee shall not permit, directly or indirectly, use of any Perforce
	technology in or by any U.S. embargoed country or otherwise in
	violation of any U.S. export control laws and regulations.

--------------------------------------------------------------------------

Upgrading the Server

	** IMPORTANT UPGRADE NOTES **

	  BEFORE UPGRADING

	  To upgrade your Helix Versioning Engine (P4D), your Perforce license
	  file must be current. Expired licenses do not work with upgraded 
	  servers.

	  In addition to your usual checkpointing scheme, always checkpoint 
	  your server immediately before undertaking an upgrade.

	  DOWNGRADING A 2015.2 SERVER IS NOT POSSIBLE

	  UPGRADING PROCEDURE IS DIFFERENT DEPENDING ON WHAT YOUR CURRENT 
	  PERFORCE VERSION IS:   

	           UPDATE DATABASE SCHEMA vs UPDATE DATABASE FORMAT

	  -------------------------------------------------------------------
	  ** UPDATE DATABASE SCHEMA

	  If your current server version is 2013.3 or above, then this upgrade
	  is a UPDATE DATABASE SCHEMA upgrade:

	  Unix Platforms

	    1. Issue the 'p4d -r <server-root> -J <journal-file> -xu'
	       command. This command performs the significant schema
	       upgrades, then exits.

	    2. Restart your server with your site's usual parameters.

	  Windows Platforms

	    1. Issue the 'p4d -r <server-root> -J <journal-file> -xu'
	       command from a command prompt window. This command
	       performs the significant schema upgrades, then exits.

	    2. Restart your Helix Versioning Engine (P4D) service.


	  Note: Personal DVCS servers will automatically perform any database
	        schema upgrades; whilst the upgrade steps described above are
	        unnecessary for these servers, they are safe to run.

	  -------------------------------------------------------------------
	  ** UPDATE DATABASE FORMAT

	  If your current server version is 2013.2 or a previous release
	  then this upgrade is an UPDATE DATABASE FORMAT upgrade:

	  Due to the new btree format introduced in 2013.3 this is not an
	  UPDATE DATABASE SCHEMA upgrade. A checkpoint using your old server 
	  and then a restore using the 2015.2 server is required before the 
	  internal upgrades 'p4d -xu' (if required) can be performed.

	  Note:  If you have made use of the (undocumented) '+T' modifier 
	  (storing file content in the tiny.db database) this data is not 
	  checkpointed (and therefore not restored). See 'p4 help undoc'
	  for backup/restore procedures for this table.

	  Once the database has been restored with the 2015.2 version, 
	  update your database schema:

	  Unix Platforms

	    1. Issue the 'p4d -r <server-root> -J <journal-file> -xu'
	       command. This command performs the significant schema
	       upgrades, then exits.

	    2. Restart your server with your site's usual parameters.

	  Windows Platforms

	    1. Issue the 'p4d -r <server-root> -J <journal-file> -xu'
	       command from a command prompt window. This command
	       performs the significant schema upgrades, then exits.

	    2. Restart your Helix Versioning Engine (P4D) service.


--------------------------------------------------------------------------

Interoperating With Previous Releases

	1. Unless stated otherwise you can intermix any release of Helix
	   Command Line (P4) with any release of the Helix Versioning
	   Engine (P4D), but any functionality new to 2015.2 requires
	   you to upgrade the client and/or P4D. See marks in the notes
	   below.

	   * -- requires new p4 client program
	   ** -- requires new p4d server program
	   *** -- requires new p4p proxy program

	   Any replica servers must be at the same release levels as the 
	   master server; any functionality that requires an upgrade for the 
	   master requires an upgrade for the replica, and vice versa.

	2. Beginning with 99.2, remote depots will interoperate
	   between UNIX and NT.  Beginning with 98.2, remote depots
	   will interoperate across (98.2 and higher) releases.
	   In 98.1 and before, remote depots will only operate with
	   another server of the same release.

	3. As of 2005.1, remote depot support for 98.2 and 99.1 servers
	   has been dropped.  Attempts by 98.2 and 99.1 servers to contact
	   2005.1 servers still works, but the depots will appear devoid
	   of files.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r15.1/user/relnotes.txt
	to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Major new functionality in 2015.2

	#1211694 (Bug #77627) **
	    Stream specifications may now be opened and submitted, enabling
	    them to be staged on a particular client and tested before
	    being submitted atomically in a changelist along with a set of
	    files.  See 'p4 help streamcmds' for more information.

	#1047057 **
	    Improve performance and reduce fragmentation in the 'db.have'
            table by partitioning 'build' clients away from interactive
	    users.  This change adds a new type of client 'readonly'.  
	    A client is configured readonly by setting the 'Type:' field 
	    in the client spec.  Setting a client readonly must happen at 
	    client creation time, once set in cannot be modified.
	    A 'readonly' client has its own personal 'db.have' database
	    table that is not journaled and can be quickly removed. This
	    type of client is ideal for the build automation cycle that
	    creates a client, syncs, builds then deletes the client.

	#998379  * **
	    UTF8 server file type added.  Files detected to hold utf8 textual
	    contents can be stored as a utf8 file.  These files will have
	    BOMs (Byte order marks) removed when stored on the server
	    and added back when synced.

Minor new functionality in 2015.2

	#1237948 (Bug #75238) **
	    'p4 opened -g' in a distributed environment reports files opened
	    on the Commit Server. This can be run from any Edge Server in the
	    distributed environment to show files that are globally locked.

	#1233417 (Bug #12755) **
	    'p4 annotate' now supports a new flag '-u'. This flag instructs
	    annotate to display the user who modified the change and the date
	    when the modification occurred.
	    
	#1230546 **
	    Added support through the server specification to surface 
	    a helix cluster administration server in the server spec
	    metadata. The new Server Services Set Name is 
	    hxca-server and its server type is admin.

	#1216733 (Bug #77058) **
	    Added support through the server specification to surface 
	    zookeeper servers and the clusterId in the server spec
	    metadata.
	    New Server Types:
	      * identifier
	      * admin
	    New Server Service Set Names:
	      * for type identifier: cluster
	      * for type admin: zookeeper-server

	#1212286 (Bug #76687) **
	    The warning messages issued when 'p4 copy' opens 'move/add' source 
	    files for 'branch' in the target (added in change #673961) have
	    been disabled by popular request; users who are following 
	    recommended branching patterns do not generally need to worry 
	    about this situation, and so the warnings were causing more 
	    trouble than they were preventing.  Admins that wish to re-enable 
	    these warnings for all their users may do so via the new undoc 
	    configurable 'dm.copy.movewarn'.

	#1211671 (Bug #69771) **
	    'p4 submit' from an Edge Server in a distributed environment
	    now takes early locks on the files on the Commit Server. Now
	    when concurrent submits occur from Edge Servers, the failures
	    are reported earlier, resulting in less wasted time and work
	    done on Edge Servers for failed submits.

	#1210497 (Bug #79997) *
	    p4 command line will try to discover a good character set
	    to use if P4CHARSET is set to a wide character set like
	    utf16.  p4 set will now allow -C and -Q before the 'set' verb.
	    Case insensitive platforms now check for setting 'p4charset'
	    to problematic values.

	#1209881 (Bug #75238) **
	    'p4 lock -g -c <change>' can be used to lock files in a
	    numbered change on the Commit Server from an Edge Server.
	    This allows users in a distributed environment to take global
	    locks.

	#1206326 (Bug #1194) **
	    The label spec now allows a 'group' as the label owner.  When a
	    label is owned by a group, any user within the group may modify
	    the label spec, and update which files are tagged by the label.

	#1203354 (Bug #47288) **
	    'p4 depot' now accepts a -t (type) argument to specify the type
	    on new depot creation.   Any depot type may be passed on
	    the command with this argument, but the type will be ignored
	    should the depot already exist.

	#1171246 (Bug #77870) * **
	   'p4 login' now accepts a remote name specified with the -r argument,
	   causing the login to be forwarded to the server specified in the
	   remote spec. If a RemoteUser is specified, the login is performed for
	   that user.

	#1130470, #1143127, #1225282, #1228379 (Bugs #79082, #80368, #80511) **
	    There is now a new tunable "server.global.client.views" that
	    controls whether or not the view maps of a non-stream client on an
	    edge or workspace server are made global when a client is modified.
	    By default server.global.client.views=0 and so client view maps are
	    never made global, matching the pre-2015.2 behavior.

	    If server.global.client.views=1 on an edge or workspace server,
	    then client view maps will be made global when a client is modified
	    on that edge or workspace server.  If this tunable is 0 on the
	    edge/workspace server then client view maps on that edge or
	    workspace server are not made global when they are modified.

	    Note that the view maps of a client on a replica must be made
	    global if that client is to be used as a template on another
	    server.

	    This tunable can be set globally, in cluster scope, or individually
	    for each server.  Normally it would be set globally:
	        p4 configure set server.global.client.views=1
	    and individual edge servers that don't need global client view maps
	    may disable it individually:
	        p4 configure set edge1#server.global.client.views=0
	    In a DCS cluster the master server and all workspace servers must
	    have this tunable set to 1 because this is needed for client
	    recovery in case a workspace server fails.  Therefore P4CMGR sets
	    server.global.client.views=1 at cluster scope when the cluster is
	    created, and this setting should not be changed.

	    This change modifies the behavior of Bug #77790, which always made
	    non-stream client view maps of an edge or workspace server be
	    global when the client was modified; with this change, modifying a
	    non-stream client makes its view maps global only when
	    server.global.client.views=1 on the edge/workspace server.  This
	    allows client maps to be global on most edge servers while keeping
	    them local on those edge servers that don't need or want them to be
	    global.

	    Note that setting this tunable does not immediately make any client
	    view maps be global; that happens only when a client is modified
	    afterwards.  Clearing this tunable does not delete the view maps
	    of any clients, but will prevent subsequent changes to a client's
	    view map from being propagated to other servers. If a client with
	    global view maps is deleted then its view maps are also deleted
	    globally regardless of the value of server.global.client.views;
	    this is to prevent orphaned view maps.

	#1129505 (Bug #29068) **
	    The commands that service users can run now includes: 'p4 logparse',
	    'p4 logschema', 'p4 logstat', 'p4 logtail', 'p4 servers'.

	#1129944 (Bug #77291) * **
	    The 'p4 remote' spec now contains the new field "RemoteUser:". For
	    DVCS scenarios where you wish to fetch and push to multiple remote
	    servers and you need to use a different Perforce identity for a
	    particular remote server, you can specify that identity in the
	    RemoteUser field and it will be used by fetch/push commands against
	    that remote server.

	#1127420 (Bug #29068) **
	    The commands 'p4 logparse', 'p4 logstat', and 'p4 logtail' now
	    indicate the log number for any structured logs being read. This
	    is to assist applications that follow logs across rotations.
	    Additionally these commands support referring to the running log
	    files with their current log numbers. The log numbers begin at 0.

	#1126846 (Bug #76036, #72755, #74831 ) **
	    New configurables net.parallel.* allow 'p4 sync' to
	    automatically use parallel threads to transfer files. See
	    'p4 help sync' and 'p4 help configurables' for complete
	    information.

	#1100312 (Bug #79497) **
	    The 'p4 stream' and 'p4 stream -o' commands now default to
	    the current client's stream if no stream name is specified.

	#1099310 (Bug #75868) **
	    When unloading clients on an edge server, a new flag '-p'
	    will promote any non-promoted shelves belonging to the
	    specified client that is being unloaded.

	#1099331 (Bug #73681) **
	    A replica with lbr.replication=cache now supports the use of the
	    'verify -t' command to schedule transfer of missing archive files.
	    For this to work effectively, such a replica should have one or
	    more 'pull -u' threads configured for it (see change 1051994),
	    perhaps also using the '--batch=N' flag for those threads (see
	    change 1053213).

	#1073565 (Bug #76035) **
	    New configurables net.parallel.submit.* allow 'p4 submit' to
	    automatically use parallel threads to transfer files. See
	    'p4 help submit' and 'p4 help configurables' for complete
	    information.

	#1070966 (Bugs #73912) **
	    New trigger types journal-rotate-lock and journal-rotate allow for
	    maintenance routines to be run on servers after the journal has been
	    rotated, either whilst the database tables are still locked or after
	    the locks have been released. These triggers are intended to be used
	    on replicas where journal rotation is triggered by journal records.
	    The server must be running for these triggers to be invoked; running
	    'p4 admin journal/checkpoint' will invoke the triggers, but running
	    'p4d -jc' or 'p4d -jj' directly against a server will not.

 	#1068319 (Bug #78060) **
	    The behavior of cluster-only feature of workspace backup
	    can be modified by setting a new "Backup" field in the client
	    specification. Cluster users can set their client to opt out
	    of the workspace backup feature by setting this field to
	    the value "disable".  By default, the value of the Backup
	    field is assumed to be "enable" for all read/write clients.
            If this field is set to "disable" then that client
	    workspace will neither be backed up nor be considdered 
	    for auto-unload.  Setting this field has no impact for
	    clients not hosted in a clustered workspace-server.


	#1067861 (Bugs #40729,#79069) **
	    The server will now display the canonical filetype for a file,
	    as introduced by change #7724, and will no longer display the
	    shorthand alias, for all clients at API level 79 or above.
	    So, for example, 'p4 opened' for a file of type 'binary+Sw' will
	    now display: '//depot/foo#1 - add default change (binary+Sw)'
	    rather than '//depot/foo#1 - add default change (ctempobj)'.
	    If your application relies on receiving the shorthand aliases,
	    either continue to use the 2015.1 (or older) client API, or get
	    the old behavior by setting protocol variable "api" to 78 (2015.1).
	    For the command line 'p4' executable, the output can be frozen to
	    2015.1 output by using -Zapi=78.

	#1067301 (Bugs #78817,#78828) **
	    A server with rpl.checksum.change >= 1 will now write changelist
	    checksum journal notes when performing the commands: populate,
	    fetch, and (inbound) push.

	#1066965 (Bugs #76882) **
	    'p4d -xu' will no longer run automatically if there are fewer than
	    1000 changelists. Upgrades must be run manually unless the server is
	    a DVCS personal server; in this case, any upgrades steps are run
	    automatically.

	#1065023 (Bug #79018) **
	    'p4 changes -e changelist#' is now fully supported. This flag
	    provides an alternative to 'filespec@change,#head' processing
	    and can be much faster.

	#1061282 **
	    'p4 labels <filespec>' where the filespec is a single or 
	    wildcard revision with no range, now runs lockless.

	#1056188 (Bugs #75648, #76195, #76632) **
	    In a distributed environment, unshelving of promoted shelves into
	    open files and branches on a server that the shelf did not 
	    originate is now allowed.

	#1053213 (Bug #78598) **
	    'p4 pull -u' now accepts the '--batch=N' flag, provided that both
	    replica and master are running at this release level or higher.
	    The --batch=N flag is particularly intended for situations where
	    large numbers of very small files are regularly retrieved by a
	    replica separated from its master by a high-latency network.

	#1052310, 1009333 (Bug #50432) **
	    Add the ability to root streams at a deeper level in the depot
	    directory hierarchy.  New stream depots contain the 'StreamDepth'
	    field for defining the root level of a stream's path (the number
	    of slashes found within the stream's Stream field) below the
	    depot name. This field accepts a value between one and 10, while
	    it defaults to one.

	    As new streams are created, the number of slashes of the stream's
	    Stream field (beyond the depot name) must match the StreamDepth
	    field of the depot.  As the StreamDepth field is defined in the
	    depot, all streams of the depot are bound by the same depth.
	    For example - a stream depot Tango has the StreamDepth: 2
	    which allows for two slashes in the stream specification's Stream
	    field beyond the depot name.

	        //Tango/core/Rel4.0
	        //Tango/docs/DevQ4

	    both these streams reflect the above depot StreamDepth field.

	    Note the performance implication; the total path to any file
	    revision held within a stream are compounded with stream's
	    Stream field.

	    See 'p4 help depot' and 'p4 help stream' for further details.

	#1052216 * **
	    'p4 reconcile -k' updates the have list to match workspace content.
	    This can be used to reconcile a client's empty or incomplete
	    have list with files on the workspace that have the same content
	    as their mapped files in the depot.

	#1051994 (Bug #78599) **
	    It is now legal to configure one or more 'pull -u' threads on
	    a replica with lbr.replication=cache. If the replica is an
	    edge-server or build-server, 'p4 sync' commands on that replica
	    will now use any such 'pull -u' threads to service cache faults.

	#1049517 (Bug #78600) **
	    A command which is run in a replica with lbr.replication=cache
	    will now use a single connection to the master server to perform
	    all its archive content fetches.

	#1049398 (Bug #78553) **
	    On a replica with monitor > 0, the pull threads will now
	    periodically update their status; the current pull thread state
	    can be viewed via 'p4 monitor show -a -l -sB'.

	#1049397 (Bug #78521) **
	    The command 'p4d -jd <dumpfile> db.<table>' now works for the
	    tables db.sendq and db.revpx.

	#1047403 (Bug #77798) **
	    New users that are created by authenticating against an LDAP server
	    may now have their FullName and Email fields populated from their
	    record in the LDAP server. This requires the relevant attributes to
	    be named in the LDAP configuration.

	#1044999 (Bugs #78470, #77790) **
	    Workspaces bound to an edge or workspace server may now be used
	    as a template when creating a workspace on a different edge or
	    workspace server.  Before using a bound workspace as a template
	    on another server you should ensure that its view map has been
	    been made global by making a trivial change to the client (perhaps
	    to the Description field) and saving it.

	#1042495 (Bug #78035) **
	    The 'auth.csv' log can now be defined in order to log the results
	    of 'p4 login' attempts. Any additional information provided by the
	    authentication method is included in the log entries.

	#1023845 (Bug #77790) **
	    The view maps of non-stream workspaces local to a edge or
	    workspace server are now global and so are visible on all nodes
	    in a distributed or cluster environment.  Note that client view
	    maps are made global only when they are saved (either created or
	    modified); the view map of an existing non-stream client bound
	    to a edge or workspace server is not made global until the client
	    has been saved using a p4d that includes this change.

	#1043956 **
	    The fetch/push/zip/unzip commands now include revision attributes
	    as part of copying submitted changes from one server to another.
	    Note that, once a particular revision has been copied to another
	    server, using 'attribute -f' to change the attributes on that
	    revision will only affect the revision on that server, not on any
	    other server to which it may have been copied.

	#1042179 **
	    The fetch/push/zip/unzip commands now include fix data as part of
	    copying submitted changes from one server to another. Fix records
	    are only added to the destination server if the corresponding job
	    is already present on that server; jobs must be manually copied
	    between servers. When fetch/push/unzip copies a fix record into
	    the destination server, it runs any fix-add and form-commit (job)
	    triggers that are defined for that server and also adds db.logger
	    event records if the logger is enabled. The fix-add trigger is
	    only run by the unzip command if the --enable-dvcs-triggers flag
	    is set.

	#1042005 ** *
	    Windows long file name support now defaults to enabled.  This
		is equivalent to this tunable setting, "filesys.windows.lfn=1".

	#1041784 (Bug #75533) **
	    LDAP authentication using the SASL bind method can now optionally
	    separate the realm from the username when the username is in either
	    'user@realm' or 'realm\user' formats.

	#1039642 (Bug #77628) **
	    'p4 switch' now supports switching to a point-in-time stream.
	    By specifying 'p4 switch stream@change' the command will set
	    the stream spec/view creation as of that change and sync any
	    files also to the change specified.

	#1038646 (Bug #76913) **
	    'p4 files <filespec>' with no label or change range will now
	    run lockless if 'db.peeking=3'.

	#1038593 (Bug #78363) **
	    'p4 sync <filespec>@label' and 'p4 files <filespec>@label' will 
	    now access the label table in lockless mode.  In addition when
	    'db.peeking=3', the command 'p4 fstat <filespec>@label' will also
	    run lockless.

	#1038497 (Bug #77113) **
	    The usernames of members added to a Perforce group by 'p4 ldapsync'
	    can now optionally be normalised into lowercase by setting the
	    'downcase' option in the LDAP spec.

	#1035528 (Bug #71588) **
	    An admin may now run 'p4 -c <client> unlock -x -f [files...]' to
	    forcibly unlock files of type +l which are not marked orphaned,
	    but which can no longer be unlocked by the user who has them opened.

	#1032823 (Bugs #65810, #65293, #59656) *
	    P4IGNORE can now be set to a list of filenames and paths to files,
	    using ';' as the separator on Windows and ':' or ';' on other
	    platforms. Earlier items in the list are loaded before later ones.
	    If the list item contains a slash character it is considered a path
	    and is loaded once, otherwise the item is considered to be a
	    filename and the directory tree will be scanned for files with that
	    name.

	#1032762 (Bug #2194) *
	    When loading settings from a P4CONFIG file, if there are additional
	    P4CONFIG files higher in the path with additional variables set,
	    those additional variables are now loaded too.

	#1032758 (Bug #65293) *
	    The placeholder '$home' in any Perforce environment variable is
	    expanded to the path of user's home directory when that variable
	    is used. The user's home directory is taken to be the value of the
	    'HOME' environment variable or 'USERPROFILE' on Windows.

	#1032190 (Bug #72108) **
	    'p4 ldap' now stores LDAP configurations in the new db.ldap table.
	    This table is journalled, so LDAP configurations are now included
	    in checkpoints and are replicated.

	#1029470 (Bugs #72671, #76543) **
	    Names of automatic labels can now be used as specifiers in import
	    mappings on stream specs and in the 'ChangeView' on client specs.

	#1023388 (Bug #76168) **
	    A replica may specify rpl.compress=4 to indicate that network
	    data compression should be used for the journal pull or
	    journalcopy connection between the replica and the master,
	    but not for the 'pull -u' connections.

	#1020818 (Bug #77708) **
	    A replica server with lbr.replication = readonly or cache now
	    issues a clearer error message if an archive file is missing on
	    the replica and also damaged on the master.

	#1020055 (Bug #51182) *
	    New client side command 'p4 ignores' reports the mappings computed
	    from the rules defined in P4IGNORE files and allows paths to be
	    tested against those P4IGNORE rules.

	#1015978 (Bug #76105) **
	    The 'p4 change' spec now includes two additional fields:
	    - ImportedBy: the user who issued the fetch, push, or unzip
	      command which imported this change into this server.
	    - Identity: the identity of this change.
	    These fields are primarily useful for DVCS scenarios, in which
	    changelists are copied from one server to another, and help you
	    correlate the changelist's basic identity as it is so copied.
	    In such configurations, we recommend using the submit.identity
	    configurable to enable automatic generation of changelist
	    identities by the submit command, unless you have an alternate
	    algorithm which you prefer to use for generating universal
	    changelist identity values.

	#1012383 **
	    'p4 fetch' now accepts the -t argument, specifying that conflicting
	    work should be moved into a tangent in the tangent depot,
	    automatically creating that depot if it doesn't yet exist. The
	    tangented changes can then be resubmitted using 'p4 resubmit'. The
	    new -t flag replaces the now obsolete -u flag.

	#1009476 (Bug #77230) **
	    'p4 diff2' now defaults to diffing the current stream (if any)
	    vs its parent stream if no other branch view is specified.

	#1003898 (Bug #79398) **
	    New trigger types push-submit, push-content, and push-commit
	    allow for policy enforcement and tool integration for changes
	    that are imported into a server via the push, fetch, or unzip
	    commands. These new triggers are largely similar in behavior
	    to the corresponding change-* triggers. The unzip command only
	    runs these triggers if the --enable-dvcs-triggers flag is set.

	#991320 (Bugs #56642, #59382, #59911, #67993, #70484, #71465, #71466) *
	    Enhancements to the P4IGNORE rule syntax:
	    - Unix path separators '/' are now handled on Windows as if they
	      were Windows paths. Rules using Unix paths will now work on all
	      platforms.
	    - Rules with leading slashes apply to files and folders relative to
	      the P4IGNORE file containing the rule. For example, '/*.c' will
	      only cause C files in the same directory as the P4IGNORE file to
	      be ignored.
	    - Rules with trailing slashes only affect directories.
	    - The '**' wildcard is expanded to the '...' wildcard.

Bugs fixed in  2015.2 Patch 2 

	#1310642 (Bug #83924) **
	    Fixed a rare crash in 'p4 interchanges'.

	#1305592 (Bug #83604) **
	    Edge servers fail client authentication when net.mimcheck=5.

Bugs fixed in 2015.2 Patch 1 

	#1258290 (Bug #83276) **
	    ChangeViews were not being honored in Stream import+ path
	    definitions.  Various commands were not honoring at the designated
	    change, and submits to the target were being allowed - when the
	    ChangeView should make the target read-only.  This has been fixed.

	#1256052 (Bug #81415) **
	    Edge servers replicating an obliterate from a commit server
	    could write unnecessary journal delete records for local labels.

	#1256002 (Bug #81478) **
	    Submitting an 'open' stream (new in this release) would lock the
	    db.domain table for longer than necessary.

	#1255960 (Bug #81403) **
	    A DVCS 'fetch -t' command which encounters an internal error
	    relocating the conflicting changes will no longer loop forever
	    retrying the failed change relocation.

Bugs fixed in 2015.2

	#1245120 (Bug #81186) **
	    With 'peeking' enabled and a very high submit concurrency rate, the
	    maxCommitChange counter may get updated in the wrong order by a
	    DVCS fetch or push command. The bug might cause some transient
	    inconsistency (most likely with aggressive automation that
	    tracks submits).

	#1244865 (Bug #77040) **
	    Large fech/push operations are now more concurrent. Specifically,
	    the write lock on the db.counters table is held for a much
	    shorter duration.

	#1242773 (Bug #81040) **
	    The server.locks.archive configurable introduced by #898102 now
	    also applies to the 'p4 restore' command.

	#1239015 (Bug #80722) **
	    A file which was integrated from a streams depot to a local
	    depot, or vice versa, would be placed into the wrong location in
	    the proxy cache if it was accessed via the proxy by a command
	    such as 'p4 sync' or 'p4 print'. Note that the symptom of this
	    bug is in the proxy cache, but the fix is in the server.

	#1236012 (Bug #80864) **
	    A mistake in the 'p4 remote' file mapping lines will no longer
	    allow a 'p4 fetch', 'p4 push', or 'p4 zip' command to generate
	    filenames with illegal depot syntax.

	#1235448 (Bug #80818) **
	    If a fetch, push, or unzip command imported a move/delete revision
	    which was created by a pre-2013.1 server, and the revision of
	    that file immediately prior to the move/delete revision was an
	    integration from a location which was not covered by the remote
	    map used by the fetch/push/unzip command, the metadata for the
	    move/delete revision could be damaged.

	#1231617 (Bug #74532 ) **
	    A 'p4 client' command of a stream client which generates no views
	    due to exceeding map.joinmax1 will now display an appropriate 
	    message.

	#1228456 (Bug #73450) *
	    Concurrent p4 login and p4 logout commands could loose
	    tickets in the P4TICKETFILE.  Similar problems are possible
	    with concurrent p4 trust commands.  Fixed by creating a
	    .lck lock file next to the ticket file to avoid the
	    concurrent login problem.  This .lck file will be removed
	    if it is several minutes old.

	#1228149 (Bug #80494) **
	    A change with a missing db.desc record could cause a server crash
	    if that change was accessed by a fetch, push, or zip command.

	#1227692 (Bug #80086) **
	    Correct high ascii character handling when the Windows Server is
	    in unicode mode, related to long file name handling.

	#1227632 (Bug #80379) * **
	    On Windows an uninitialized variable could cause a file
	    rename to fail.  This has been corrected.

	#1225187 (Bug #74936) **
	    A 'sync --parallel' command issued via a forwarding replica would
	    complete immediately, but would sync no files.

	#1223646 (Bug #80332) **
	    If a fetch/push command was issued with a Commit Server or Edge
	    Server as the destination of the fetch/push, and the set of files
	    being copied included some files of type +l, and the command was
	    interrupted or cancelled (e.g., using ^C), then the files of type
	    +l were left exclusively locked by a client with an invalid
	    client name (the name was wrongly prefixed by a double slash).

	#1214354 (Bug #78784) **
	    Submitting to a combination of task stream path and Import+ path 
	    in the same changelist is not allowed, but not prevented. This
	    change catches the combination and rejects the submit, the user
	    has to resubmit changes to the filepaths in separate submits.

	#1203118 (Bugs #79647, #79739) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server, and would
	    mis-handle the mount2, mount3, stream, serverid, and partition
	    fields if replaying db.domain journal records written by a
	    2002.1 through 2004.2 server.

	#1202710 (Bugs #44639, #63140, #74807) **
	    The verify command now supports the -S flag to specify that
	    shelved files are to be verified. This flag can also be combined
	    with the -t flag on a replica to schedule the transfer of any
	    missing or damaged shelf archives from the master server.

	#1199869 (Bug #79507) **
	    LDAP connections are now reused were possible to avoid unnecessary
	    overhead.

	#1172454 (Bug #79504) **
	    A submit initiated on an Edge Server which failed due to a
	    problem detected after the edge-content trigger had been checked
	    could leave the changelist incorrectly marked as "shelved", and
	    possibly also as "promoted", on the Commit Server, although the
	    changelist was correctly recorded on the Edge Server itself.
	
	#1172019 (Bug #79473) *** ** *
	    The Windows support for filenames longer than 260 characters will
	    now handle highbit ascii characters correctly.

	#1171745 (Bug #75750) **
	    The replica server now makes an attempt to detect an
	    incorrect configuration of the lbr.replication setting.

	#1144449 (Bug #77333) **
	    The configurables 'P4NAME', 'db.replication' and 'lbr.replication'
	    may no longer be set globally; a serverid must be specified.

	#1142007 (Bug #79341) **
	    Since change 1017756, in a Commit/Edge configuration, when
	    'p4 shelve -d' deleted a promoted shelf, the fix records for
	    jobs which were attached to the pending changelist were
	    incorrectly removed.

	#1130240 (Bug #79361) *
	    'p4 reconcile' could crash the client when run with a unicode
	    server if filenames have unmapped unicode characters. This has
	    been fixed.

	#1130149 (Bug #73821) **
	    Unloading or deleting clients could leave abandoned shelves on
	    servers.  This change allows an admin user to force delete '-df'
	    a shelf that has been left in this state.

	#1128864 (Bugs #70118,#70738) **
	    Windows servers using the serverlog.maxmb setting will no longer
	    generate duplicate server log files when rotation occurs under
	    heavy load. As a result of this change, server lockfiles under
	    the 'server.locks/meta' subdirectory are no longer stored in
	    numbered subdirectories, so the lockfiles will be named
	    'server.locks/meta/db', 'server.locks/meta/journal', etc.

	#1128635 (Bug #79104) **
	    Since change 616010, the 'p4 sync' and 'p4 integrate' commands
	    have been enforcing the MaxResults limit, if set, on the size of
	    the intermediate results of the sync or integrate command,
	    which could in some situations mean that the user's MaxResults
	    setting had to be large enough to contain their entire have list.
	    Now the MaxResults limit is enforced only on the size of the
	    final results of the sync or integrate command.

	#1127279 (Bug #79353) **
	    A 'sync --parallel' command which sync'd any files of type 'binary'
	    would write an incorrect value for the 'type' field of the db.have
	    record for the binary file(s). This could cause problems later
	    when integrating changes into these files from other branches.
	    Any workspaces potentially affected by this bug should be sync'd
	    to revision #0 and then re-sync'd for all files of type binary at
	    their convenience in order to rewrite the db.have records.

	#1123323 (Bug #74970) **
	    Structured log entries for commands that have passed through a
	    proxy now log both the originating client's IP address and the IP
	    address of the last proxy server. This is stored in the same format
	    as the server log: 'client/proxy'. Setting 'log.originhost=0' will
	    cause the structured log to only log the IP address of the last
	    proxy server, like previous releases.

	#1099636 (Bug #78495) **
	    When relocating a client from one edge server to another using
	    unload/reload, any unpromoted shelves of the moved client would 
	    no longer be accessible on the server they reside.

	#1098936 (Bug #77687) **
	    The 'p4 init' and 'p4 clone' commands can now be used from a
	    directory with a name containing one of the Perforce wildcard
	    characters (@/#/%/*).

	#1098709 (Bug #74268) **
	    For 'p4 sync --parallel', 'min=N' now defaults to 9, and
	    'minsize' now defaults to 576 KB.

	#1098514 (Bug #76009) **
	    The P4Admin depot deletion tool no longer reports the 'Can't snap
	    active task stream files' error when deleting an empty depot which
	    has no relationship to any active task streams.

	#1072106 (Bug #79234) **
	    'p4 fetch' and 'p4 push' now correctly purge old archives when
	    importing new revisions of a file of type +S.

	#1071810 (Bug #71853, #75135) **
	    'p4 sync --parallel' and 'p4 submit --parallel' would report
	    a misleading error message when the number of threads requested
	    exceeds the configurable 'net.parallel.max'. This has been fixed.

	#1070381 (Bug #79139) **
	    The zip file written by 'p4 zip -A' was missing archive content
	    for branched files if the '-r' flag was omitted.

	#1070377 (Bug #79171) **
	    A 'p4 fetch/push/unzip' command on a highly active server could
	    diagnose conflicts incorrectly.

	#1070043 (Bug #78498) **
	    The temp file created when a trigger is run from the depot
	    now preserves the original file extension since some script
	    engines refuse to run the file otherwise.

	#1069734 (Bug #79181) **
	    The error message issued by change 696998 is improved to more
	    clearly describe the reason that the file can't be archived.

	#1068648 (Bug #79162) **
	    Replica servers wouldn't log the completion of some commands that
	    run on the replica before being forwarded to the master.

	#1068615 (Bug #57220) **
	    Protocol variable names are now case-insensitive.

	#1065877, #1067450 (Bug #79100, #79035) **
	    The configurables 'rpl.forward.all' and 'rpl.forward.login' now only
	    affect replica servers. Additionally, replica servers will no longer
	    start if P4TARGET is not provided.

	#1067300 (Bug #76977) **
	    A fetch command which was interrupted before completing could
	    leave corrupted RCS archive files on the destination server.

	#1065376 (Bug #77360) **
	    In a distributed configuration, the 'edit -n' and 'delete -n'
	    commands for a file of type +l might incorrectly report that
	    the file was opened by another user, though it was not.

	#1065313 (Bugs #76987,#77274,#79028,#79029,#79036) **
	    'p4 push' and 'p4 fetch' could mishandle file locks. In some cases,
	    they would report locking conflicts when no such conflict existed;
	    in other cases they would fail to detect locking conflicts. When
	    'unlock -r' was used to unlock files after a failed push, it would
	    leave them open. 'p4 push' was incorrectly allowing a push to be
	    initiated by a workspace which exists in the destination server.
	    In some cases, 'p4 unlock -r' could crash.

	#1063251 (Bug #78965) **
	    'p4 fetch' on a case-insensitive server would fail with a file
	    transfer error when fetching multiple revisions of a file of type
	    text if the revision names differed in case.

	#1061247 (Bugs #78830,#78915) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly write its own journal file under conditions of high
	    concurrency on the master, resulting in incorrect behavior and
	    problems with replicas of this replica.

	#1060249 (Bugs #78781#78812) **
	    p4 push/fetch/unzip now correctly detect the conflict if a file
	    is moved simultaneously on two different servers to different
	    destination filenames.

	#1059769 (Bug #78855) * **
	    'p4 sync --parallel' now works with certain custom licenses.

	#1058411 (Bug #78785) **
	    If a replica with rpl.checksum.change set to 2 or higher
	    encountered an internal error processing a changelist checksum
	    note, it would halt replication. Now, it logs the error but
	    resumes replication.

	#1057142 (Bug #75822) **
	    The commands 'p4d -jd', 'p4d -jv', 'p4d -xv', and 'p4d -xx', if
	    issued on a read-only copy of a server configured with one or more
	    structured server logs, would issue incorrect messages about
	    permissions errors on the structured server log files.

	#1056616 (Bugs #26763,#26824,#61456,#70297) **
	    Some integer overflow problems in the display of server performance
	    tracking data to the server log have been addressed. Tracking log
	    data for extremely large queries will now display accurate results.

	#1055820 (Bug #72351) **
	    A Windows server installed as a Windows Service, which has been
	    given a server.id which does not match the Windows Service Name,
	    will now use the server.id as its name in preference to the
	    Windows Service Name.

	#1054521 (Bug #70899) **
	    On a server with a spec depot configured, if the spec depot
	    archive file cannot be written, the spec revision is now
	    marked as purged.

	#1054354 (Bug #56725) **
	    A 'p4 print' of a binary file, if it did not specify -o, and did
	    not go through a proxy or forwarding replica, would send the wrong
	    message if the archive file was missing on the server. Instead of
	    sending a 'file not found' message to the client, it would send
	    "Operation 'client-OutputBinary' failed."

	#1054186 (Bug #73951) **
	    Shelving a file that is open for integrate from a revision that is
	    hidden by the client's ChangeView will no longer produce an error.

	#1050954 (Bug #78647) **
	    On an Edge Server with submit.unlocklocked=1, a submit which fails
	    with "Out of date files must be resolved or reverted" could
	    incorrectly alter the resolve state of the open files if the
	    conflicting change was submitted simultaneously.

	#1050337 (Bug #78593) **
	    Spec update commands now enforce filesys.P4ROOT.min and
	    filesys.P4JOURNAL.min.

	#1047418 (Bug #78444) **
	    The replica-specific table db.user.rp is now journaled. This means
	    that the table data will appear in checkpoints, journals and
	    dumps. The replica pull thread automatically filters out all
	    db.user.rp records from its P4TARGET server, which is normally the
	    desired behavior, since records in this table are unique to each
	    replica's activity. However, for maintaining warm standby replicas
	    of other replicas, you can set rpl.replay.userrp=1 for the standby
	    replica to disable the filtering and replicate db.user.rp data.

	#1046909 (Bugs #77390, #77461) **
	    The 'p4 change -d -f' and 'p4 client -d -f' commands now perform
	    more argument checking in a distributed configuration. If a client
	    is bound to a different server, 'p4 client -d -f' no longer allows
	    that client to be deleted, and 'p4 change -d -f' no longer allows
	    that client's pending changes to be deleted. In order to override
	    these checks, the 'p4 change -d -f' and 'p4 client -d -f' commands
	    now accept the '--serverid=X' flag, which can be specified when
	    running these commands on the Commit Server to force the deletion
	    of clients and their changes which are bound to an Edge Server.

	#1046908 (Bug #78471) **
	    The 'p4 info' command now includes information about the server
	    services, if this server has a 'p4 server' spec, and about the
	    replica target, if this server is a replica. This information was
	    previously present only when the tagged form of 'p4 info' was used.

	#1046060 (Bug #73967) **
	    'p4 -ztag servers' could report incorrect values for the 'User'
	    field for server specs upgraded from an older release.

	#1045565 (Bug #78497) **
	    Promoting a shelf, then subsequently deleting it, using the same
	    network connection to the Edge Server could fail to properly
	    delete the shelf.

	#1042783 (Bug #78427) *
	    'p4 -P <ticket> sync --parallel' will no longer give authentication
	    errors for the file transfer sub-processes.

	#1042222 (Bug #68933) **
	    Fixed unpromoted changelists being omitted from "p4 changes" output
	    for large task streams.

	#1042162 (Bug #77612) **
	    Fixed spurious "can't purge active task stream files" when running
	    obliterate with a narrow revision range across a wide depot path.

	#1040989 (Bug #77820) **
	    Increased the default value of 'net.backlog' from 10 to 128
	    to make the server more resilient to heavy usage spikes.

	#1039831 (Bugs #73075, #74961) **
	    The revision specifier @client was not working properly for
	    clients bound to a build-server.

	#1039277 (Bug #78383) **
	    A 'p4 describe' command which accesses a remote promoted shelf now
	    properly reports any communications-related error conditions which
	    occur when retrieving the remote shelf.

	#1039178 (Bug #77617) **
	    'p4 resubmit' can now resubmit an unsubmitted change which
	    involved the oldest non-purged revision of a file of type +S.

	#1070355 (Bug #77551) **
	    'p4d -i' when run under inetd on unix no longer shows 'unknown'
	    for all addresses.

	#1037755 (Bug #76982) *
	    If a 'p4 sync --parallel' child process encounters an error
	    writing files to the local machine, the parent 'p4 sync' command
	    now returns a non-zero exit status to the operating system.

	#1037679 (Bug #78142) **
	    The 'p4 admin resetpasword' command now allows the passwords of
	    users who authenticate against the Perforce database to be reset
	    when LDAP authentication is enabled.

	#1037486 (Bug #76283) **
	    Performance of 'p4d -z -jv <file>' is substantially improved.

	#1140112 (Bug #71839) **
	    When 'p4 shelve -d -c NNN' was used on an Edge Server to delete a
	    promoted shelf, an error message 'Change NNN unknown' was
	    incorrectly reported in the Edge Server log.

	#1037192 (Bug #78009) **
	    It is no longer allowed to create a client named
	    _____CLIENT_UNSET_____. Any existing client by this name can
	    still be used, but you should plan to delete such a client (if you
	    have created one) as soon as possible, for it can interfere with
	    the use of P4V against this server.

	#1036485 (Bug #77069) **
	    A 'p4 describe -S' command on an Edge Server which specified more
	    than 1 promoted shelf which was created on a different Edge Server
	    would fail with an 'Unknown changelist' message.

	#1036596 (Bug #77433) **
	    In a distributed configuration, 'p4 unshelve' no longer takes
	    the global exclusive file lock for a file of type +l which is
	    unshelved for add.

	#1035121 (Bug #78036) **
	    The 'p4 attribute' command is not allowed on a server which was
	    created by 'p4 init'; also, when a revision is copied to another
	    server by the 'p4 fetch', 'p4 push', or 'p4 unzip' commands, its
	    traitLot field is automatically cleared in the destination.

	#1034765 (Bug #75636) **
	    A server which has a P4NAME, but does not have a server.id file,
	    will now read the configuration information from the server spec
	    with ServerID = <that P4NAME>, if such a server spec exists.

	#1032558 (Bug #78084) **
	    'p4 push -n -v' and 'p4 fetch -n -v' no longer report that
	    changelists to be pushed/fetched would be renumbered as change #0.

	#1032010 (Bug #74056) **
	    'p4 sync --parallel' would fail to expand RCS keywords properly.

	#1031176 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030772 (Bug #77871) **
	    'p4 -ztag pull -l -s' now provides tagged output.

	#1030313 (Bug #77559) **
	    A build-server replica would incorrectly process the View: field
	    for labels, causing the wrong set of revisions to be specified
	    by the label.

	#1028751,#1204292 (Bug #56707) **
	    The presence of a client spec with the same name as the TCP/IP
	    address of a replica machine no longer causes that replica to
	    issue the error: "Don't know how to translate paths for OS ''".

	#1028372,#1028461 (Bug #77558) **
	    A replica with lbr.replication=cache was not able to access
	    labels using the autoreload option.

	#1027668 (Bug #77595) **
	    'p4 export -f' now formats the domain type column correctly for
	    unloaded clients, unloaded labels, and unloaded task streams.

	#1026707 (Bug #77504) ** *
	    'p4 -Zproxyload sync --parallel=...' now correctly updates the
	    proxy's archive cache without sending files to the client.

	#1026534 (Bug #77280) **
	    If a change submitted via an Edge Server was rejected by a
	    change-submit or change-content trigger on the Commit Server,
	    the change's files were modified to read-only mode on the client
	    machine rather than being left in writable mode.

	#1026233 (Bug #77435) **
	    A 'p4 integ' or 'p4 unshelve' command on an Edge Server which
	    failed to open a +l file due to a client-side file transfer error
	    would leave an orphaned lock record in db.excl.

	#1025869 (Bug #77886) **
	    A parsing problem with the 'p4d -i' flag is resolved.

	#1025619 (Bug #77726) **
	    'p4 unsubmit' commands which have multiple arguments, and which
	    terminate due to an error while processing an argument other than
	    the first, now correctly sync the workspace with all the work
	    that was successfully unsubmitted prior to that error.

	#1025545 (Bugs #77656, #77672) **
	    Audit log records for the push, fetch, zip, and unzip commands,
	    in both the structured audit log and the P4AUDIT log, now have
	    improved precision and additional detail.

	#1025484 (Bug #77626) **
	    The 'p4 unsubmit' and 'p4 resubmit' commands are not available
	    on an Edge Server, and issuing them against an Edge Server now
	    gives an error message.

	#1025380 (Bug #77326) **
	    'p4 zip' no longer creates an empty zip file if the specified
	    fileset is empty.

	#1024502 (Bug #77719) *
	    The 'p4 init' or 'p4 clone' commands, when they connect to a
	    shared server, would cause log records to be written as an
	    "unknown" client program and "unknown" program version.

	#1011878 (Bug #77507) **
	    Integrate now reports "integrated in pending changelist" when
	    repeatedly integrating into a moved file.

	#1002449 (Bug #77266) **
	    On a replica server, 'p4 monitor show' incorrectly displayed
	    paused background threads as terminated, and 'monitor show -s P'
	    didn't display paused background threads at all.

	#996993 (Bug #75866) **
	    A replica which has ArchiveDataFilter specified in its server
	    spec will now pull archive contents for lazy copied files which
	    satisfy the filter.

	#996812 (Bug #76749) **
	    On a Windows server, a depot with Map: field specified using
	    Windows-style path syntax (E:\depot\...) could not be deleted
	    with depot -d even though the directory was in fact empty.

	#998869 (Bug #73278) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly report that a changelist checksum differed if the
	    changelist was submitted by a workspace with SubmitOptions =
	    revertunchanged and at least one unchanged file was reverted
	    during the submission of that changelist.

--------------------------------------------------------------------------

Major new functionality in 2015.1

	#877419 ** *
	    DVCS workflow support has been added to Perforce. Use this new
	    functionality to accomplish the following goals:

	    1) You can create a 'personal server' that you can use to manage
	       versioned content all by yourself, without interacting with
	       any other Perforce server unless you want to.

	    2) You can copy work between Perforce servers to implement
	       various collaboration workflows.

	    3) You can rewrite and revise history to discard unwanted
	       intermediate information.

	    Use the 'p4 init' command to create a new personal repository,
	    or use the 'p4 clone' command to create one with files from an
	    existing server.  Use the 'p4 switch' command to create new
	    streams, and to switch back and forth between existing streams.

	    Use the 'p4 fetch' and 'p4 push' commands to copy work back and
	    forth between servers, either peer-to-peer or in a hub-and-spoke
	    or hierarchical arrangement. Use the 'p4 remote' and 'p4 remotes'
	    commands to manage connections to multiple partner
	    repositories.

	    Use the 'p4 unsubmit' and 'p4 resubmit' commands to rewrite and
	    revise history prior to pushing that work to other servers.

	    The new fetch, push, and unsubmit functionality is disabled by
	    default, even after upgrading your server executable to 2015.1. To
	    enable the new functionality, you must set the 'server.allowpush',
	    'server.allowfetch', and/or 'server.allowrewrite' configurables
	    to enable the desired level of operation.

	    New trigger types and trigger variables are available.

	    See 'p4 help dvcs' for complete information.

	#856900 **
	    Compression of db.have table. By encoding the depot path field
	    with an offset into the client path field, db.have records have
	    been reduced by up to 35%.  Checkpoint and journal files will 
	    continue to have the expanded form.  This space saving will 
	    happen over time as clients get resynced. Admins who regularly
	    restore from a checkpoint will notice this the first time the
	    table is restored.

Minor new functionality in 2015.1

	#1010616 (Bug #77331) **
	    The server spec has a new field, 'ExternalAddress', to specify
	    the external address on an edge server that is used for
	    connections from a commit server. Although it is an optional
	    field, it must be set in the edge server spec in order for
	    parallel submit commands to work in a federated environment.

	#986989 (Bug #53185) * **
	    'p4 submit' now accepts the '--parallel' flag, to specify that
	    multiple files should be transferred in parallel, using
	    independent network connections from automatically-invoked child
	    processes. In order to run a parallel submit, the configurable
	    net.parallel.max must be set to a value greater than 1.

	#976359 (Bug #76507) **
	    The 'p4 unlock' command now includes the -r flag to allow unlocking
	    files left locked by a failed 'p4 push' or 'p4 fetch' command.

	#969791 (Bug #75172) **
	    Peek locking information now reported along with normal
	    lock information

	#968391 (Bug #74665) **
	    'p4 rec' is a now a synonym for 'p4 reconcile'.

	#967271 (Bug #75557) **
	    Now 'p4 status' displays files already opened in addition to
	    files that need to be reconciled.

	#966422 (Bug #75520) **
	    New command 'p4 admin setldapusers' allows a super user to update
	    all non-super, standard users to use LDAP authentication in a single
	    command.

	#965070 (Bug #76237) **
	    Previously 'p4 servers' and 'p4 servers -J' could not be run by an
	    operator.  Now an operator can run the 'p4 servers [-J]' commands,
	    which allow operators to monitor the replication status of a
	    group of replicas.

	#964882 **
	    'fstat -Oh' is now lockless on db.rev and db.revtx at db.peeking=3.

	#964603 (Bug #55582) **
	    Previously 'p4 journalcopy' and 'p4 pull' could be run only by a
	    superuser.  Now an operator can run 'p4 pull -l -j', 'p4 pull -l',
	    and 'p4 journalcopy -l'.  This allows operators to monitor the
	    replication status of a replica.

	#963443 (Bug #65298, #74627) **
	    The new 'mergeany' stream option allows flow rules for 'p4 merge'
	    to be ignored for a particular stream.  The default option of
	    'mergedown' preserves the previously existing flow rules.  Streams
	    created by 'p4 switch' on a personal server use 'mergeany'.

	#963085 (Bug #75519) **
	    The LDAP automatic user creation feature enabled as part of setting
	    'auth.default.method' to 'ldap' has been moved to a new configurable
	    'auth.ldap.userautocreate'. In order to allow 'p4 login' to create
	    user automatically after successful authentication against an LDAP
	    server, the 'auth.default.method' configurable must be set to 'ldap'
	    and the 'auth.ldap.userautocreate' must be set to 1.

	#962982 (Bug #75562) **
	    New simpler syntax for 'p4 merge' with streams.  If no arguments are
	    specified, the target defaults to the current stream, and the source
	    defaults to the current stream's parent.  A different source can be
	    specified with '--from STREAMNAME', which is an alias for '-P'.  The
	    stream may be specified as a directory name relative to the current
	    stream depot, e.g. '--from main' instead of '--from //Ace/main'.

	#962680 (Bug #19474) **
	    New command 'p4 ldapsync -g' updates Perforce groups' users list to
	    match the members of an LDAP group. This requires LDAP fields on the
	    group specifications to be set for any group that is to be
	    synchronized with an LDAP group.

	#959007 (Bug #75748) **
	    The read-only LDAP search user's password is no longer stored in
	    cleartext in the LDAP configuration spec files.

	#952949 **
	    'p4 sync' will now automatically resolve files where the previously
	    synced version does not differ from the newer depot revision.

	#946084 (Bug #64757) **
	    'p4 revert' now supports a new flag '-C client'. This flag allows 
	    a user with admin privilege to revert files opened in another
	    client.  

	#938958 (Bug #4063) *** ** *
	    The Windows platform can now support filenames longer than
	    260 characters.  The filesys.windows.lfn=1 tunable must be set
	    where ever this functionality is required, Client and Server.

	#936955 (Bug #75207) **
	    'p4 reconcile' will now detect files that are open for delete but
	    are physically present on the client, and reopen them for edit.

	#930083 (Bug #71699) **
	    'p4 interchanges' now reports changes that consist solely
	    of 'ignored' integrates if those changes have not yet been
	    integrated into the target.

	#907436 **
	    The new '-r' flag for 'p4 sync' permits pending work to be carried
	    over to a different file when the client view is changed.  For 
	    example, pending work can be moved to a different stream by running
	    'p4 client -f -s' followed by 'p4 sync -r'.

	#901864 * **
	    'p4 status -s' previews files needing reconcile, but lists
	    files to be opened for add in subdirectories rather than
	    individually.

	#900158 (Bug #68860) **
	    'p4 add' now traverses the workspace when given a file argument
	    containing '...', similar to 'p4 reconcile -a'.

	#897834 (Bug #74382) *
	    'p4 -G' now accept marshalled inputs from Python version 3 or 
	    later.

	#861918 (Bug #72999) **
	    An unnecessary update to the db.locks table has been removed from
	    the file transfer phase of 'p4 submit'.

Bugs fixed in 2015.1 PATCH10

	#1250127 (Bug #81342) **
	    Under certain conditions a 'change-failed' trigger could run while
	    the parent 'submit' process was holding locks, this could cause
	    a deadlock.

	#1249596 (Bug #81329) **
	    'p4 changes -s pending' could scan the db.workingx database 
	    table unnecessarily when a lot of restricted shelved changes 
	    are present.

	#1248997 (Bugs #79381, #79384) * ** ***
	    With Windows long filename support enabled, submitting a text 
	    file with a depot repository name just over 260 characters in 
	    length could cause the submit to fail.

	#1247146 (Bug #81257) **
	    'p4 submit' from an edge server was incorrectly applying the
	    shelve configurables 'dm.shelve.maxfiles' and 'dm.shelve.maxsize'
	    as part of its file transfer process.

	#1244865 (Bug #77040) **
	    Large fech/push operations are now more concurrent. Specifically,
	    the write lock on the db.counters table is held for a much
	    shorter duration.

	#1242778 (Bug #81040) **
	    The server.locks.archive configurable introduced by #898102 now
	    also applies to the 'p4 restore' command.

Bugs fixed in 2015.1 PATCH9

	#1240752 (Bug #80943) **
	    'p4 integrate' can suffer from performance problems (excessive 
	    db.revhx scanning) when using wildcards at a shallow depth.
	    This has been fixed.

	#1239015 (Bug #80722) **
	    A file which was integrated from a streams depot to a local
	    depot, or vice versa, would be placed into the wrong location in
	    the proxy cache if it was accessed via the proxy by a command
	    such as 'p4 sync' or 'p4 print'. Note that the symptom of this
	    bug is in the proxy cache, but the fix is in the server.

	#1236012 (Bug #80864) **
	    A mistake in the 'p4 remote' file mapping lines will no longer
	    allow a 'p4 fetch', 'p4 push', or 'p4 zip' command to generate
	    filenames with illegal depot syntax.

	#1235448 (Bug #80818) **
	    If a fetch, push, or unzip command imported a move/delete revision
	    which was created by a pre-2013.1 server, and the revision of
	    that file immediately prior to the move/delete revision was an
	    integration from a location which was not covered by the remote
	    map used by the fetch/push/unzip command, the metadata for the
	    move/delete revision could be damaged.

	#1235330 (Bug #80774) **
	    Improve security by increasing randomness in tickets generated 
	    by 'p4 login'.

	#1234699 (Bug #79472) **
	    'p4 copy' will no longer consider invisible charset metadata when
	    determining whether two files are already identical.

 	#1234699 (Bug #80762) **
 	    'p4 resolve -at' between files with differing charsets will now
 	    copy the charset metadata even if server.filecharset is not set.
 	    This prevents the 'copy from' resolve record from downgrading to
 	    a 'merge from' due to the charset difference.

	#1228149 (Bug #80494) **
	    A change with a missing db.desc record could cause a server crash
	    if that change was accessed by a fetch, push, or zip command.

	#1225954,1226981 (Bug #80379) * **
	    On Windows an uninitialized variable could cause a file
	    rename to fail.  This has been corrected.

Bugs fixed in 2015.1 PATCH8

	#1225954 (Bug #80379) * **
	    On Windows an uninitialized variable could cause a file
	    rename to fail.  This has been corrected.

	#1225235 (Bug #74936) **
	    A 'sync --parallel' command issued via a forwarding replica would
	    complete immediately, but would sync no files.

	#1223646 (Bug #80332) **
	    If a fetch/push command was issued with a Commit Server or Edge
	    Server as the destination of the fetch/push, and the set of files
	    being copied included some files of type +l, and the command was
	    interrupted or cancelled (e.g., using ^C), then the files of type
	    +l were left exclusively locked by a client with an invalid
	    client name (the name was wrongly prefixed by a double slash).

	#1222805 (Bugs #72888, 80283) * ** ***
	    When using SSL with an X.509 certificate whose key size is
	    greater than 2048 bits, then servers and clients could crash
	    or (possibly) exhibit other incorrect behavior while calculating
	    the certificate fingerprint during connection establishment.
	    Similarly, 'p4d -Gf' and 'p4p -Gf' could crash while calculating
	    the certificate fingerprint.  This has been corrected.

	#1218770 (Bug #38284) **
	    Fixed a case where 'p4 annotate -i/-I' could perform excessive
	    database scans and consume large amounts of memory with a combination
	    of extensive integration history and a complex protection table.

Bugs fixed in 2015.1 PATCH7

	#1216917 (Bug #80122) **
	    Change #1128864 addressing server log rotation issues on windows 
	    server platform introduced some instability into the server that
	    could cause a recursive loop leading to a crash. 

	#1216335 (Bug #80086) **
	    Correct high ascii character handling when the Windows Server is
	    in unicode mode, related to long file name handling.

	#1215896 (Bug #78784) **
	    Submitting to a combination of task stream path and Import+ path
	    in the same changelist is not allowed, but not prevented. This
	    change catches the combination and rejects the submit, the user
	    has to resubmit changes to the filepaths in separate submits.

	#1215836 (Bug #79924) **
	    Extremely rare Btree problem would cause the p4d service to hang
	    while database tables are locked.  Fixed.

	#1213580 (Bug #79647) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server.

Bugs fixed in 2015.1 PATCH6

	#1204381, #1028849 (Bug #56707) **
	    The presence of a client spec with the same name as the TCP/IP
	    address of a replica machine no longer causes that replica to
	    issue the error: "Don't know how to translate paths for OS ''".

	#1202710 (Bugs #44639, #63140, #74807) **
	    The verify command now supports the -S flag to specify that
	    shelved files are to be verified. This flag can also be combined
	    with the -t flag on a replica to schedule the transfer of any
	    missing or damaged shelf archives from the master server.

	#1201560 (Bug #79689) **
	    Files that have been renamed, copied over from unrelated files, and
	    then deleted will now resolve automatically when integrated into 
	    other branches where none of those things have happened.

	#1178443 (Bug #79473) *** ** *
	    The Windows support for filenames longer than 260 characters will
	    now handle highbit ascii characters correctly.

	#1172450 (Bug #79504, #79402) **
	    A submit initiated on an Edge Server which failed due to a
	    problem detected after the edge-content trigger had been checked
	    could leave the changelist incorrectly marked as "shelved", and
	    possibly also as "promoted", on the Commit Server, although the
	    changelist was correctly recorded on the Edge Server itself.
	
Bugs fixed in 2015.1 PATCH5

	#1142007 (Bug #79341) **
	    Since change 1017756, in a Commit/Edge configuration, when
	    'p4 shelve -d' deleted a promoted shelf, the fix records for
	    jobs which were attached to the pending changelist were
	    incorrectly removed.

	#1140112 (Bug #71839) **
	    When 'p4 shelve -d -c NNN' was used on an Edge Server to delete a
	    promoted shelf, an error message 'Change NNN unknown' was
	    incorrectly reported in the Edge Server log.

	#1130584 (Bug #79238) **
	    Searches for rename history when integrating renamed files will now
	    stop once a common ancestor has been found.

	#1128864 (Bugs #70118,#70738) **
	    Windows servers using the serverlog.maxmb setting will no longer
	    generate duplicate server log files when rotation occurs under
	    heavy load. As a result of this change, server lockfiles under
	    the 'server.locks/meta' subdirectory are no longer stored in
	    numbered subdirectories, so the lockfiles will be named
	    'server.locks/meta/db', 'server.locks/meta/journal', etc.

	#1128635 (Bug #79104) **
	    Since change 616010, the 'p4 sync' and 'p4 integrate' commands
	    have been enforcing the MaxResults limit, if set, on the size of
	    the intermediate results of the sync or integrate command,
	    which could in some situations mean that the user's MaxResults
	    setting had to be large enough to contain their entire have list.
	    Now the MaxResults limit is enforced only on the size of the
	    final results of the sync or integrate command.

	#1127296 (Bug #79353) **
	    A 'sync --parallel' command which sync'd any files of type 'binary'
	    would write an incorrect value for the 'type' field of the db.have
	    record for the binary file(s). This could cause problems later
	    when integrating changes into these files from other branches.
	    Any workspaces potentially affected by this bug should be sync'd
	    to revision #0 and then re-sync'd for all files of type binary at
	    their convenience in order to rewrite the db.have records.

	#1126925 (Bug #79178) **
	    A new configuration parameter 'rejectList' has been added to
	    reject certain application/version combinations from the server.
	    For example to reject the 2014.2 version of P4EXP:
	    configure set "rejectList=P4EXP,version=2014.2,Operating System"

Bugs fixed in 2015.1 PATCH4

	#1099652 (Bug #79317) **
	    Fixed a filename resolve base selection issue where a file had
	    been moved back and forth on a series of ancestor branches 
	    while being intermittently copied over.

	#1099588 (Bug #79249) **
	    The fix for bug #64713 has caused a regression with 'p4 reopen'
	    behavior with default changelists.  Consequently, change #782990 
	    has been backed-out.

	#1098936 (Bug #77687) **
	    The 'p4 init' and 'p4 clone' commands can now be used from a
	    directory with a name containing one of the Perforce wildcard
	    characters (@/#/%/*).

	#1098195 (Bug 79298) **
	    Change #771609 introduced a performance regression with
	    'p4 filelog' that could cause excessive scanning of db.integed.

	#1097831 (Bug #72558) ** *
	    On Mac OS X, Perforce variables are no longer retrieved from user
	    or system preferences in your Mac preferences folder. The Perforce
	    variables on Mac OS X now behave in the same way as they do on other
	    Unix-like platforms, including the use of P4ENVIRO files. This means
	    that 'p4 set -s' no longer has any effect on Mac OS X.

Bugs fixed in 2015.1 PATCH3

	#1078790 (Bug #79275) **
	    Fixed a case involving a remerge after various move, delete, 
	    re-add, and copies.

	#1071011 (Bug #75098) **
	    'p4 cstat' now runs (fully) lockless when peeking is set to 3.

	#1070381 (Bug #79139) **
	    The zip file written by 'p4 zip -A' was missing archive content
	    for branched files if the '-r' flag was omitted.

	#1070377 (Bug #79171) **
	    A 'p4 fetch/push/unzip' command on a highly active server could
	    diagnose conflicts incorrectly.

	#1070360 (Bug #77551) **
	    'p4d -i' when run under inetd on unix no longer shows 'unknown'
	    for all addresses.

	#1070184 (Bug #79180) **
	    LDAP authentication using the SASL bind method now uses /dev/urandom
	    instead of /dev/random to avoid depleting the system's entropy pool.

	#1069094 (Bug #79106) **
	    Running many concurrent 'p4 unzip' processes could cause a server
	    crash and potential btree corruption.

	#1067856 (Bug #79123) **
	    Fixed a case where renamed files might not match up with each
	    other during an integrate if they were not branched from each 
	    other originally, but were instead subsequently copied over each 
	    other in a baseless integrate or copy.

	#1067584 (Bug #79110) **
	    In a distributed configuration, 'p4 submit -e --parallel' run
	    from an edge server would silently ignore valid parallel
	    options and would run in non-parallel mode. This has been fixed.

	#1066073 (Bug #79045) **
	    In a distributed configuration, the command 'p4 switch' could
	    error with the message 'Slashes (/) not allowed in <streamname>'.
	    This would cause the switch shelf (stash) to not be deleted.

	#1065481 (Bug #77360) **
	    In a distributed configuration, the 'edit -n' and 'delete -n'
	    commands for a file of type +l might incorrectly report that
	    the file was opened by another user, though it was not.

Bugs fixed in 2015.1 PATCH2

	#1063251 (Bug #78965) **
	    'p4 fetch' on a case-insensitive server would fail with a file
	    transfer error when fetching multiple revisions of a file of type
	    text if the revision names differed in case.

	#1062781 (Bug #74254 ) **
	    Tagged output for 'p4 submit' from an edge server no longer
	    generates duplicate entries for depotFile, rev, and change.

	#1062239 (Bug #78917 ) * **
	    'p4 submit --parallel' now works with certain custom licenses.

	#1062090 (Bug #79018) **
	    'p4 changes <filepath>' has been optimized by adding a flag
	    to terminate processing at an end point '-e changelist'.

	#1061247 (Bugs #78830,#78915) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly write its own journal file under conditions of high
	    concurrency on the master, resulting in incorrect behavior and
	    problems with replicas of this replica.

	#1059780 (Bug #78855) * **
	    'p4 sync --parallel' now works with certain custom licenses.
	    
	#1059694 (Bug #78818) *
	    Usernames containing backslash characters no longer cause 'p4 init'
	    or 'p4 clone' to fail.
	
	#1058704 (Bug #78785) **
	    If a replica with rpl.checksum.change set to 2 or higher
	    encountered an internal error processing a changelist checksum
	    note, it would halt replication. Now, it logs the error but
	    resumes replication.

Bugs fixed in 2015.1 PATCH1

	#1051000 (Bug #78647) **
	    On an Edge Server with submit.unlocklocked=1, a submit which fails
	    with "Out of date files must be resolved or reverted" could
	    incorrectly alter the resolve state of the open files if the
	    conflicting change was submitted simultaneously.

	#1047834 (Bug #78444) **
	    The replica-specific table db.user.rp is now journaled. This means
	    that the table data will appear in checkpoints, journals and
	    dumps. The replica pull thread automatically filters out all
	    db.user.rp records from its P4TARGET server, which is normally the
	    desired behavior, since records in this table are unique to each
	    replica's activity. However, for maintaining warm standby replicas
	    of other replicas, you can set rpl.replay.userrp=1 for the standby
	    replica to disable the filtering and replicate db.user.rp data.

	#1046060 (Bug #73967) **
	    'p4 -ztag servers' could report incorrect values for the 'User'
	    field for server specs upgraded from an older release.

	#1045565 (Bug #78497) **
	    Promoting a shelf, then subsequently deleting it, using the same
	    network connection to the Edge Server could fail to properly
	    delete the shelf.

	#1042871 (Bug #78427) *
	    'p4 -P <ticket> sync --parallel' will no longer give authentication
	    errors for the file transfer sub-processes.

	#1040963 (Bug #78416) **
	    The new command 'p4 switch' was incorrectly forwarding when
	    executed from an edge server.

	#1039853 (Bugs #73075, #74961) **
	    The revision specifier @client was not working properly for
	    clients bound to a build-server.

	#1039277 (Bug #78383) **
	    A 'p4 describe' command which accesses a remote promoted shelf now
	    properly reports any communications-related error conditions which
	    occur when retrieving the remote shelf.

	#1039178 (Bug #77617) **
	    'p4 resubmit' can now resubmit an unsubmitted change which
	    involved the oldest non-purged revision of a file of type +S.

	#1037755 (Bug #76982) *
	    If a 'p4 sync --parallel' child process encounters an error
	    writing files to the local machine, the parent 'p4 sync' command
	    now returns a non-zero exit status to the operating system.

	#1037486 (Bug #76283) **
	    Performance of 'p4d -z -jv <file>' is substantially improved.

	#1036596 (Bug #77433) **
	    In a distributed configuration, 'p4 unshelve' no longer takes
	    the global exclusive file lock for a file of type +l which is
	    unshelved for add.

	#1036485 (Bug #77069) **
	    A 'p4 describe -S' command on an Edge Server which specified more
	    than 1 promoted shelf which was created on a different Edge Server
	    would fail with an 'Unknown changelist' message.

	#1036167 (Bug #76002) **
	    Stream 'import+' paths are not being referenced when the stream
	    type is virtual.  This was causing warnings on 'p4 edit' and a
	    failure on 'p4 submit' of any files within these import+ paths.
	    Fixed.

	#1035768 (Bug #78164) **
	    In a distributed environment, the change-failed trigger now
	    runs on the commit server rather than on the edge server.

	#1035121 (Bug #78036) **
	    The 'p4 attribute' command is not allowed on a server which was
	    created by 'p4 init'; also, when a revision is copied to another
	    server by the 'p4 fetch', 'p4 push', or 'p4 unzip' commands, its
	    traitLot field is automatically cleared in the destination.

	#1033794 (Bug #75637) **
	    'p4 help administration' now lists the three LDAP related commands:
	    'p4 ldap', 'p4 ldaps' and 'p4 ldapsync'.

	#1033412 (Bug #78198) * ** ***
	    Updated version of OpenSSL to 1.0.1m to address possible
	    vulnerabilities: CVE-2015-0287, CVE-2015-0293, and
	    CVE-2015-0288.

	#1032558 (Bug #78084) **
	    'p4 push -n -v' and 'p4 fetch -n -v' no longer report that
	    changelists to be pushed/fetched would be renumbered as change #0.

	#1032010 (Bug #74056) **
	    'p4 sync --parallel' would fail to expand RCS keywords properly.

	#1031176 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030772 (Bug #77871) **
	    'p4 -ztag pull -l -s' now provides tagged output.

	#1030610 (Bug #77873) **
	    'p4 protects -u' for a service user was showing protects access to
	    content, although service users cannot be used to browse or update 
	    a repository.

	#1033960 (Bug #78106) **
	    In a distributed environment (edge/commit) promoting of shelves
	    to the commit server could result in a long duration lock being
	    held over multiple commands.  This would be more visible when
	    using P4V rather than the command line.

	#1033794 (Bug #75637) **
	    'p4 help administration' now lists the three LDAP related commands:
	    'p4 ldap', 'p4 ldaps' and 'p4 ldapsync'.

	#1032558 (Bug #78084) **
	    'p4 push -n -v' and 'p4 fetch -n -v' no longer report that
	    changelists to be pushed/fetched would be renumbered as change #0.

	#1033412 (Bug #78198) * ** ***
	    Updated version of OpenSSL to 1.0.1m to address possible
	    vulnerabilities: CVE-2015-0287, CVE-2015-0293, and
	    CVE-2015-0288.

	#1032557 (Bug #76351)
	    Performance problems in a distributed environment exhibited by
	    'p4 submit' and 'p4 shelve -p' introduced by change 969974 is
	    addressed. Specifically, file transfer time was degraded under
	    conditions of high latency when submitting or promoting changes
	    with many files.  This problem that was introduced in the
	    initial 2015.1 release has been fixed.

	#1032042 (Bug #74056) **
	    'p4 sync --parallel' would fail to expand RCS keywords properly.

	#1031202 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030772 (Bug #77871) **
	    'p4 -ztag pull -l -s' now provides tagged output.

	#1030698 (Bug #77559) **
	    A build-server replica would incorrectly process the View: field
	    for labels, causing the wrong set of revisions to be specified
	    by the label.

	#1030610 (Bug #77873) **
	    'p4 protects -u' for a service/operator user was showing protects 
	    access to content, although service/operator users cannot be used 
	    to browse or update a repository.

	#1030042 (Bug #77728) **
	    The 'min' argument of the '--parallel' options is now correctly
	    enforced when submitting through an edge server.

	#1029907 (Bug #78113) **
	    'p4 switch' and 'p4 switch -l' were taking out an unnecessary
	     client lock.

	#1029218 (Bug #78099) **
	    'p4 fetch' and 'p4 push' no longer cause an "unknown command"
	    error when the remote server is a DCS node.

	#1028633 (Bug #77558) **
	    A replica with lbr.replication=cache was not able to access
	    labels using the autoreload option.

	#1028018 (Bug #78012)
	    Performance problems in a distributed environment exhibited by
	    'p4 submit' and 'p4 shelve -p' introduced by change 969974 is
	    addressed. Specifically, file transfer time was degraded under
	    conditions of high latency when submitting or promoting changes
	    with many files.  This problem that was introduced in the
	    initial 2015.1 release has been fixed.

	#1027765 (Bug #77595) **
	    'p4 export -f' now formats the domain type column correctly for
	    unloaded clients, unloaded labels, and unloaded task streams.

	#1026750 (Bug #77504) ** *
	    'p4 -Zproxyload sync --parallel=...' now correctly updates the
	    proxy's archive cache without sending files to the client.

	#1026544 (Bug #77280) **
	    If a change submitted via an Edge Server was rejected by a
	    change-submit or change-content trigger on the Commit Server,
	    the change's files were modified to read-only mode on the client
	    machine rather than being left in writable mode.

	#1026312 (Bug #77435) **
	    A 'p4 integ' or 'p4 unshelve' command on an Edge Server which
	    failed to open a +l file due to a client-side file transfer error
	    would leave an orphaned lock record in db.excl.

	#1025869 (Bug #77886) **
	    A parsing problem with the 'p4d -i' flag is resolved.

	#1025589 (Bug #75647) **
	    'p4 unload -c' from an edge server now allows unloading of clients
	    with promoted shelves.

	#1025619 (Bug #77726) **
	    'p4 unsubmit' commands which have multiple arguments, and which
	    terminate due to an error while processing an argument other than
	    the first, now correctly sync the workspace with all the work
	    that was successfully unsubmitted prior to that error.

	#1025545 (Bugs #77656, #77672) **
	    Audit log records for the push, fetch, zip, and unzip commands,
	    in both the structured audit log and the P4AUDIT log, now have
	    improved precision and additional detail.

	#1025484 (Bug #77626) **
	    The 'p4 unsubmit' and 'p4 resubmit' commands are not available
	    on an Edge Server, and issuing them against an Edge Server now
	    gives an error message.

	#1025380 (Bug #77326) **
	    'p4 zip' no longer creates an empty zip file if the specified
	    fileset is empty.

	#1024502 (Bug #77719) *
	    The 'p4 init' or 'p4 clone' commands, when they connect to a
	    shared server, would cause log records to be written as an
	    "unknown" client program and "unknown" program version.

	#1024419 (Bug #77730) **
	    The 'p4 ldapsync' could run on replicas, potentially changing the
	    contents of the replica's db.group table. This change restricts
	    'p4 ldapsync' so that it may only run on the master; replicas may
	    forward the command, if forwarding is enabled. If configured to run
	    in the background on a replica, 'p4 ldapsync' will immediately stop.

Bugs fixed in 2015.1

	#1017756 (Bug #75344, #77391, #77392, #77395, #77421, #77577,
	              #77578) **
	    In a distributed installation, fix records for jobs would not
	    be global until submit.  This could lead to inconsistent 
	    information depending on which edge server you were connected
	    to. With this change, all fix record modifications made through
	    'p4 change' or 'p4 fix' are distributed to all participating
	    servers.

	#1012267 (Bug #77505) **
	    'p4 sync --parallel' could issue malloc errors when a user enters
	    a value for threads that overflows an integer. This has been
	    fixed.

	#1010386 (Bug #77471) **
	    The 'reload -p' command, used to migrate a workspace from one
	    Edge Server to another, or between an Edge Server and the Commit
	    Server, failed in certain specialized licensing scenarios.

	#1008489 (Bug #77390) **
	    In a distributed installation, a pending change can be viewed on
	    a server other than the server where the change was created. In
	    such a situation, the pending change will not display a list of
	    open files (the open files are shown only on the owning server).
	    The 'change -d' command would incorrectly allow the pending change
	    to be deleted if the command was issued on a server other than the
	    owning server; this behavior is fixed and the command is now
	    rejected with an appropriate error message.

	#1004762 (Bug #77358) **
	    Fixed a crash that could occur when unshelving moved files to
	    a different branch.

	#1003603 (Bug #77229) **
	    The istat command run against a task stream target was not detecting
	    delete actions in the parent stream, while the revisions in the task
	    stream had not been promoted.  Fixed.

	#1003287 (Bug #77269) **
	    On a forwarding replica with server.depot.root set, a submit which
	    added new files to a depot with a relative mapping would cache
	    copies of those files in the default location under P4ROOT, instead
	    of in the directory named by server.depot.root

	#1002985 (Bug #76685) **
	    Stream 'import+' paths defined in streams whose parent type is
	    virtual were not checking for the base (submittable) path of the
	    target stream, causing a warning on 'p4 edit' and failure on 
	    'p4 submit'.  Fixed.

	#1001669 (Bug #77231) *
	    P4CLIENTPATH checking would not allow filenames with '..'
	    as part of a path component.  Fixed.

	#999127 (Bug #77223) **
	    Replication threads (pull or journalcopy) using "long poll"
	    (-i 0) could sometimes report a failure to open the wrong
	    journal file.  Fixed.

	#998869 (Bug #73278) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly report that a changelist checksum differed if the
	    changelist was submitted by a workspace with SubmitOptions =
	    revertunchanged and at least one unchanged file was reverted
	    during the submission of that changelist.

	#992976 (Bug #77084) **
	    'p4 -Ztag resolve -ot' now correctly displays the base for forced
	    text merges of binary files.

	#992705 (Bug #77031) *
	    Client progress indicators now work for values of 1 million and
	    higher.

	#984381 (Bug #76808) **
	    The Perforce Windows Service shutdown time has been been shortened
	    from a maximum of 120 seconds to a maximum of 15 seconds.  This
	    is bit more friendly to "net stop".

	#980686 (Bug #76686) **
	    Parallel sync could under some high concurrency scenarios scan
	    too many rows from db.sendq. This has been fixed.

	#979648 (Bug #76627) **
	    Authentication failure occurs attempting to use P4V or
	    P4VS clients -> swarm integration in a DCS configuration.

	#978994 (Bug #76443) **
	    'p4 status' could produce corrupted filenames in its output
	    on windows platforms when the command is called with '/'
	    as part of the file argument. This has been fixed.

	#978936 (Bug #76625) *
	    Commands that do checksum verification of client files were always
	    reporting symlink files on Windows clients as changed.  Fixed.

	#976632 (Bug #76190) *
	    If a password was set via P4PASSWD or the -P option,
	    ticket lookups would fail.  These ticket lookups are needed
	    to check for valid logins on remote servers while
	    the local server is logged in via password.  Fixed.

	#976629 (Bug #54717) **
	    If there was an invalid ticket in the ticket file
	    and a valid logged in ticket in P4PASSWD that valid ticket
	    was not honored.  Fixed.

	#976189 (Bug #76546) **
	    Parallel sync's per-thread batch count could under some
	    circumstances exceed what was specified in the 'batch'
	    argument. This has been fixed.

	#975020 (Bug #76277) *
	    In some cases p4 set -S Perforce may not display the setting
	    for P4PORT.  This has been corrected.

	#972184 (Bug #37989) **
	    'p4 submit' now checks that if a text file would add new revisions
	    to an existing RCS archive file, that that file exists. This check
	    can be disabled by setting the new configurable 'lbr.rcs.existcheck'
	    to 0.

	#971892 (Bug #76371) **
	    'p4 integrate' no longer exempts files from searches for renames
	    based on the presence of direct credit in the reverse direction.

	#969974 (Bug #76351) **
	    'p4 submit' from an edge server could succeed even when files
	    of type 'ctext' failed to transfer to the commit server. This
	    has been fixed.

	#968589 (Bug #67075) **
	    'p4d -jr -f -s' was not rejournaling delete records when
	    the record was not actually deleted.  This causes problems
	    when you want to align replicas with a master.  Fixed.

	#966093 (Bug #5617) *
	    Form files with specifications edited are no longer removed
	    in case of several errors.  A new error reporting that the
	    file was kept is reported.  Related, the temporary files
	    created for spec edits are now created with owner only
	    permissions.

	#965293 (Bug #61632) **
	    The pull and pull -u threads of replica servers no longer retain
	    an open file handle to the journal file on the master server
	    when they are otherwise idle.

	#963201 (Bug #44559) **
	    Replica servers will now detect an accidental invocation of
	    'p4d -jc' or 'p4d -jj' issued directly to the replica, and will
	    refuse that command. The correct way to checkpoint a replica is
	    to run 'p4 admin checkpoint' on the replica, then rotate the
	    journals on the master server.

	#962556 (Bug #75947) **
	    Cluster members don't see failover if they are down at the time.
	    Added a P4TARGET verification phase during server startup
	    to assure that servers are updated with the latest
	    failover changes if they occured when the server was down.

	#961024 (Bug #76044) **
	    'p4 submit' will no longer permit an 'edit' to be submitted to a
	    file that is deleted at the head revision.

	#960002 (Bug #73909) **
	    When a workspace on an Edge Server was used to merge new files into
	    a task stream, the workspace's have records were not properly
	    updated at the completion of the submit.

	#958549 (Bug #75724) **
	    Erronious dbopen::get status 1 errors when file altered
	    during submit errors are reported.  Fixed.

	#952713 (Bug #75810) **
	    'p4d -jd' would issue an error message if db.ckphist was read-only.

	#949563 (Bug #75718) **
	    On an Edge Server, 'p4 print -o' of a remote shelf mishandles the
	    name of the output file.

	#940873 **
	    A server started with 'p4d -i' no longer writes journal note 7
	    to its journal when it starts.

	#937039 (Bug #75196) **
	    The post-user-info command trigger is now available for use.

	#936970 (Bug #74245) **
	    'p4 stream -d name' should not complete when there are clients
	    of the stream.  This protection was failing when only versioned
	    clients (containing both Stream and StreamAtChange fields) of
	    the stream existed.  This has been fixed.

	#936970 (Bug #73130) **
	    Deleting a stream-client fails when the underlying stream has
	    been deleted and no-longer exists.  To delete this client, first
	    unload the client using 'p4 unload -c <client>' followed by 
	    delete using 'p4 client -d <client>'.

	#933680 *
	    'p4 reconcile -m' will now perform digest checks on files whose
	    modtime is older (not just newer) than the modtime value stored
	    on the server.

	#933045 (Bug #73790) **
	    'p4 revert -a' now will revert files opened for add that
	    are missing from the workspace if they do not have 
	    pending integration records.

	#930749 (Bug #41230) **
	    'p4 duplicate' would sometimes fail reporting corruption
	    of the db.integed table.  Fixed.

	#929671 (Bug #74935) **
	    'p4 configure set' now obeys the filesys.P4ROOT.min and
	    filesys.P4JOURNAL.min configurable values.

	#928004 (Bug #74855) **
	    'p4 interchanges' will now exclude changes that have been integrated
	    individually between files that do not share a single common base.

	#927254 (Bug #74842) **
	    'p4 integrate' will no longer consider a file that has been 
	    re-branched over itself to contain new changes relative to
	    its parent revision.

	#926748 (Bug #74663) **
	    If 'p4 reload -c <client> -p <commit>' was used to migrate a
	    workspace from the Commit Server to an Edge Server, the command
	    would complete before all the database changes made to the Commit
	    Server had been fully replicated to that Edge Server.

	#909170 (Bug #74645) * **
	    Resolving a file and accepting 'theirs' with modtime enabled will
	    now set the client file's timestamp to match the depot revision its
	    contents were copied from.  Previously the server-side timestamp was
	    copied, but the client file would not be updated until the next sync.

	#908151 (Bug #72457) **
	    Running out of space in the shared memory db.monitor table
	    could cause server crashs.  Fixed.

	#905967 (Bugs #74263,#74425) **
	    Stream clients of task streams can no longer be modified to point
	    to different streams while there are opened files in the client.	
	    For non-task stream clients, a warning is given when there are
	    opened files - which the '-f' (force) flag can override.  Those
	    files opened will remain unsubmittable until the stream field is 
	    returned to the originating stream.

	#904476 (Bug #73913) **
	    'p4 reconcile' elapsed time performance has been improved
	     when detecting non-textual files to open for edit.

	#901775 (Bug #74331) **
	    A case involving integrating a delete between two renamed files
	    has been improved to no longer provoke a conflict.

	#900691 (Bug #73887) **
	    The 'p4 renameuser' command can now be used successfully in a
	    P4AUTH configuration. In such a case, you'll need to rename the
	    user in both servers, by issuing a separate 'p4 renameuser'
	    command to each server, in either order.

	#899057 (Bug #71623) **
	    'p4 populate', when run with fromFile and toFile was not checking
	    if the target (toFile) was within a stream and therefore not able
	    to update the change field of that stream.

	#899077 (Bugs #74233,#74234) **
	    Certain file transfer errors were not reliably detected by
	    'p4 shelve -p'.

	#897653 (Bug #68823) **
	    'p4 reconcile', when run through a client of a virtual stream was
	    not checking for the base (submittable) path of the target stream,
	    causing an unnecessary warning.  This has been fixed.

	#892210 **
	    'p4 submit' will no longer submit files open for 'add' against
	    a head revision of 'edit'.  (See change #19923, which fixed this
	    for the case where the head revision was an 'add'.)

	#887499 **
	    'p4 add' will no longer open files with 'add from' credit (see
	    change #252485) when the head revision is a move/delete, since
	    this creates a confusing state where one file has two active names.
	    Move operations should be undone by using 'p4 move' to move the file
	    back into place.

	#871535 (Bug #72841) **
	    'p4 passwd -O' now requires that -P also be specified.

	#862767 (Bug #67527) **
	    The following commands no longer take the server.locks/meta/db lock:
	    obliterate (without -y), archive -n, and restore -n.

	#861031 (Bug #72996) **
	    The metadata pull thread in a replica server with db.peeking set
	    to 2 or higher might hold clientEntity locks longer than
	    necessary, reducing concurrency on the replica.

	#860864 (Bug #72994) **
	    Certain 'p4 opened' commands could potentially return incorrect
	    results on a server with db.peeking set to 2 or higher.

	#860522 (Bug #73023) **
	    When a background pull thread in a replica receives an error
	    message (e.g., an authentication failure) from the master server,
	    the background pull thread will now use the -b backoff timer,
	    rather than the -i interval timer, to schedule the retry.

--------------------------------------------------------------------------

Major new functionality in 2014.2

	#854976 **
	    Introduced in 2013.3, improved concurrency through lockless 
	    reads is now the default.  The default (db.peeking) value is 2.
	    Lockless reads requires that server locks are enabled, since
	    this can cause issues for long duration syncs, the default
	    value for controlling the 'sync' server lock (server.locks.sync)
	    has been changed to 0 (disabled).
	    NOTE: maxlocktime has been changed when peeking is enabled
	    (see change 887850). To revert to the old behavior set the
	    'db.peeking.usemaxlock' configurable to 1.

	#839759 (Bug #3872) **
	    Given a data center containing multiple roughly identical Linux
	    machines connected by an enterprise-grade LAN and sharing equal
	    access to the same enterprise-grade storage server, Perforce can
	    be deployed to those machines such that:

	    - The overall Perforce installation appears to end-users and
	      their applications as a single Perforce server.

	    - As servers are added to the installation, it can horizontally
	      scale as the number of Perforce users increases.

	    - The installation can withstand the loss of the master server
	      without the need for immediate manual intervention, and
	      without causing extended downtime; the installation will
	      automatically fail over to a standby server and continue service.

	    To deploy automatic failover support in your Perforce installation,
	    you will need to include several new components in addition to
	    the p4d and p4broker components:

	    - The p4zk process provides cluster coordination services.

	    - The p4cmgr toolset provides DevOps support for installation,
	      deployment, configuration, monitoring, and administration.

	    The p4cmgr toolset will be available in November. 

	    NOTE: This is an early release of clustering, and requires 
	    Perforce consulting engagement for deployment.

	#906143 (Bug #74413) **
	    When p4cmgr creates a standby node it initially runs some
	    configuration commands; these commands produce a journal.
	    This setup journal is independent of the cluster-wide journal
	    and it is never replicated.  After setup we rename this journal
	    to a name like "journal.2014-10-28T12:47:41.0.bak"; it uses an
	    ISO 8601 timestamp to provide a unique name and appends ".bak"
	    to indicate that these journal records are of purely historical
	    interest.  You may examine this journal file if you wish or you
	    may delete it; the cluster software never uses it.

	#820746 (Bugs #23901,#39524,#50751,#53891,#65998,#70255,#70256) **
	    Users can now be authenticated against LDAP servers like OpenLDAP
	    or Active Directory without the need for an external authentication
	    trigger. This feature supports identifying users in the directory by
	    direct mapping, performing searches or using SASL depending on the
	    LDAP server's support. The Perforce Server must be configured to use
	    LDAP/AD authentication by creating an LDAP configuration with the
	    new command 'p4 ldap' and assigning that configuration a priority
	    order by setting the new configurable 'auth.ldap.order.N' with the
	    configuration's name. All auth triggers will be disabled when LDAP
	    auth is enabled. The new AuthMethod field in the user spec is used
	    to decide whether the user authenticates against an LDAP server or
	    the Perforce database. This feature is only available on Linux and
	    Darwin for Intel(x86, x86_64) and Windows platforms.

	#820182 (Bug #41143) *
	    P4CHARSET no longer needs to be set for a client to
	    connect to a Unicode mode Perforce Server.  Clients will
	    now detect the mode of a Perforce Server and remember it
	    in the environment by setting a variable name with a
	    format of 'P4_<p4port>_CHARSET' to either 'none' or 'auto'.
	    The value of 'none' means the server at the given port
	    is not a Unicode server, while 'auto' means it is a Unicode
	    server.  The 'auto' charset value is also new and it means
	    that the client should be examined and a charset value
	    selected based on OS specific properties such as a LANG
	    environment variable.  Windows and MacOS X clients can
	    store this new information in system provided utilities.
	    Other platforms, such as Linux, will now set an environment
	    file.  The environment file is available on all platforms
	    if a P4ENVIRO environment variable is set to a file path.
	    P4ENVIRO will default to a file '.p4enviro' in the user's
	    home directory for systems which do not have system provided
	    facilities.  The p4 enviro file can be shared across platforms.
	    The 'p4 set' command can be used to manipulate or inspect
	    this new environment facility.  Note that these special
	    'P4_<p4port>_CHARSET' values will only appear in 'p4 set'
	    output for the specified or current P4PORT value.
	    For instance 'p4 -p perforce:4666 set' will report on
	    'P4_perforce:4666_CHARSET' if it is set.

	#816591 (Bug #51209) **
	    A new streams pathType 'import+' allows for the path to be
	    updated.  Performs in the same way as 'import' except that no
	    warning messages are provided on 'add/edit/delete' and the
	    user is able to submit to the import path.

	#770674 (Bug #1648) **
	    Client specs now support an optional 'ChangeView' field that
	    locks certain depot paths to a particular changelist level:
	
	    ChangeView:
	        //depot/path/...@1000
	
	    Revisions belonging to files under those paths will not be
	    visible if they were submitted after the given changelist.
	    Files mapped in the ChangeView may not be submitted.

Minor new functionality in 2014.2

	#907715 * **
	    The default value for 'net.tcpsize' has been raised from 64K 
	    to 512K.  This tunable increases the network buffer size,
	    which will provide better performance over high latency 
	    network connections.

	#898025 (Bug #60850) **
	    'p4 unshelve -S' now accepts a '-P' option to specify an
	    arbitrary effective parent stream.

	#897437 (Bug #73443) **
	    'p4 shelve -d -f' will now delete shelved files that are the
	    source of pending resolves.  If this happens, the resolving 
	    user will not be able to merge content from the shelf; they 
	    must either 'ignore' the missing shelf or revert.

	#895042 (Bug #73409) **
	    An operator user is now allowed to run 'p4 depots'.

	#891931 (Bugs #70751,#73910) **
	    The new configurable 'dm.shelve.promote' (default 0) can be
	    enabled to make edge servers always promote shelved files to
	    the commit server (rather than use the -p flag). Generally 
	    enabling this configurable is a really bad idea, it will cause 
	    a lot of unnecessary file transfers for shelve commands that 
	    are not intended for sharing.

	#891014 (Bug #73744) **
	    The new configurable 'lbr.autocompress' (default 0) changes the 
	    default storage method to compressed text (ctext) rather than 
	    rcs format (text). To the user the filetype will still show 
	    type 'text'. Its a good idea to set this variable when using 
	    the commit/edge configurations or sharing archive files between
	    servers.

	#884941 (Bug #73346) **
	    A new trigger variable "argsQuoted" is available that contains
	    the command arguments as a percent-encoded comma-separated list.

	#872401 (Bug #73246) **
	    'p4 obliterate' when used with peeking enabled will now
	    be more concurrent with other commands such as 'submit'.

	#848368 (Bugs #64910, #72509, #25260 ) **
	    The new configurable 'submit.noretransfer' tells submit to
	    avoid re-transferring files when retrying a failed submit.
	    'p4 submit -c <change> --noretransfer <1|0> allows a user to
	    override the configured behavior.

	#842946 (Bug #72103) **
	    The new 'p4 prune' command allows the owner of a stream to
	    remove unmodified files from it, as if with 'obliterate -b'.

	#846127 (Bugs #28808,#42312,#62352,#72096) ** *
	    The submit and shelve commands, if run from an updated client,
	    now perform additional checks to avoid running the server out of
	    disk space midway through the file transfer phase.

	#841159 **
	    'p4 reconcile' will now detect files that are open for edit but
	    missing from the client, and reopen them for delete.

	#839758 (Bugs #70330,#69700) **
	    The new command 'p4d [-z] -jv <checkpoint-or-journal>' can be used
	    to verify the basic structural integrity of the checkpoint or
	    journal file, including its MD5 digest.

	#832025 (Bugs #58201,#65733) **
	    The new configurable 'rpl.forward.login' may be useful in certain
	    replica configurations, particularly those in which multiple
	    replicas are deployed in the same data center as the master.

	#835174 **
	    'p4 reconcile' will now process multiple file arguments as a
	    single batch so that renamed files can be detected when they're
	    split across different arguments.

	#832294 **
	    An optimization to the client/server protocol for the 'p4 sync'
	    command should result in better throughput when syncing many 
	    small files over a high latency network.

	#827569 **
	    'p4 verify' has been added to the list of files that can 
	    run in lockless mode.

	#827124 **
	    'p4 describe' has been added to the list of files that can
	    run in lockless mode.

	#803860 **
	    The 'p4 pull' command now accepts the -L flag. It is designed
	    for use with standby replica servers.

	#801569 (Bug #71136) **
	    A replica with rpl.pull.position specified will now include
	    notes of type 23 in the replica journal with information about
	    replica statefile and timestamp processing. This is useful for
	    monitoring replication lag.

	#801171 **
	    The new command 'p4 journalcopy' is available. It is designed
	    for use with standby replica servers.

	#893342 ** (Bug #52885)
	    By default when the journal is rotated any structured logs are
	    also rotated.  When the new dm.rotatelogwithjnl configurable
	    is set to zero, log rotation is not performed at journal rotation.

	#796127 ** (Bug #52885)
	    By default logs are rotated at the same time journals are.  The
	    new dm.rotatelogwithjnl configurable can be set to zero to disable
	    that.

	#795814 ** (Bug #21830)
	    The server daemon will write its PID to a file when supplied
	    the --pid-file option.

	#794236 ** (Bug #71514)
	    'p4 interchanges' now has a '-u' flag that filters results
	    to a particular user.

	#793292 **
	    The 'p4 server' spec now includes a User: field, which can be
	    used to specify the service user that is expected to be used by
	    that server. Also, when the value of the security configurable
	    is 4 or higher, the server now applies several additional checks
	    when accepting replication requests from a remote server. These
	    checks validate the serverid and service user being used by the
	    remote replica server.

	#790595 (Bugs #53510, #68485) **
	    A structured server log may now be associated with a rotation
	    counter by defining the serverlog.counter.N configurable, in
	    which case the counter will be used to generate the file name
	    for the rotated server log. The current value of the counter is
	    also returned in the output of 'p4 logtail -l <log>'.

	#786582 **
	    'p4 pull -l -s' now includes an additional line of output,
	    identifying the oldest changelist number which has at least
	    one pending transfer.

	#785614 (Bug #47379) **
	    The configurable 'lbr.verify.script.out' can be set to 0 to
	    indicate that files with the +X filetype should not have their
	    digest checked when transmitted from the server to the client.

	#780804 **
	    The 'p4 reload -p' argument can now be specified either as the
	    P4PORT of the remote server, or the serverid of the remote server.
	    If a serverid is specified, the server spec for that server must
	    contain the correct P4PORT value in its Address: field.

	#777628 **
	    When using 'p4 reload -c <client> -p <port>' to migrate your
	    unlocked workspace from one Edge Server to another, it is no
	    longer necessary to first issue the 'p4 unload -c <client>'
	    command to the remote Edge Server. The reload command will
	    automatically issue the 'p4 unload' command for you, and will
	    wait for it to complete, prior to reloading your workspace into
	    the new Edge Server.

	#775711 **
	    If the 'monitor' configurable is set to a value of 5 or higher,
	    the server will track certain information about database table
	    locks in the db.monitor table, and will make it available via
	    the new '-L' flag to 'p4 monitor show'. This feature has a
	    non-trivial performance impact, so (on platforms where it is
	    available), the 'monitor.lsof' feature of change 771259 is
	    preferable.

	#771259 (Bug #71647) **
	    On a Linux server, the new configurable 'monitor.lsof' may be
	    set as follows: 'monitor.lsof=/usr/bin/lsof -F pln', varying the
	    executable path as necessary for your system. Once set, this
	    configurable enables the new '-L' flag to 'p4 monitor show',
	    which will include information about locked files as part of
	    the monitoring output.

Bugs fixed in 2014.2

	#1242773 (Bug #81040) **
	    The server.locks.archive configurable introduced by #898102 now
	    also applies to the 'p4 restore' command.

	#1239015 (Bug #80722) **
	    A file which was integrated from a streams depot to a local
	    depot, or vice versa, would be placed into the wrong location in
	    the proxy cache if it was accessed via the proxy by a command
	    such as 'p4 sync' or 'p4 print'. Note that the symptom of this
	    bug is in the proxy cache, but the fix is in the server.

	#1225187 (Bug #74936) **
	    A 'sync --parallel' command issued via a forwarding replica would
	    complete immediately, but would sync no files.

	#1213529 (Bug #79647) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server.

	#1028814,#1204292 (Bug #56707) **
	    The presence of a client spec with the same name as the TCP/IP
	    address of a replica machine no longer causes that replica to
	    issue the error: "Don't know how to translate paths for OS ''".


	#1172454 (Bug #79504) **
	    A submit initiated on an Edge Server which failed due to a
	    problem detected after the edge-content trigger had been checked
	    could leave the changelist incorrectly marked as "shelved", and
	    possibly also as "promoted", on the Commit Server, although the
	    changelist was correctly recorded on the Edge Server itself.
	
	#1127279 (Bug #79353) **
	    A 'sync --parallel' command which sync'd any files of type 'binary'
	    would write an incorrect value for the 'type' field of the db.have
	    record for the binary file(s). This could cause problems later
	    when integrating changes into these files from other branches.
	    Any workspaces potentially affected by this bug should be sync'd
	    to revision #0 and then re-sync'd for all files of type binary at
	    their convenience in order to rewrite the db.have records.


	#1070355 (Bug #77551) **
	    'p4d -i' when run under inetd on unix no longer shows 'unknown'
	    for all addresses.

	#1065376 (Bug #77360) **
	    In a distributed configuration, the 'edit -n' and 'delete -n'
	    commands for a file of type +l might incorrectly report that
	    the file was opened by another user, though it was not.

	#770787 (Bug #76809) **
	    'p4 describe' could print an internal error message if describing
	    a change on a stream with an import statement using a changelist
	    specifier.

	#1061247 (Bugs #78830,#78915) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly write its own journal file under conditions of high
	    concurrency on the master, resulting in incorrect behavior and
	    problems with replicas of this replica.

	#1059769 (Bug #78855) * **
	    'p4 sync --parallel' now works with certain custom licenses.
	    
	#1058411 (Bug #78785) **
	    If a replica with rpl.checksum.change set to 2 or higher
	    encountered an internal error processing a changelist checksum
	    note, it would halt replication. Now, it logs the error but
	    resumes replication.

	#1050954 (Bug #78647) **
	    On an Edge Server with submit.unlocklocked=1, a submit which fails
	    with "Out of date files must be resolved or reverted" could
	    incorrectly alter the resolve state of the open files if the
	    conflicting change was submitted simultaneously.

	#1047418 (Bug #78444) **
	    The replica-specific table db.user.rp is now journaled. This means
	    that the table data will appear in checkpoints, journals and
	    dumps. The replica pull thread automatically filters out all
	    db.user.rp records from its P4TARGET server, which is normally the
	    desired behavior, since records in this table are unique to each
	    replica's activity. However, for maintaining warm standby replicas
	    of other replicas, you can set rpl.replay.userrp=1 for the standby
	    replica to disable the filtering and replicate db.user.rp data.

	#1046060 (Bug #73967) **
	    'p4 -ztag servers' could report incorrect values for the 'User'
	    field for server specs upgraded from an older release.

	#1045565 (Bug #78497) **
	    Promoting a shelf, then subsequently deleting it, using the same
	    network connection to the Edge Server could fail to properly
	    delete the shelf.

	#1042783 (Bug #78427) *
	    'p4 -P <ticket> sync --parallel' will no longer give authentication
	    errors for the file transfer sub-processes.

	#1039831 (Bugs #73075, #74961) **
	    The revision specifier @client was not working properly for
	    clients bound to a build-server.

	#1039277 (Bug #78383) **
	    A 'p4 describe' command which accesses a remote promoted shelf now
	    properly reports any communications-related error conditions which
	    occur when retrieving the remote shelf.

	#1038934 (Bug #78164) **
	    In a distributed environment, the change-failed trigger now
	    runs on the commit server rather than on the edge server.

	#1037755 (Bug #76982) *
	    If a 'p4 sync --parallel' child process encounters an error
	    writing files to the local machine, the parent 'p4 sync' command
	    now returns a non-zero exit status to the operating system.

	#1036596 (Bug #77433) **
	    In a distributed configuration, 'p4 unshelve' no longer takes
	    the global exclusive file lock for a file of type +l which is
	    unshelved for add.

	#1036485 (Bug #77069) **
	    A 'p4 describe -S' command on an Edge Server which specified more
	    than 1 promoted shelf which was created on a different Edge Server
	    would fail with an 'Unknown changelist' message.

Bugs fixed in 2014.2 PATCH6

	#1032010 (Bug #74056) **
	    'p4 sync --parallel' would fail to expand RCS keywords properly.

	#1031176 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030313 (Bug #77559) **
	    A build-server replica would incorrectly process the View: field
	    for labels, causing the wrong set of revisions to be specified
	    by the label.

	#1029766 (Bug #76626) **
	    Promoting a shelf could fail erroneously with a message:
	    "Files newly opened or reverted during submission."

	#1028372,#1028461 (Bug #77558) **
	    A replica with lbr.replication=cache was not able to access
	    labels using the autoreload option.

	#1027668 (Bug #77595) **
	    'p4 export -f' now formats the domain type column correctly for
	    unloaded clients, unloaded labels, and unloaded task streams.

	#1026707 (Bug #77504) ** *
	    'p4 -Zproxyload sync --parallel=...' now correctly updates the
	    proxy's archive cache without sending files to the client.

	#1026534 (Bug #77280) **
	    If a change submitted via an Edge Server was rejected by a
	    change-submit or change-content trigger on the Commit Server,
	    the change's files were modified to read-only mode on the client
	    machine rather than being left in writable mode.

	#1026233 (Bug #77435) **
	    A 'p4 integ' or 'p4 unshelve' command on an Edge Server which
	    failed to open a +l file due to a client-side file transfer error
	    would leave an orphaned lock record in db.excl.

	#1013324 (Bug #77580) **
	    When the configurable 'auth.default.method' is set to 'ldap', new
	    users may only be created by super users or by automatic user creation
	    following a successful authentication against an LDAP server via
	    'p4 login'.

	#1010386 (Bug #77471) **
	    The 'reload -p' command, used to migrate a workspace from one
	    Edge Server to another, or between an Edge Server and the Commit
	    Server, failed in certain specialized licensing scenarios.


	#1008489 (Bug #77390) **
	    In a distributed installation, a pending change can be viewed on
	    a server other than the server where the change was created. In
	    such a situation, the pending change will not display a list of
	    open files (the open files are shown only on the owning server).
	    The 'change -d' command would incorrectly allow the pending change
	    to be deleted if the command was issued on a server other than the
	    owning server; this behavior is fixed and the command is now
	    rejected with an appropriate error message.

	#1007724 (Bug #76835) **
	    Promoting a shelf that has a job attached and then subsequently
	    removing the job from the change could result in an orphaned
	    fix record if the change is later renumbered during a submit.

Bugs fixed in 2014.2 PATCH5

	#1004762 (Bug #77358) **
	    Fixed a crash that could occur when unshelving moved files to
	    a different branch.

	#1003295 (Bug #77269) **
	    On a forwarding replica with server.depot.root set, a submit which
	    added new files to a depot with a relative mapping would cache
	    copies of those files in the default location under P4ROOT, instead
	    of in the directory named by server.depot.root

	#999906 (Bug #76686) **
	    Parallel sync could under some high concurrency scenarios scan
	    too many rows from db.sendq. This has been fixed.

	#999214 (Bug #77223) **
	    Replication threads (pull or journalcopy) using "long poll"
	    (-i 0) could sometimes report a failure to open the wrong
	    journal file.  Fixed.

	#998938 (Bug #73278) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly report that a changelist checksum differed if the
	    changelist was submitted by a workspace with SubmitOptions =
	    revertunchanged and at least one unchanged file was reverted
	    during the submission of that changelist.

	#979987 (Bug #76552) **
	    Standby or edge-servers targeting a standby server did not
	    replicate correctly.  Fixed.

	#979987 (Bug #76553) **
	    'p4 servers -J' against a non-depot standby server reported 0
	    for the current journal offset rather than the current journal
	    size.  Fixed.

Bugs fixed in 2014.2 PATCH4

	#975016 (Bug #76277) *
	    In some cases p4 set -S Perforce may not display the setting
	    for P4PORT.  This has been corrected.

	#974381 (Bug #72457) **
	    Running out of space in the shared memory db.monitor table
	    could cause server crashs.  Fixed.

	#973892 (Bug #76360) **
	    'p4 integ -Rdb -Or' through an edge server could leave a db.excl
	    (+l) orphaned lock if the resolved action is to branch.

	#972359 (Bug #76323) **
	    'p4 delete' through an edge server could leave a db.excl (+l)
	    orphaned lock if the delete failed due to a 'clobber' failure.

	#970590 (Bug #76365) **
	    A replica running on a case insensitive filesystem could hang
	    during journal recovery in the rare event that a client name
	    was changed (by case only).

	#967709 (Bug #72432) **
	    False database errors on db.resolve should no longer
	    occur.

	#967708 (Bug #75382) **
	    The maximum size of shared memory for monitor table use was
	    too small (4096 8K pages).  Now it's 32768 pages for all
	    platforms except Windows 32bit where memory address space
	    is severely limited.

	#965284 (Bug #61632) **
	    The pull and pull -u threads of replica servers no longer retain
	    an open file handle to the journal file on the master server
	    when they are otherwise idle.


Bugs fixed in 2014.2 PATCH3

	#960002 (Bug #73909) **
	    When a workspace on an Edge Server was used to merge new files into
	    a task stream, the workspace's have records were not properly
	    updated at the completion of the submit.

	#954124 (Bug #75844) **
	    In certain chained replica configurations, updates to 'p4 server'
	    specs on the master server were not propagated beyond the first
	    replica on the chain.

	#954068 (Bug #75800) **
	    'p4 filelog file[revRange]' where the revRange is really high
	    compared to following revisions can excessively scan.

	#951087 (Bug #75772) **
	    The default value for the 'net.tcpsize' configurable was
	    documented incorrectly as 256K (instead of 512K) in
	    'p4 help configurables'.

	#950290 (Bug #75738) **
	    P4IGNORE is no longer applied to files being opened for add from
	    an existing depot revision.

	#949570 (Bug #75718) **
	    On an Edge Server, 'p4 print -o' of a remote shelf mishandles the
	    name of the output file.

	#949003 (Bug #75687) **
	    Labels, clients, or branches with very large descriptions
	    could cause internal errors when peeking.  Fixed.

	#944004 (Bug #74754) **
	    Now we allow the Zookeeper servers to lag behind the boot 
	    of the rest of the cluster servers.  Default timeout is 5 minutes
	    but it can be changed via the configurable zk.connect.timeout.
	    We do not let this value be <= 0 if so, then the configurable
	    will be changed to its default value of 300 seconds.

	#943720 (Bug #60630) **
	    'p4 client -S stream@change name' might use the wrong stream
	    parent had the stream been reparented after change.  This has
	    been fixed.

	#941953 (Bug #75160) **
	    When running 'p4 change -f' from a task stream workspace for a 
	    non task stream changelist, a database lock error could be 
	    observed: 'dbscan db.revtx: no read lock'.

	#941449 (Bug #75141) **
	    When migrating client workspaces from commit servers to edge
	    servers, promoted shelves are no longer accessible on the
	    edge server they are bound to.  This change allows 'submit -e'
	    to automatically pull metadata and content to the server with
	    the correct ownership.

	#941282 (Bug #75373) *
	    Failed P4CHARSET detection would cause subsequent commands
	    to return a failed error code even if they succeed.

	#940387 (Bug #75336) **
	    The server spec form and 'p4 help server' both now describe the
	    'workspace-router' services type as well as grouping the service
	    types according to which server type allows them.

	#938145 (Bug #75235) **
	    'p4 servers -J' for a standby server now reports the length of
	    the current journal rather than that of the (length 0) live journal.

	#938004 (Bug #74998) **
	    'p4 reload -p <port> -f' now works correctly even if the workspace
	    isn't currently unloaded.

	#937672 (Bug #74698) **
	    The replica will now drop and reconnect its TCP connection to
	    the P4TARGET server when an error results in the replica's pull
	    thread performing a "backoff" sleep.

	#937623 (Bug #70919) **
	    The filesys.*.min configurables now default to 250MB. Change 846319
	    was incomplete.

	#937421 (Bug #75144) **
	    'p4 help configurables' was missing entries for 'rpl.journal.ack'
	    and 'rpl.journal.ack.min'.

	#935793 (Bug #74137) **
	    Added master generation number check so that an old master
	    will not be able to join a cluster after it has failed
	    over to a new master.  This change requires that any existing
	    users of 2014.2 prior to PATCH 2 of the Perforce cluster 
	    feature must remove their Zookeeper data cache on each server.
	        * stop the cluster
	        * stop zookeepers
	        * remove the existing data caches (see zoo.cfg for
	          location)
	        * restart zookeepers
	        * restart cluster

	#935654 (Bug #41230) **
	    'p4 duplicate' would sometimes fail reporting corruption
	    of the db.integed table.  Fixed.

Bugs fixed in 2014.2 PATCH2

	#958074 (Bug #75933) **
	    LDAP-based authentication against some Active Directory servers
	    would incorrectly authenticate successfully when an empty
	    password was provided (non-empty passwords would validate only
	    if they were correct).  Authentication attempts against an LDAP
	    server now fail if the password is empty.  This means that you
	    can't use the ldap AuthMethod if you don't set passwords for
	    your users.  If you want to use LDAP authentication for users
	    without passwords then you should use an external authentication
	    trigger.  Note that this is an insecure configuration.

Bugs fixed in 2014.2 PATCH1

	#941282 (Bug #75373) *
	    Failed P4CHARSET detection would cause subsequent commands
	    to return a failed error code even if they succeed.

Bugs fixed in 2014.2

	#931334 (Bug #74855) **
	    'p4 interchanges' will now exclude changes that have been integrated
	    individually between files that do not share a single common base.

	#926940 (Bug #74435) **
	    Operations transferring many files via a proxy with most
	    transfers not cached by the proxy could hang.  Most likely
	    to happen with a broker between the proxy and a server.
	    Fixed.

	#926889 (Bug #74020) **
	    When migrating client workspaces from commit servers to edge
	    servers, promoted shelves are no longer accessible on the
	    edge server they are bound to.  This change allows 'describe -S'
	    to automatically pull metadata and content to the server with
	    the correct ownership.

	#907803 (Bug #74832) **
	    Under high concurrency, BTree is corrupt errors might appear
	    along with BTCursor::find status 0 messages but the table
	    is not actually corrupt.  Fixed.

	#895719 (Bug #71795) **
	    A better error message is issued when accidentally attempting to
	    use a Commit Server-bound workspace on an Edge Server. Also, the
	    'p4 clients -s NNN' and 'p4 labels -s NNN' commands now print the
	    complete list of clients/labels when NNN is the Commit Server's
	    serverid.

	#895107 (Bug #73953) **
	    If a replica fails to take a checkpoint, an error message about
	    the failure is now written to the replica's log file.

	#893234 (Bug #73768) **
	    'p4 clean' will no longer attempt to take exclusive depot file 
	    locks in a distributed environment.

	#892218 (Bug #72136) **
	    Unloading many clients could cause large db.have tables ( > 100MB )
	    to loop allocating pages.

	#887850 (Bug #71527) **
	    Perforce servers with 'peeking' enabled would still have processes 
	    killed by MaxLockTime when not holding blocking locks.

	#886584 (Bug #73402) **
	    'p4 renameuser' would fail to completely rename the user.

	#886135 (Bug #34561,#73503) **
	    'p4 resolve' using options to ignore whitespace or line endings
	    (ie -dw, -db, -dl) could cause the target of the integration to
	    be erroneously recorded as a 'copy' when whitespace differences
	    exist and are not copied to the target. This has been fixed by
	    recording this condition correctly as a 'merge'. Before this was
	    fixed, files that had been shelved in this situation could not
	    be unshelved easily.

	#883281 (Bug #73071) **
	    'p4 client [-o] -S <stream> name' without the -s "switch" now 
	    reports an error should the target 'name' client exist with either 
	    a different stream, or without a stream defined.  Former behavior
	    was to ignore the -S <stream>.
 
	#879410 (Bug #73373) **
	    'p4 reconcile' elapsed time performance has been significantly
	    improved when detecting files to open for add.

	#877872 (Bug #73313) **
	    An 'annotate', 'diff', 'diff2', 'describe', or 'resolve' command
	    which used the '-db' or '-dw' flags could crash if one of the file
	    revisions processed by the command was exactly 65,536 bytes in size.

	#877282 (Bug #73316) **
	    Spec depot entries now generate corresponding server.locks files
	    only if that spec depot entry is stored in RCS format.

	#876857 (Bug #73314) * ** ***
	    TCP keepalive variables can now be set on Windows with these
	    restrictions, due to limitations in the Windows API:
	    - net.keepalive.count can not be set.
	    - both net.keepalive.idle and net.keepalive.interval must be set
	      if either one is set; neither should be set to 0.

	#874560 (Bug #71729) **
	    Unshelving +l files in a distributed environment could result
	    in inconsistent error messages if the user had other files
	    opened in his workspace. This has been fixed.

	#871169 (Bug #72759) *
	    Filetype detection with P4CHARSET=utf8 now detects non-UTF8 files
	    as either text or binary in a manner more consistent with other
	    charset settings.

	#850073 (Bug #72842) **
	    'p4 submit' will no longer record revisions with invalid archive
	    paths after unshelving an integrated file through a branch view.

	#849717 (Bug #42041) **
	    The Server will now report the correct Windows error when the
	    posix library file descriptor table is depleted.

	#849566 (Bug #72816) **
	    The Edge Server algorithm for handling the replication of a large
	    'p4 obliterate' command is now more efficient.

	#846643 (Bug #72162) **
	    Commands which must find lazy copies, i.e. obliterate, retype,
	    and fstat -Oz, could cause stack overflows when there
	    are many branches against the same file.  Fixed.

	#846319 (Bug #70919) **
	    The filesys.*.min configurables now default to 250MB.

	#844511 (Bug #71329) **
	    p4 -ztag changes on a Unicode server would report a partial
	    unicode character if there were 31 characters and only the
	    last one was a utf8 multibyte character.  Fixed to truncate.

	#840450 (Bug #72691) **
	    The "Connection from <network partner> broken" error message is now
	    correctly logged to the server's structured error log, if defined.

	#839295 (Bug #72676) **
	    'p4 submit -e' of a promoted shelved change from an edge server
	    will not copy the files to the commit server since the change
	    lives on the commit server and the files are already there.

	#836790 (Bug #72535) **
	    A replica might fail to perform an on-demand file transfer from
	    its master server for a revision with no stored file size or
	    digest information.

	#835387 (Bug #72437) **
	    Repeated updates to shelved files in a short period will no
	    longer cause replica servers to stall waiting for the archive
	    transfers of the shelved files to complete.

	#835083 (Bug #72129 ) **
	    The combination of converting a task stream to a non-task
	    stream while 'db.peeking' is set would fail due to lock-ordering.
	    This has been fixed.

	#834034 (Bugs #71960,#72441) **
	    In general, you should never need to set the ServerID field in a
	    'p4 client' form, but if you do set the field, the server now
	    validates it more carefully.

	#833834 (Bug #72158) **
	    If external authentication is enabled, the 'p4 admin resetpassword'
	    command is now refused with an error message. Please use the
	    mechanisms of your external authentication system to enforce the
	    password reset policy.

	#831471 (Bug #72307) **
	    Case insensitive servers were matching client roots with
	    client paths with a case sensitive match.  Fixed.

	#821026 (Bug #72180) **
	    Triggers now set %serverip% to IP address rather than to hostname.

	#819489 (Bug #72151) **
	    'p4 annotate -I' now works correctly with the '-dw' flag.

	#817214 (Bug #72119) **
	    A readonly replica now allows the command 'p4 clean' to run.

	#814054 (Bug #71394) **
	    Previously if 'p4 shelve -r' should have resulted in all files
	    being removed from an existing shelved change, the command would
	    report "No files to shelve" and do nothing. Now the command
	    removes all shelved files and deletes the shelved change.

	#813973 (Bug #71087) **
	    'p4 fstat //...@=change' will no longer scan the db.revsx
	    (spec depot) table, since spec depot files do not have changelists.

	#813774 (Bug #68895) **
	    'p4 diff -du' will now skip deleted files, similar to other
	    'p4 diff' options.

	#812768 (Bug #71782) **
	    Multiple resolves performed sequentially could produce false
	    "tampered" errors on submit.  This has been fixed.

	#811430 (Bug #71922) **
	    A Windows replica server would fail to transfer an unloaded
	    client, label, or task stream created by 'unload -z'.

	#809156 (Bug #68666) **
	    Replica servers now treat the '-n' form of the following commands
	    as read-only: add, edit, open, delete, move, rename, unshelve,
	    archive, and restore.

	#808573 (Bug #71835) **
	    The Windows server using an SSL port can crash during
	    'p4 admin restart'.

	#808325 (Bug #71961) **
	    'p4 sync --parallel' would fail with the message "Can't clobber
	    writable file" if the file was changed from filetype binary+w to
	    filetype binary (or text+w to text) by the revision being sync'd.

	#806284 (Bug #71893) **
	    A replica with lbr.replication=shared would incorrectly attempt to
	    fetch a missing archive file from its master server. Also, it was
	    incorrectly using the rpl.verify.cache setting if it was enabled;
	    now a shared-archive replica does not validate its archives except
	    when told to via 'p4 verify'.

	#804390,#834897 (Bugs #71847,#72545) **
	    'p4 renameuser' was incorrectly processing group entries,
	    protection table entries, and properties if there existed a group
	    by the same name as the user being renamed.

	#802639 (Bug #71592) **
	    In a distributed environment, force deleting an edge server
	    client directly from a commit server could leave orphaned
	    exclusive locks from that client that could not be deleted.

	#801991 (Bug #71750) **
	    On Windows, a protects table entry that uses an IPv4 address with
	    CIDR notation may not match the correct addresses if it has an octet
	    that begins with a 0 digit and has a following octet whose value
	    is greater than 7.

	#795201 (Bug #68844) **
	    'p4 help describe' regarding restricted changelists was confusing.
	    This has been fixed.

	#794744 (Bug #71525) **
	    The 'unload -a' command, in a distributed installation, now
	    restricts its scope to clients and/or labels that are owned by
	    the Edge Server where the command was run.

	#886610 (Bug #63251) **
	    The forwarding replica and edge server configurations now accept
	    the optional username argument on the 'p4 login' and 'p4 logout'
	    commands.

	#780053 (Bug #69512) **
	    'p4 populate' no longer accepts multiple toFile arguments.

	#773380 (Bug #70808) **
	    A multi-link chain of forwarding replicas could incorrectly
	    re-process certain journal records during a journal rotation.

	#771609 (Bug #21726) **
	    'p4 filelog' and 'p4 integrated' now filter out integration
	    records for which the user does not have 'list' access to both
	    the source and target.

--------------------------------------------------------------------------

Major new functionality in 2014.1

	#767722 (Bug #70103) ** 
	    Distributed commit/edge servers have been further optimized to 
	    work in a data center environment. Edge servers (first introduced
	    in 2013.2) are a great way to offload work from the main server.
	    The following three improvements make it easier to configure 
	    multiple edge servers that can be added to (scale out) as usage 
	    increases.

	    Shared Archive

	    - When the edge server and commit server have access to the
	      same storage device for the file content (archive), setting
	      lbr.replication=shared has been optimized to reduce network
	      content transfer.

	    Distributed Shelves

	    - Shelving now functions between edge servers. In the shared
	      archive configuration (as above) shelves are automatically
	      promoted to the commit server and are available on any edge
	      server. Edge servers not sharing the archive with the commit
	      server need to 'promote' shelves using the new 'shelve -p'
	      command. If this is the first time the server has been
	      configured as a commit server, all existing shelves will be
	      marked promoted. If this installation is already distributed,
	      then you must run 'p4d -xf 71917' on the commit server to
	      promote the shelves.

	    Distributed Changes

	    - New to this release, change descriptions and status is available 
	      to all edge servers participating in a distributed configuration.

	    NOTE: A server configured as a 'commit' server cannot disable 
	    'server.locks.dir' that is because these locks are required for 
	    shelve consistency.  If you are a customer who has disabled this 
	    in the past due to problems with syncs,  you can turn-off the 
	    longer duration lock by setting server.locks.sync=0.

	#693837 (Bug #62657) **
	    Stream 'import' paths may now include a changelist specifier:

		import import/... //depot/import/...@1000

	    Clients of this stream will use this changelist to limit their
	    view of those files, such that revisions from later changelists
	    will be automatically hidden from most commands.  The changelist
	    limits that are in effect for a given client are displayed in a
	    new read-only client spec field called 'ChangeView'.

	#650821 (Bug #31840) **
	    The new 'p4 clean' command (equivalent to the new '-w' flag
	    for 'p4 reconcile') can be used to restore workspace files to
	    match the state of the corresponding depot files.  Files that
	    have been added to the workspace but not opened for add will
	    be removed from the workspace, and files that have been
	    modified or removed without being opened for edit or delete
	    will be refreshed to match the version that was last synced.

	#708510 (Bug #522, #2121, #2170, #18255, #21302, #24025, #25080,
	         #25715, #32821, #55643, #60662, #65728) **
	    It is now possible to specify pre/post triggers on most commands.
	    A new trigger type of 'command' exists that executes when a command
	    matching the specified regular expression (regex) is run.  E.g.

	    banner command  pre-user-login      "figlet Hello, %user%"
	    nooblt command  pre-user-obliterate "fail command disallowed"
	    ide_fn command post-user-(add|edit) "integration_with_ide.exe"

	#726410 (Bug #18330) **
	    Triggers can now be run directly from the depot. Plain or stream
	    depot files with an optional revision number can now be specified 
	    when placed within percent signs.  E.g. %//depot/trigger.pl%.
	    When a depot path variable is present in the trigger command, 
	    the contents of the variable are filled with the path to a temporary
	    file with the contents of the depot file.  E.g.:

	       chk_path form-in client "perl %quote%%//admin/trigger.pl%%quote%"

	    Becomes 

	       perl "/tmp dir/some_tmp_named_file"

	#711144 **
	    The monitor information, the table db.monitor, will now be
	    maintained in shared memory by default.  Enabling monitor
	    information will require a server restart.  The tunable
	    db.monitor.shared can be set to 0 to disable shared memory
	    or set to a number of pages of shared memory should the
	    default (1Mbyte) be too small.  All changes to this
	    require a server restart.

Minor new functionality in 2014.1

	#893342 ** (Bug #52885)
	    By default when the journal is rotated any structured logs are
	    also rotated.  When the new dm.rotatelogwithjnl configurable
	    is set to zero, log rotation is not performed at journal rotation.

	#793339 (Bug #68848, #71375) **
	    The new trigger type 'change-failed' can be used to detect submit
	    or populate failure as it only fires upon commit failure and
	    returns the change number of the failed submit or populate.

	#790634 (Bug #71355) **
	    Delete resolves are now ordered after other resolves.

	#784208 (Bug #68928) **
	    p4d db file use changed which may improve operation on
	    Windows platforms with some anti-virus scanners.

	#784278 (Bug #64900) * **
	    'p4 shelve -a leaveunchanged' shelves only changed files.

	#774149 (Bug #70076) **
	    'p4 copy' now supports a '-f' flag to force the creation of extra
	    revisions for integration bookkeeping purposes.

	#770301 (Bug #60662, #69042) **
	    The following new variables are available to triggers:

	    argc - command argument count
	    args - command argument string
	    command - command name
	    clientcwd - the client's current working directory
	    groups - space-separated list of groups the user is in
	    intermediateService - presence of a Broker/Proxy
	    maxErrorSeverity - empty/error/warning
	    maxErrorText - error number and text of error
	    maxLockTime - user-specified value
	    maxResults - user-specified value
	    maxScanRows - user-specified value
	    serverpid - the OS PID of the calling server process
	    serverServices - 'Services:' field of 'p4 server -o'.
	    serverVersion - version string for the server
	    submitserverid - id of server where submit originated
	    terminated - if the command exited early
	    termType - reason for the early termination
	    triggerMeta_action - command to execute by trigger
	    triggerMeta_depotFile - third field in trigger definition
	    triggerMeta_name - name from trigger definition
	    triggerMeta_trigger - second field in trigger definition

	    The %serverport% trigger variable now includes a transport prefix
	    (eg, "ssl:", "tcp6:", or "ssl6:").  Thus "p4 -p %serverport%"
	    can be used to connect to the server whether or not the server
	    listens on IPv4 or IPv6, with or without SSL.

	    See 'p4 help triggers' for all available variables.

	#766844 (Bug #70121) **
	    The '-T' flag for 'p4 streams' now forces tagged output.

	#766646 (Bug #70579) **
	    The 'files -A', 'print -A', and 'sizes -A' commands now process
	    revision specifiers correctly when accessing the archive depot.

	#763331 (Bug #70458) **
	    'p4 describe' now diffs text+k files with the keywords collapsed
	    so that the diff output is more consistent with 'p4 diff2'.

	#758482 (Bug #65107) **
	    The metadata pull thread on a replica server may now choose to
	    specify '-i 0'. This will reduce the replica lag on that replica
	    at the cost of slightly higher resource usage on the master server.

	#752276 (Bug #70027) **
	    'p4 populate' now uses the command line arguments as the
	    changelist description if no description is provided.

	#738116 (Bug #39274) * **
	    'p4 sync' now accepts the '--parallel' flag, to specify that
	    multiple files should be transferred in parallel, using
	    independent network connections from automatically-invoked child
	    processes. In order to run a parallel sync, the configurable
	    net.parallel.max must be set to a value greater than 1.

	#728727 (Bugs #68822, #59107) **
	    When a replica server replicates a large changelist containing
	    new integration history, the table locking is optimized to lock
	    revision data in the replica for a shorter period.

	#728562 (Bug #67686) **
	    Multiple counters may be updated in a single command.
	    Please see 'p4 help counter' for details.

	#724073 (Bug #30052, #58946) **
	    Triggers typically get their parameters via command line variables
	    like %formfile% or %client%.  Now when the new triggers.io
	    configurable is set to 1, triggers will receive a dictionary of
	    key/value pairs sent to their STDIN and can send their dictionary
	    response back to the server via STDOUT, similar to how the Broker
	    does it.  This new configurable defaults to a value of 0, which is
	    13.3 behavior. A future release will change the default to 1.

	#723545 (Bug #69286, #69288) **
	    An update command submitted via a forwarding replica which is
	    interrupted while it is waiting for replication processing to
	    complete will no longer cause unnecessary system resource usage
	    in the forwarding replica. New system configurables are available
	    for fine-tuning these behaviors: see 'p4 help configurables'.

	#720626 **
	    'p4 unload' now accepts the '-o outputFile' flag. 'p4 unload -o'
	    writes the current state of the specified client, label, or
	    task stream to the specified file on the client workstation,
	    instead of unloading the object from the server to the unload depot.
	    The client, label, or task stream remains fully loaded after the
	    command is run.

	#719619 **
	    An administrator may use 'p4 print -U' to display the data from
	    an unloaded client, label, or task stream.

	#717327 (Bug #40148) **
	    'p4 client -d -f -Fs' will delete a client even when it has changes
	    with shelved files.  In this case, the shelved changes are
	    left intact.

	#711631 (Bug #67673) * **
	    'p4 reconcile -m' reduces costly digest computation on the
	    client when detecting if files are changed outside of Perforce.
	    This option can only be used if the files had been synced
	    with the +m filetype, or using a client with "modtime" option set.

	#710472 (Bug #66978) **
	    'p4 fstat' now returns the 'isMapped' field for files that are 
	    open for add and mapped in the current client view.

	#710347 (Bug #68682) **
	    Resolve records are now only considered to be 'pending integrations'
	    for the purposes of 'revert -a' and 'revertunchanged' if they are of
	    the type that will be written as permanent integration records on 
	    submit, i.e. originating from a different file from the target.

	#709340 (Bug #65698) **
	    Super users can now run 'p4 logout -a USER' to invalidate another
	    user's login ticket.

	#705255 (Bug #36551) **
	    Server command options may now be specified using an alternative
	    long-form syntax. For example, instead of

		p4 reopen -c 1602 -t text+F //depot/my/file

	    you may now instead use

		p4 reopen --change 1602 --filetype text+F //depot/my/file

	    To display the long-form options syntax for a particular command,
	    use the '--explain' facility:

		p4 sync --explain

	    Or to explain the syntax for just a single option of a command:

		p4 revert --explain -k

	    In this release, nearly all options have both a short-form and a
	    long-form syntax. The option behaves identically using either
	    syntax. Some rarely used options have only a short-form syntax.

	#704128 (Bug #65154) **
	    Expose the in-use %P4PORT% to SSO scripts so they can distinguish
	    between the port used to talk to a broker/proxy and the real
	    serverAddress.

	#703887 (Bug #62279) **
	    Populate now fires change-submit triggers. As with change-content
	    triggers, a temporary pending change record is created so that the
	    description can be accessed, but be aware that populate does not
	    have open files associated with it.

	#696966 (Bug #57909) **
	    'p4d -jd -z' now adds the '.gz' extension to the dump file if the
	    filename doesn't already end with .gz.

	#693803 (Bug #67684) **
	    'p4 list' now takes the -d flag to delete a no-longer-needed
	    temporary label.

	#685967 (Bug #65732) **
	    The new 'p4 cachepurge' command can be used by an administrator
	    to help manage replica servers which must be deployed on machines
	    with limited disk space resources.

	#679524 (Bugs #26192,#52493) **
	    'p4 sizes' now takes the -h flag to request the output be
	    formatted in human-readable form.

	#676312 (Bug #64123) **
	    In a distributed configuration, changes which are pending or
	    shelved on an Edge Server are now visible in the 'p4 changes'
	    command on other servers in the installation.

	#673961 (Bug #67442) **
	    'p4 copy' will now give warning messages when source files have
	    been moved but the target is not correctly disposed to open them
	    for move.  In addition to a warning for each problematic file,
	    there is a summary at the end suggesting a course of action to
	    correct the problem (e.g. first copying from an earlier change 
	    that will provide a better basis for copying the move).

	#664438 **
	    'p4 merge' will now output scheduled resolves by default.  This
	    was previously enabled by the '-Or' flag.

	#657309 (Bug #3270) **
	    The new 'p4 renameuser' command renames an existing user to a
	    new name, updating all the changes, specs, and other objects owned
	    by that user. For more information, and some issues to consider
	    prior to running the command, see 'p4 help renameuser'.

	#656580 (Bug #65730) **
	    The configurables template.client and template.label can be set to
	    provide a server-wide default client and/or label to be used as a
	    template when the new client or label does not already exist and the
	    -t argument is omitted from the 'p4 client' or 'p4 label' command.

	#656151 (Bugs #42211,#44034) **
	    The server.depot.root configurable can be set to modify the
	    interpretation of a relative Map: field in all depot specs. Without
	    the configurable set, relative maps are interpreted as relative to
	    P4ROOT; with the configurable set, relative maps are interpreted
	    as relative to the value of server.depot.root.

	#654585 (Bugs #19368,#51693,#56354,#68105,#70602) **
	    The server now records checkpoint/journal history entries in the
	    db.ckphist table. This new table is not part of the main server
	    database; it need not be backed up and can be deleted at any time.
	    The 'p4 journals' command can be used to diplay information from
	    the db.ckphist table.

	#644426 (Bug #64836) **
	    More keywords are now available with ktext files:

	        $DateUTC$ - date of file submission, in UTC.
	        $DateTimeUTC$ - date and time of file submission, in UTC.
	        $DateTimeTZ$ - date and time of file submission, in the
	                       server's timezone, with the timezone information
	                       included in the keyword expansion.

	#618344 (Bug #64824) **
	    'p4 unlock' supports the '-x' flag in a distributed installation to
	    enable clearing of orphaned exclusively locked files.

	#616600 (Bug #64822) **
	    'p4 opened' supports the '-x' flag in a distributed installation to
	    display files which are opened exclusively across the entire
	    installation.

Bugs fixed in 2014.1

	#1242773 (Bug #81040) **
	    The server.locks.archive configurable introduced by #898102 now
	    also applies to the 'p4 restore' command.

	#1239015 (Bug #80722) **
	    A file which was integrated from a streams depot to a local
	    depot, or vice versa, would be placed into the wrong location in
	    the proxy cache if it was accessed via the proxy by a command
	    such as 'p4 sync' or 'p4 print'. Note that the symptom of this
	    bug is in the proxy cache, but the fix is in the server.

	#1225187 (Bug #74936) **
	    A 'sync --parallel' command issued via a forwarding replica would
	    complete immediately, but would sync no files.

	#1213529 (Bug #79647) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server.

	#1028809,#1204292 (Bug #56707) **
	    The presence of a client spec with the same name as the TCP/IP
	    address of a replica machine no longer causes that replica to
	    issue the error: "Don't know how to translate paths for OS ''".

	#1172454 (Bug #79504) **
	    A submit initiated on an Edge Server which failed due to a
	    problem detected after the edge-content trigger had been checked
	    could leave the changelist incorrectly marked as "shelved", and
	    possibly also as "promoted", on the Commit Server, although the
	    changelist was correctly recorded on the Edge Server itself.
	

	#1127279 (Bug #79353) **
	    A 'sync --parallel' command which sync'd any files of type 'binary'
	    would write an incorrect value for the 'type' field of the db.have
	    record for the binary file(s). This could cause problems later
	    when integrating changes into these files from other branches.
	    Any workspaces potentially affected by this bug should be sync'd
	    to revision #0 and then re-sync'd for all files of type binary at
	    their convenience in order to rewrite the db.have records.

	#1065376 (Bug #77360) **
	    In a distributed configuration, the 'edit -n' and 'delete -n'
	    commands for a file of type +l might incorrectly report that
	    the file was opened by another user, though it was not.

	#1061247 (Bugs #78830,#78915) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly write its own journal file under conditions of high
	    concurrency on the master, resulting in incorrect behavior and
	    problems with replicas of this replica.

	#1059769 (Bug #78855) * **
	    'p4 sync --parallel' now works with certain custom licenses.
	    
	#1058411 (Bug #78785) **
	    If a replica with rpl.checksum.change set to 2 or higher
	    encountered an internal error processing a changelist checksum
	    note, it would halt replication. Now, it logs the error but
	    resumes replication.

	#1047418 (Bug #78444) **
	    The replica-specific table db.user.rp is now journaled. This means
	    that the table data will appear in checkpoints, journals and
	    dumps. The replica pull thread automatically filters out all
	    db.user.rp records from its P4TARGET server, which is normally the
	    desired behavior, since records in this table are unique to each
	    replica's activity. However, for maintaining warm standby replicas
	    of other replicas, you can set rpl.replay.userrp=1 for the standby
	    replica to disable the filtering and replicate db.user.rp data.

	#1045565 (Bug #78497)
	    Promoting a shelf, then subsequently deleting it, using the same
	    network connection to the Edge Server could fail to properly
	    delete the shelf.

	#1042783 (Bug #78427) *
	    'p4 -P <ticket> sync --parallel' will no longer give authentication
	    errors for the file transfer sub-processes.

	#1039831 (Bugs #73075, #74961) **
	    The revision specifier @client was not working properly for
	    clients bound to a build-server.

	#1039277 (Bug #78383) **
	    A 'p4 describe' command which accesses a remote promoted shelf now
	    properly reports any communications-related error conditions which
	    occur when retrieving the remote shelf.

	#1038837 (Bug #78164) **
	    In a distributed environment, the change-failed trigger now
	    runs on the commit server rather than on the edge server.

	#1037755 (Bug #76982) *
	    If a 'p4 sync --parallel' child process encounters an error
	    writing files to the local machine, the parent 'p4 sync' command
	    now returns a non-zero exit status to the operating system.

	#1036596 (Bug #77433) **
	    In a distributed configuration, 'p4 unshelve' no longer takes
	    the global exclusive file lock for a file of type +l which is
	    unshelved for add.

	#1035769 (Bug #78256) **
	    A replica running 2014.2 or later which is connected to an earlier
	    master server no longer displays 'Unknown command' when the
	    'p4 pull -lj' command is run.

	#1032010 (Bugs #74056,#71961) **
	    'p4 sync --parallel' would fail to expand RCS keywords properly.
	    And 'p4 sync --parallel' would fail with the message "Can't clobber
	    writable file" if the file was changed from filetype binary+w to
	    filetype binary (or text+w to text) by the revision being sync'd.

	#1031176 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030313 (Bug #77559) **
	    A build-server replica would incorrectly process the View: field
	    for labels, causing the wrong set of revisions to be specified
	    by the label.

	#1028372,#1028461 (Bug #77558) **
	    A replica with lbr.replication=cache was not able to access
	    labels using the autoreload option.

	#1027668 (Bug #77595) **
	    'p4 export -f' now formats the domain type column correctly for
	    unloaded clients, unloaded labels, and unloaded task streams.

	#1026707 (Bug #77504) ** *
	    'p4 -Zproxyload sync --parallel=...' now correctly updates the
	    proxy's archive cache without sending files to the client.

	#1026534 (Bug #77280) **
	    If a change submitted via an Edge Server was rejected by a
	    change-submit or change-content trigger on the Commit Server,
	    the change's files were modified to read-only mode on the client
	    machine rather than being left in writable mode.

	#1026233 (Bug #77435) **
	    A 'p4 integ' or 'p4 unshelve' command on an Edge Server which
	    failed to open a +l file due to a client-side file transfer error
	    would leave an orphaned lock record in db.excl.

	#1010386 (Bug #77471) **
	    The 'reload -p' command, used to migrate a workspace from one
	    Edge Server to another, or between an Edge Server and the Commit
	    Server, failed in certain specialized licensing scenarios.

	#1008489 (Bug #77390) **
	    In a distributed installation, a pending change can be viewed on
	    a server other than the server where the change was created. In
	    such a situation, the pending change will not display a list of
	    open files (the open files are shown only on the owning server).
	    The 'change -d' command would incorrectly allow the pending change
	    to be deleted if the command was issued on a server other than the
	    owning server; this behavior is fixed and the command is now
	    rejected with an appropriate error message.

	#1004762 (Bug #77358) **
	    Fixed a crash that could occur when unshelving moved files to
	    a different branch.

Bugs fixed in 2014.1 PATCH13

	#1003287 (Bug #77269) **
	    On a forwarding replica with server.depot.root set, a submit which
	    added new files to a depot with a relative mapping would cache
	    copies of those files in the default location under P4ROOT, instead
	    of in the directory named by server.depot.root


	#999862 (Bug #76686) **
	    Parallel sync could under some high concurrency scenarios scan
	    too many rows from db.sendq. This has been fixed.

	#998869 (Bug #73278) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly report that a changelist checksum differed if the
	    changelist was submitted by a workspace with SubmitOptions =
	    revertunchanged and at least one unchanged file was reverted
	    during the submission of that changelist.

	#965257 (Bug #61632) **
	    The pull and pull -u threads of replica servers no longer retain
	    an open file handle to the journal file on the master server
	    when they are otherwise idle.

	#954124 (Bug #75844) **
	    In certain chained replica configurations, updates to 'p4 server'
	    specs on the master server were not propagated beyond the first
	    replica on the chain.


	#949563 (Bug #75718) **
	    On an Edge Server, 'p4 print -o' of a remote shelf mishandles the
	    name of the output file.


	#932013 (Bug #71795) **
	    A better error message is issued when accidentally attempting to
	    use a Commit Server-bound workspace on an Edge Server. Also, the
	    'p4 clients -s NNN' and 'p4 labels -s NNN' commands now print the
	    complete list of clients/labels when NNN is the Commit Server's
	    serverid.

Bugs fixed in 2014.1 PATCH8

	#902281 (Bug #70245) **
	    This change improves performance of 'p4 archive' against large
	    datasets.  Multiple scans have now been reduced to a single scan 
	    of pending integration data.

	#901816 (Bug #74020) **
	    When migrating client workspaces from commit servers to edge
	    servers, promoted shelves are no longer accessible on the
	    edge server they are bound to.  This change allows unshelve
	    to automatically pull metadata and content to the server with
	    the correct ownership.

Bugs fixed in 2014.1 PATCH7

	#898102 (Bug #74160) **
	    Heavy use of the 'p4 archive' command can block other commands
	    due to server locks.  With 'peeking' enabled server.locks.dir
	    cannot be disabled.  To turn-off this long duration lock for
	    archive set server.locks.archive=0.
	    
Bugs fixed in 2014.1 PATCH6

	#893234 (Bug #73768) **
	    'p4 clean' will no longer attempt to take exclusive depot file 
	    locks in a distributed environment.

	#889286 (Bug #72677) **
	    'p4 copy' will no longer attempt to exclude source revisions that 
	    have previously been marked as ignored.

	#886610 (Bug #63251) **
	    The forwarding replica and edge server configurations now accept
	    the optional username argument on the 'p4 login' and 'p4 logout'
	    commands.

	#886584 (Bug #73402) **
	    'p4 renameuser' would fail to completely rename the user.

Bugs fixed in 2014.1 PATCH5
	
	#882067 (Bug #73412) **
	    Replication can be halted due to lock-order issues when the
	    configurable rpl.checksum.change is set to a value of 2 or
	    more. This problem can only happen if the master server and
	    the replica server are both running in lockless mode and
	    if two concurrent submits (one with integration history)
	    interleave transactions.

	#880506 (Bug #71725) **
	    The istat.mimic.ichanges configurable controls the reporting
	    of revisions between stream and parent.  If set, istat will
	    not report cherry-picked revisions already present in the target.
	    The default behavior will report any changes not credited, even 
	    when the content may already be in the target.

	#877872 (Bug #73313) **
	    An 'annotate', 'diff', 'diff2', 'describe', or 'resolve' command
	    which used the '-db' or '-dw' flags could crash if one of the file
	    revisions processed by the command was exactly 65,536 bytes in size.

Bugs fixed in 2014.1 PATCH4

	#875393 (Bug #72649) **
	    'p4d -xf 71917' could promote unpromoted shelved changes from
	    a 2014.1 edge server. This has been fixed.

	#874978 (Bug #73263) **
	    When using streams the dynamic view generator could crash on
	    parsing a very long stream path.

	        (Bug #73265) **	
	    This version addresses the SSL/TLS MITM CVE-2014-0224 vulnerability 
	    in OpenSSL by linking in version 1.0.1h 

Bugs fixed in 2014.1 PATCH3

	#870919 (Bug #73199) **
	    'p4 verify' has been added to the list of files that can
	    run in lockless mode

	#870334 (Bug #72151) **
	    'p4 annotate -I' now works correctly with the '-dw' flag.

	#870199 (Bug #73184) **
	    Highly concurrent server submit operation could cause
	    corruption of tables db.integed and db.resolve.  Fixed.

Bugs fixed in 2014.1 PATCH2

	#853209 (Bug #72629) **
	    'p4 fstat @=<promoted shelf>' from an edge server would not 
	    automatically fetch meta-data for a remote shelf unless the -Rs 
	    option was specified.

	#850073 (Bug #72842) **
	    'p4 submit' will no longer record revisions with invalid archive
	    paths after unshelving an integrated file through a branch view.

	#849654 (Bug #72162) **
	    Commands which must find lazy copies, i.e. obliterate, retype,
	    and fstat -Oz, could cause stack overflows when there
	    are many branches against the same file.  Fixed.

	#849566 (Bug #72816) **
	    The Edge Server algorithm for handling the replication of a large
	    'p4 obliterate' command is now more efficient.

	#844664 (Bug #72542) **
	    'p4 fstat' will no longer return 'isMapped' twice on files that
	    are open for move/add.

	#844110 (Bug #72726) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly report that a changelist checksum differed if the
	    changelist contained moved files which had previously been moved
	    by an earlier changelist (and both moves were lazy copies)

	#844029 (Bug #72471) **
	    'p4 renameuser' no longer corrupts the user's stored password.

	#843871 (Bug #72411) **
	    'p4 admin journal' and 'p4d -jj' could incorrectly rotate the
	    server's journal on a heavily loaded Linux server, resulting in
	    some journal records which were generated after the journal
	    rotation being written to the end of the already-rotated journal.

Bugs fixed in 2014.1 PATCH1

	#840418 (Bug #72690) **
	    'p4 diff2 //file#head //file@=<shelved changelist>' where the
	    shelved changelist was 'promoted' in a commit/edge server 
	    configuration could crash the server.

	#834556 (Bug #72533) **
	    'p4 fstat' in a distributed environment (commit/edge) was not
	    reporting other server exclusive lock opens.

	#827741 (Bug #72275) **
	    The maximum line length for an RCS keyword file is now configurable,
	    set via lbr.rcs.maxlen.  The default has been increaed to 10M.

	#827683 (Bug #72399) **
	    The server could crash if it failed to open the journal.

	#826998 (Bug #71750) **
	    On Windows, a protects table entry that uses an IPv4 address with
	    CIDR notation may not match the correct addresses if it has an octet
	    that begins with a 0 digit and has a following octet whose value
	    is greater than 7.

	#826594 (Bug #72180) **
	    Triggers now set %serverip% to IP address rather than to hostname.

	#826586 (Bug #72298) **
	    The mode of the lbr.replication configurable is now reported in
	    the tagged output for 'p4 info' when the value is set.

	#825277 (Bug #72301) **
	    Tagged output for 'p4 shelve -a leaveunchanged' now reports
	    the files that have not been shelved due to being unchanged.

	#824742 (Bug #71917) **
	    Upgrade from a pre-2014.1 commit server will not automatically
	    cause promotion of the shelved changes on the commit server.
	    'p4d -xf 71917' can be used to promote all shelved changes on
	    a commit server.

	#824528 (Bug #72062) **
	    'p4 shelve -r -a leaveunchanged' resulting in a shelved change
	    being deleted could leave an empty shelved change with no
	    files. This has been fixed.

	#817279 (Bug #71661) **
	    'p4 reconcile -n' will no longer take an exclusive lock. In a
	    distributed environment this could cause orphaned exclusive
	    locks. This has been fixed.

	#816430 (Bug #72113) **
	    A file that has been moved into the place of a previously
	    moved file, and then moved back to its original name, can now
	    be merged at the same time as the file whose place it was moved
	    into, provided that the current filenames do not conflict.

	#816057 (Bug #71614) **
	    A streams command may not return all streams when running in a
	    long-running connection and a new stream depot and stream are
	    created in a more recent connection.  This has been fixed.

	#815663 (Bug #72028) **
	    Merges into a task stream will now correctly track repeated renames
	    in the parent.

Bugs fixed in 2014.1

	#834175 (Bug #72533) **
	    'p4 fstat' in a distributed environment (commit/edge) was not
	    reporting other server exclusive lock opens.

	#827741 (Bug #72275) **
	    The maximum line length for an RCS keyword file is now configurable,
	    set via lbr.rcs.maxlen.  The default has been increaed to 10M.

	#827683 (Bug #72399) **
	    The server could crash if it failed to open the journal.

	#826586 (Bug #72298) **
	    The mode of the lbr.replication configurable is now reported in
	    the tagged output for 'p4 info' when the value is set.

	#825277 (Bug #72301) **
	    Tagged output for 'p4 shelve -a leaveunchanged' now reports
	    the files that have not been shelved due to being unchanged.

	#824742 (Bug #71917) **
	    Upgrade from a pre-2014.1 commit server will not automatically
	    cause promotion of the shelved changes on the commit server.
	    'p4d -xf 71917' can be used to promote all shelved changes on
	    a commit server.

	#824528 (Bug #72062) **
	    'p4 shelve -r -a leaveunchanged' resulting in a shelved change
	    being deleted could leave an empty shelved change with no
	    files. This has been fixed.

	#817279 (Bug #71661) **
	    'p4 reconcile -n' will no longer take an exclusive lock. In a
	    distributed environment this could cause orphaned exclusive
	    locks. This has been fixed.

	#816430 (Bug #72113) **
	    A file that has been moved into the place of a previously
	    moved file, and then moved back to its original name, can now
	    be merged at the same time as the file whose place it was moved
	    into, provided that the current filenames do not conflict.

	#816057 (Bug #71614) **
	    A streams command may not return all streams when running in a
	    long-running connection and a new stream depot and stream are
	    created in a more recent connection.  This has been fixed.

	#815663 (Bug #72028) **
	    Merges into a task stream will now correctly track repeated renames
	    in the parent.

	#803197 (Bugs #70703,71826) **
	    The tagged form of the 'p4 submit' command against an Edge Server
	    was returning messages from the Commit Server in non-tagged form.

	#797554 (Bug #71642) **
	    Renames that occurred prior to a file being re-added will no longer
	    be considered when integrating from that file unless an 'add from'
	    record bridges the deletion.

	#794583 (Bug #45366, #71436) **
	    'p4 -Ztag groups -m' could return less than the -m number of group
	    data. This has been fixed.

	#792056 (Bug #71418) **
	    'p4d -jr -s j1 j2 j3 ...' only re-journaled the database updates
	    for the first journal named on the command line.

	#790488 (Bug #71314) **
	    'p4 unshelve -s <arg> -c <arg2>' would fail to report if the
	    shelved change was already committed, but instead would report
	    "No such file(s)". This has been fixed.

	#784547 (Bug #71137) **
	    It was possible to delete a shelf with pending resolves scheduled
	    against a different depot file (via unshelve -b).  This has been
	    fixed so that the shelf deletion is now blocked.

	#783372 (Bug #69572) **
	    Stream and StreamAtChange fields of a client specification were
	    not being validated during the editor session, which could cause
	    other spec data updated during the session to be lost.  This has
	    been fixed.

	#782990 (Bug #64713) **
	    Prevent a file which is already opened in a numbered change
	    from being reopened by another user who does not own the change
	    but who is sharing the workspace of the owner of the change.  This 
	    could have occurred when the '-c' was absent on the reopen command.

	#777730 (Bug #70950) **
	    A 'p4 revert' command which ran concurrently while a 'p4 shelve'
	    command was underway using the same workspace and changelist
	    could cause that shelve command to crash, if the shelve command
	    included certain undocumented arguments.

	#777200 (Bug #70696,#70962)
	    With 'db.peeking' enabled in 2013.3, long running (overlapping)
	    'p4 sync' operations would block 'p4 obliterate' from running.
	    A 'sync -s' or client with the 'allwrite' option during a sync
	    can cause a Server fault if max results is hit.  This has been
	    corrected.

	#775130, #774830 (Bug #70845, #70906) **
	    Some merge cases involving files being moved, deleted, and readded
	    in unusual ways are now handled better.

	#772218 (Bug #70760) **
	    A situation in which 'p4 integrate' could give a mapping error
	    with a blank path has been fixed to give the correct error.

	#771811 **
	    The undocumented tunable rpc.deliver.duplex now defaults to 1.
	    This means that the behavior described in change 671142 is now
	    opt-in, rather than opt-out; you must explicitly set
	    rpc.deliver.duplex=0 to enable the change 671142 behavior.

	#769878 (Bug #66184) **
	    Merges made into a task stream from a stream other than its parent
	    will now be 'promoted' and publicly visible.  Note that task streams
	    become less lightweight as more files are promoted, so it is recommended
	    that task streams only merge/copy to and from their parent streams.

	#769770 (Bug #68423) **
	    The 'p4 logrotate' command was not correctly rotating structured
	    server logs with names that didn't include a file extension (.csv).

	#769683 (Bug #34428) **
	    The 'p4 logtail' command now reports the file offset correctly
	    when run against a Windows server.

	#769476 (Bug #64593) **
	    The 'p4 pull' command now defaults to '-P serverid' if the replica
	    has a serverid and no -P flag has already been specified.

	#768121 (Bug #70627) **
	    'p4 interchanges' could report extra changes in cases where
	    a file had multiple sequential delete revs.  This has been fixed.

	#768000 (Bug #70626) * **
	    Allow zero line context and unified diff output.

	#767850 (Bug #69355) **
	    'p4 reconcile -n' and all of its aliases now only require 'read'
	    permission on the files in its path to show what needs to
	    be reconciled.

	#767206 (Bug #70620) **
	    It was possible for 'p4 integrate' of a file that was moved in two
	    different branches to be matched up with the wrong variant of the 
	    file if it had been deleted and re-added in one of the branches 
	    prior to being moved.  This has been fixed.

	#767009 (Bug #70548) **
	    'p4 shelve -c' now gives a 'files not opened in that change' error
	    rather than 'no such files' when there are no files to shelve.

	#765126 (Bug #69975) **
	    The dm.proxy.protects configurable may be used to control the
	    behavior of the protections table for connections made via proxies,
	    brokers, forwarding replicas, or Edge Servers. For more
	    information, please see 'p4 help protect'.

	#764636 (Bug #70559) **
	    'p4 list -M' on a forwarding replica or Edge Server was forwarding
	    the list command to the central server, but was also incorrectly
	    creating an empty list on the forwarding replica or Edge Server.

	#763622 (Bug #42297) *
	    A failed 'p4 revert' on Windows will no longer make the workspace
	    file read-only.

	#745928 **
	    Command arguments in structured logs can now be up to 4096
	    characters before they are elided (previously it was 80.)

	#758833 (Bug #70224) **
	    'p4 submit' from an edge server could hang if the server.locks.dir
	    configurable was set to the same absolute path on both the
	    edge and commit servers. This has been fixed.

	#753081 (Bug #69991,#69986) * ** ***
	    Under some unusual circumstances a client network error could
	    cause the broker to hang and use 100% of a cpu core. Also, some
	    network requests that experienced a transient error were not
	    automatically retried.

	#752957 (Bug #70168) **
	    A performance problem in 'p4 archive' introduced by change 696998
	    is addressed. The performance of 'p4 archive' now correctly depends
	    on the number of revisions being archived, not on the total number
	    of revisions examined by the 'p4 archive' command.

	#750787 (Bug #70120) *
	    On Mac OS X (and the Darwin build also) syncing a file might fail
	    with Operation not permitted because of the user immutable flag
	    on files.  We now remove this flag to complete the file transfer.

	#749425 (Bug #69604) **
	    'p4 istat' in a merge direction did not indicate all outstanding
	    changes reported by 'p4 merge'.  Regardless if the the content in
	    the target stream was correct, 'p4 istat' did not report identical
	    change information reported by 'p4 merge'.

	#749946 (Bugs #29923, #70101) *
	    UTF16 file detection changed to help block audio files
	    from being detected as UTF16.  Files which start with a
	    UTF16 BOM (Byte order mark) but which are not valid UTF16
	    or do not meet some textual tests will be considered binary.

	#744802 (Bug #69776) **
	    A server with security=3 which uses a P4AUTH server that has an
	    auth-check trigger defined will no longer perform password strength
	    checking, since the external authentication system is responsible
	    for enforcing password strength requirements.

	#740482 (Bug #69603) *
	    Conversions between the different Unicode UTF formats allow
	    the code positions U+FFFE and U+FFFF now.  These are
	    'sentinels' not characters and do not have printable
	    forms, but are translatable.

	#740373 (Bug #69859) **
	    An Edge Server with lbr.replication=cache or lbr.replication=shared
	    would incorrectly schedule archive transfer requests in the rdb.lbr
	    table.

	#738762 (Bug #69824) **
	    For the 'p4 describe', 'p4 diff', and 'p4 diff2' commands, 
	    specifying a value of N for the -dc[N] and -du[N] flags that is
	    greater than 2147483647 is now quietly ignored.

	#730272 (Bug #69436) **
	    'p4 status' would prefix bad characters on output lines if
	    the file argument had leading '.' or '..' characters. This has
	    been fixed.

	#728082 (Bug #69043) **
	    'p4 reviews -C <client>' with an all-numeric field for <client>
	    would fail in a distributed environment. This has been fixed.

	#727757 (Bug #69257) **
	    'p4 submit' will now fail if attempting to submit a branch or copy
	    of a revision that has since been obliterated or purged.

	#727035 (Bug #69492) **
	    The 'p4 servers' command would incorrectly display servers of
	    type 'broker' as 'invalid'.

	#718736 (Bug #69194) **
	    'p4 export -f' against an Edge Server could crash the Edge Server
	    if it encountered journal records for Edge Server-initiated submits.

	#714378 (Bug #68988) **
	    Files that were shelved for 'add'like operations were retaining
	    their resolve records (add, branch, or move) when unshelved over
	    existing depot files as 'edit' operations.  Since those resolve
	    record types do not make sense for 'edit' revisions, they are now
	    dropped when those actions are converted to 'edit'.

	#709281 (Bug #68824) **
	    Updating an autoreload label would write the updated label contents
	    to a new unload file rather than rewriting the original unload file
	    if spec.hashbuckets had been changed since the label was first
	    created.

	#707928 (Bug #52982) **
	    'p4 obliterate' will now clear the cache used by 'p4 istat' when
	    deleting revision records within a stream.  Previously it was
	    possible for 'p4 istat' to return stale results after an obliterate.

	#707664 (Bug #68752) **
	    'p4 counters -m' might display more counters than the -m limit if
	    one or more of the system configurables 'monitor', 'security',
	    'unicode', 'minClient', or 'minClientMessage' were set.

	#704245 (Bug #67904) **
	    'p4 fstat -e <shelvedChange> -Rs -Ol" now reports the file size
	    and digest of files shelved at the specified change. Previously
	    it reported the size and digest of files at the head revision.

	#699932 (Bug #19001) *
	    The modtime client setting and +m file type modifier now only
	    set the file modification time.  Previous versions would also
	    set the file access time to the same value as the modificiation
	    time.

	#698965 (Bug #68292) **
	    The diff '-dw' and '-db' flags would fail to ignore whitespace at
	    the end of a file that did not end with a newline.

	#697571 (Bug #68302) **
	    A 'p4 restore' command with multiple filespec arguments will no
	    longer halt at the first filespec argument for which no revisions
	    can be restored.

	#696453 (Bug #65901) **
	   'p4 changes -s restricted' and 'p4 changes -s invalid' used to
	   return bogus data. Now these commands return an error message.

	#687657 (Bug #67951) **
	    A rare case where ignore credit could be lost in the process of
	    overwriting a change via copy has been corrected.

	#685799 (Bug #67698) **
	    Integrating and resolving a moved file would sometimes suggest 
	    ignoring the move when it had been copied over by another file.  
	    This has been corrected.

	#672366 (Bug #70860) **
	    When a 'copy' content resolve is combined with an 'ignore' filetype
	    resolve it will now be recorded as a 'merge' to ensure that the
	    copy does not override the outstanding filetype difference.


	#659164 **
	    'p4 reconcile' will now detect files that have been added to
	    the workspace in locations that map to existing (unsynced) depot
	    files.

	#644128 (Bug #66194) **
	    'p4 logstat -l journal' now works as documented.

	#642804 (Bug #66179) **
	    For some types of file damage, 'p4 verify' will now print "BAD!"
	    where formerly it printed "MISSING!".

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r13.3/user/relnotes.txt
	to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Important changes to perforce database tables 2013.3 **

	NEW DATABASE FORMAT **

	    This release contains major changes to the perforce database
	    implementation (BTREE). These changes are not compatible with
	    the previous version (i.e. this is NOT a drop-in upgrade) and 
	    requires a restore from a checkpoint (note the journal format 
	    has not changed).

	    This release is functionally the same as 2013.2 apart from the
	    new btree format and the improved concurrency that can be enabled
	    with these database changes.

	    Before checkpointing your existing database, please read the
	    release note for Bug 68870 carefully to see if it applies to you.

Major new functionality in 2013.3

	#616010 (Bug #64576, #64577) **
	    Improved concurrency through lockless reads.  This release 
	    benefits from a new type of perforce lock known as 'peeking'.
	    When 'peeking' is enabled many common commands no longer 
	    block other commands attempting to update tables. Consistency
	    is applied through a new counter 'maxCommitChange' obtained
	    at the beginning of each command and through client entity
	    locks, which are fine-grain unique client locks that prevent
	    concurrent read/write access to an individual client.

	    A slightly different table lock-order is used with 'peeking' 
	    enabled, this is due to requirements when multiple tables
	    are accessed with a mixture of read and peek.  Also, submit 
	    is broken into 2 transactions,  the first is the update to 
	    key tables (i.e. the bulk of the submit) the second is an 
	    update to the submitters client data, this reduces the overall
	    update lock time for a submit.

	    Lockless reads are enabled when starting the server with the 
	    command line option '-vdb.peeking=2' or by the configurable 
	    'db.peeking' followed by a server restart.

	    e.g.  'p4 configure set db.peeking=2'  (needs server restart).

	    value   
	      0   disabled   (default)
	      1   new lock-order / entity locks       (diagnostic only)
	      2   peeking enabled               (hx/dx optimization on)
	      3   peeking enabled               (hx/dx optimization off)

	    A typically installation would run with peeking set to 2, the
	    value 3 is only intended for certain repositories as it carries
	    a trade-off between concurrency and command completion speed.
	    If your repository has many revisions per file then setting a
	    value of 3 may cause some commands to complete slower but will
	    not require read locks on the db.revhx/db.revdx tables.

	    List of commands that run lockless (peeking enabled):

	    annotate, branches, changes, clients, counters, depots, diff, 
	    diff2, dirs, filelog, files (-a) fixes, fstat (peeking=3), have, 
	    interchanges, integ, integed, istat, jobs, keys, labels, merge, 
	    print (-a), resolved, streams, sizes (-a), sync (peeking=3), users

	    List of commands that run partial lockless (peeking enabled):

	    copy, cstat, fstat, interchanges (copy), istat (copy), opened, 
	    sync

	    NOTE: With 'peeking' server.locks.dir can no longer be disabled,
	    that is because these locks are required for client consistency.
	    If you are a customer who has disabled this in the past due to
	    problems with syncs,  you can turn-off the longer duration lock
	    by setting server.locks.sync=0.

Minor new functionality in 2013.3

	#685514 **
	    This release has made changes to the way that 'p4 sync' manages
	    its memory consumption.  For all cases memory usage has been
	    reduced (up to 50% for initial syncs and forced refresh).

	#662490 **
	    Due to the heavy reliance on server.locks for better concurrency
	    the default value for spec.hashbuckets has been changed to 99.
	    Typically this value has already been increased from its previous
	    default of zero.

Bugs fixed in 2013.3

	#1239015 (Bug #80722) **
	    A file which was integrated from a streams depot to a local
	    depot, or vice versa, would be placed into the wrong location in
	    the proxy cache if it was accessed via the proxy by a command
	    such as 'p4 sync' or 'p4 print'. Note that the symptom of this
	    bug is in the proxy cache, but the fix is in the server.

	#1213529 (Bug #79647) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server.


	#1061247 (Bugs #78830,#78915) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly write its own journal file under conditions of high
	    concurrency on the master, resulting in incorrect behavior and
	    problems with replicas of this replica.


	#1058411 (Bug #78785) **
	    If a replica with rpl.checksum.change set to 2 or higher
	    encountered an internal error processing a changelist checksum
	    note, it would halt replication. Now, it logs the error but
	    resumes replication.

	#1047418 (Bug #78444) **
	    The replica-specific table db.user.rp is now journaled. This means
	    that the table data will appear in checkpoints, journals and
	    dumps. The replica pull thread automatically filters out all
	    db.user.rp records from its P4TARGET server, which is normally the
	    desired behavior, since records in this table are unique to each
	    replica's activity. However, for maintaining warm standby replicas
	    of other replicas, you can set rpl.replay.userrp=1 for the standby
	    replica to disable the filtering and replicate db.user.rp data.

	#1039831 (Bugs #73075, #74961) **
	    The revision specifier @client was not working properly for
	    clients bound to a build-server.

	#1036596 (Bug #77433) **
	    In a distributed configuration, 'p4 unshelve' no longer takes
	    the global exclusive file lock for a file of type +l which is
	    unshelved for add.

	#1035769 (Bug #78256) **
	    A replica running 2014.2 or later which is connected to a 2013.2
	    master server no longer displays 'Unknown command' when the
	    'p4 pull -lj' command is run.

	#1031176 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030313 (Bug #77559) **
	    A build-server replica would incorrectly process the View: field
	    for labels, causing the wrong set of revisions to be specified
	    by the label.

	#1028751 (Bug #56707) **
	    The presence of a client spec with the same name as the TCP/IP
	    address of a replica machine no longer causes that replica to
	    issue the error: "Don't know how to translate paths for OS ''".

	#1028372,#1028461 (Bug #77558) **
	    A replica with lbr.replication=cache was not able to access
	    labels using the autoreload option.

	#1027668 (Bug #77595) **
	    'p4 export -f' now formats the domain type column correctly for
	    unloaded clients, unloaded labels, and unloaded task streams.

	#1010386 (Bug #77471) **
	    The 'reload -p' command, used to migrate a workspace from one
	    Edge Server to another, or between an Edge Server and the Commit
	    Server, failed in certain specialized licensing scenarios.


	#811622 (Bug #71819) **
	    'p4d -xf 71819' may now be used to clear invalid or unnecessary
	    charset values from the database.  Note that this will scan the
	    entire revision table.

	#811455 (Bug #71765) **
	    'p4 reopen' will no longer set a charset on a non-Unicode file.

	#799439 (Bug #71686) **
	    'Accept theirs' charset resolves from revisions with corrupt
	    charset values will no longer cause a crash.

	#798198 (Bug #71648) **
	    A case in which a file with multiple sequential deleted revisions
	    could require integration unnecessarily has been fixed.

	#782068 (Bug #71155) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for edit is subsequently moved
	    and submitted by another client and the opened file is then synced 
	    to the head revision.

	#781820 (Bug #70845, #70906) **
	    Some merge cases involving files being moved, deleted, and readded
	    in unusual ways are now handled better.

Bugs fixed in 2013.3 PATCH2

	#778881 (Bug #70696) **
	    With 'db.peeking' enabled in 2013.3, long running (overlapping)
	    'p4 sync' operations would block 'p4 obliterate' from running.

	#778845 (Bug #70908) **
	    Disabling the db.peeking level and then running 'p4 admin restart'
	    would not change the lock order back correctly, resulting in lock
	    order errors.

	#778057 (Bug #70962) **
	    A 'sync -s' or client with the 'allwrite' option during a sync
	    can cause a Server fault if max results is hit.  This has been
	    corrected.

	#777796 (Bug #70950) **
	    A 'p4 revert' command which ran concurrently while a 'p4 shelve'
	    command was underway using the same workspace and changelist
	    could cause that shelve command to crash, if the shelve command
	    included certain undocumented arguments.

	#774784 (Bug #69991) ***
	    Under some unusual circumstances a client network error could
	    cause the broker to hang and use 100% of a cpu core.

	#773134 (Bug #70702) **
	    With 'peeking' enabled and a very high submit concurrency rate, the
	    maxCommitChange counter may get updated in the wrong order. This
	    bug might cause some transient inconsistency (most likely with
	    aggressive automation that tracks submits).

	#772545 (Bug #70700) **
	    A long running connection that switches between task and non-task
	    streams could run into lock order issues when issuing a submit.
	    The error "Locking failure: db.revtx locked after db.revdx!"
	    would be observed on submit.  A subsequent attempt to submit
	    the change would result in success.

Bugs fixed in 2013.3 PATCH1

	#768990 (Bug #70620) **
	    It was possible for 'p4 integrate' of a file that was moved in two
	    different branches to be matched up with the wrong variant of the 
	    file if it had been deleted and re-added in one of the branches 
	    prior to being moved.  This has been fixed.

	#768126 (Bug #70627) **
	    'p4 interchanges' could report extra changes in cases where
	    a file had multiple sequential delete revs.  This has been fixed.


	#760537 (bug #70422) **
	    With 'peeking' enabled on a forwarding-replica, the entity locks
	    used to maintain client consistency were not being correctly
	    released.

	#755431 (Bug #70230) **
	    With 'peeking' enabled, remote depot files with a change number
	    greater than the maxCommitChange value would be ignored.

	#753191 (Bug #70144) **
	    A case involving integration of files with a tricky combination
	    of prior ignore and copy records is now handled better.

	#752970 (Bug #70168) **
	    A performance problem in 'p4 archive' introduced by change 696998
	    is addressed. The performance of 'p4 archive' now correctly depends
	    on the number of revisions being archived, not on the total number
	    of revisions examined by the 'p4 archive' command.

	#749884 (Bug #69604) **
	    'p4 istat' in a merge direction did not indicate all outstanding
	    changes reported by 'p4 merge'.  Regardless if the the content in
	    the target stream was correct, 'p4 istat' did not report identical
	    change information reported by 'p4 merge'.

	#748216 (Bug #70041) **
	    Resolve will no longer give a false "already opened" error when
	    resolving an edited depot file against a moved depot file.

	#745284 (Bug #69946) **
	    Integrate will now consider all reverse integration records
	    between the source and target when trying to determine whether
	    the files share a close enough connection that scanning for
	    renamed variants is not necessary.

	#744839 (Bug #69776) **
	    A server with security=3 which uses a P4AUTH server that has an
	    auth-check trigger defined will no longer perform password strength
	    checking, since the external authentication system is responsible
	    for enforcing password strength requirements.

Bugs fixed in 2013.3

	#736593 (Bug #69548) **
	    p4 resolve' no longer crashes when attempting to handle database
	    records with invalid file charset values.

	#723545 (Bugs #69286, #69288) **
	    An update command submitted via a forwarding replica which is
	    interrupted while it is waiting for replication processing to
	    complete will no longer cause unnecessary system resource usage
	    in the forwarding replica.

	#716980 (Bug #68870) **
	    On a case-insensitive server, the 'p4 server' command was
	    incorrectly allowing the creation of two separate server specs
	    with ServerIDs that differed only in case. Additionally, the
	    'p4 servers' command was displaying the list of server specs
	    in case-sensitive sorting order on a case-insensitive server, and
	    the 'p4 configure show <serverid>' command was only showing
	    configuration variables for the server which matched exactly
	    in case. Starting with this change, case-insensitive servers
	    will process the ServerID value using case-insensitive matching.

	    Due to the new database format introduced with this release,
	    a restore from checkpoint is required. On a case-insensitive
	    server, this restore will have the following effects on the
	    existing server specs:
	    1) If there are multiple server specs with ServerIDs that differ
	       only in case, all but one of those server specs will be deleted;
	       only the last server spec will be retained.
	    2) The sort order of the existing server specs will be repaired,
	       so that the 'p4 servers' command now displays them in
	       case-insensitive sort order.
	    If you are operating a server in case-insensitive mode, then
	    prior to upgrading to this release, you should run 'p4 servers'
	    and see if you have multiple server specs for the same
	    case-insensitive ServerID. If you do, use 'p4 server -d' to
	    delete the unwanted server specs before checkpointing and restoring
	    your database, to ensure that the correct server spec is retained.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r13.2/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Major new functionality in 2013.2

	#616528 **
	    The new 'p4 integrate' engine made available in 2011.1 and 
	    refined in subsequent releases is now the default.  Sites 
	    which are using streams, or which have set the dm.integ.engine
	    configurable to an explicit value, will not see any difference 
	    in behavior.  Sites which wish to continue using the old 
	    (2006.1) integration logic must set the dm.integ.engine 
	    configurable to '2'.  Sites switching to the new engine should 
	    expect the following changes:
		1) New types of resolve scheduled for differences other
		   than content: filename, filetype, attribute, etc.
		   Note that in order to resolve differences in filename,
		   move/add and move/delete revisions must be integrated
		   together in pairs; attempting to integrate only half
		   of a moved file pair will by default result in an error.
		2) Many situations which used to cause integrate to fail
		   with an error and prompt for a flag in order to verify
		   the user's intent will now instead result in a resolve.
		   For example, files which have been deleted in the source
		   and edited in the target may now be resolved such that the
		   user can choose to accept or ignore the deletion.
		3) Base selection now considers the individual edits made to
		   each file in order to more accurately propagate changes.

	#575959 (Bugs #58134, #59015, #60774) **
	    The 'p4 server' spec now allows the definition of two new types
	    of Perforce server nodes: Commit Server, and Edge Server. An
	    installation with exactly one Commit Server, one or more Edge
	    Servers, and (optionally) other replicas, proxies, and brokers,
	    supports Federated Server functionality. An Edge Server is a
	    Forwarding Replica which independently supports local work in
	    progress. A Commit Server is a master Perforce server which
	    cooperates with each Edge Server to support submitting that work
	    via the Edge Server. Most work which requires a client workspace
	    is performed directly on the Edge Server, and is fully offloaded
	    from the Commit Server. Most administrative work, including the
	    commands which edit most spec objects, is performed on the
	    Commit Server, and is automatically forwarded when a spec
	    command ('p4 protect', 'p4 group', 'p4 stream', etc.) is issued
	    against an Edge Server. Since Edge Servers support distinct sets
	    of work in progress, they must be adequately provisioned,
	    securely administered, and reliably backed up; please contact
	    Perforce Technical Support if you need assistance in planning or
	    deploying Edge Server instances in your environment.

Minor new functionality in 2013.2

	#716174 (Bug #68945) **
	    A Windows Commit Server might crash under heavy load.

	#681927 (Bug #65134) **
	    'p4 list' now accepts the '-C client' flag.  This option 
	    limits the files to those mapped through the users client
	    workspace.

	#671247 (Bug #67318) **
	    'p4 reviews' now accepts the '-C client' flag.  This option 
	    limits the files to those opened in the specified clients
	    workspace (can be used with -c).

	#668192 (Bug #60133) **
	    The 'p4d -jd' and 'p4d -jr' commands now support '-k/-K' flags
	    for table-level filtering. These flags are uncommon, and are
	    generally used only by Perforce technical support.

	#647654 (Bug #66372) **
	    The lbr.replication configurable for a replica now accepts the
	    new setting 'cache'; see 'p4 help replication' for details. Also,
	    the rpl.verify.cache configurable can be specified to instruct the
	    replica to verify archive digests on every reference (this can be
	    expensive). Some variants of 'shelve -r' and 'shelve -f' now write
	    additional @dl@ journal records describing the archive files that
	    are being replaced in the shelf.

	#639050 (Bug #66099) **
	    'p4 sizes' now accepts the '-A' flag to display file size
	    information for files in the Archive depot.

	#625219 (Bug #64412) **
	    'p4 property -l -A' now includes the property sequence number in
	    its output.

	#623802 (Bug #2054, #65142) **
	    'p4 diff' and 'p4 diff2' now support a '-Od' flag to limit their
	    output to differing files only.

	#623464 (Bug #64868) **
	    Set security=4 to specify that authenticated service users must
	    be used for all replica server and remote depot connections
	    to this server.

	#618347 (Bugs #61231,#40707) **
	    'p4 unshelve' will now schedule a branch resolve when unshelving
	    an edit to a file that has been deleted or that does not exist.

	#618344 (Bug #64824) **
	    'p4 unlock' supports the '-x' flag in a distributed installation to
	    enable clearing of orphaned exclusively locked files.

	#616600 (Bug #64822) **
	    'p4 opened' supports the '-x' flag in a distributed installation to
	    display files which are opened exclusively across the entire
	    installation.

	#616051 (Bug #52759) **
	    'p4 sync' now defaults to the '-s' behavior for clients with
	    'allwrite' and 'noclobber' set.

	#615297 (Bug #63617) **
	    'p4 submit' will now record 'branch' and 'copy' resolve records
	    that come from earlier revisions of the same file as permanent
	    integration records.  This makes it possible to record that an
	    earlier revision was copied over a later one to roll it back.

	#612073 (Bug #64526) * **
	    'p4 reconcile' and 'p4 status' will now attempt to convert
	    'add' and 'delete' actions into paired 'move/add' and 'move/delete'
	    actions by comparing the added client files to the depot versions
	    of their missing counterparts.

	#605110 (Bugs #63955,#66716) **
	    'p4 revert' now accepts a '-w' flag to indicate that files which
	    are open for add should be deleted (wiped) from the workspace.

	#604353 (Bugs #60118,#62068) **
	    The server spec for a replica server now contains a new optional
	    field, named ArchiveDataFilter. This field can be used to specify
	    the files which are to be immediately scheduled for transfer to
	    the replica upon submit. Other files in the repository are still
	    available to the replica users, but since they were not fetched
	    immediately by the pull -u threads, there will be a delay when they
	    are first referenced while they are transferred from the master.

	#603759 (Bugs #64097, #64098) **
	    'p4 -ztag info' now reports on the status of the client workspace
	    lock, if called with a valid client. Also, administrators may set
	    server.locks.sync=0 to specify that the sync command should not
	    take the client workspace lock at all; at the default setting of 1,
	    the client workspace lock is taken in shared mode as before.

	#602564 (Bug #56252) **
	    'p4 verify' now accepts the '-s' flag to indicate that, in addition
	    to verifying the file's digest, the file's size should also be
	    verified. 'p4 verify -t' no longer implies the '-s' flag; specify
	    '-s' explicitly to cause 'verify -t' to verify the size.

	#601710 (Bug #59275) **
	    Files that have been moved and are open for edit at an older
	    revision may now be scheduled for a filename resolve by syncing
	    to the move/delete revision.  Accepting the new filename will
	    move the open file, similar to 'p4 move -f', allowing the edit
	    to be submitted under the new filename.

	#599833 (Bug #59476) **
	    The 'p4 clients' and 'p4 labels' commands now take the -a and -s
	    flags, which are useful when running in replicated configurations.

	#597710 (Bug #21852) **
	    The configurable server.commandlimits can be set to a non-zero
	    value to disable the use of command-line overrides for the
	    MaxResults, MaxScanRows, and MaxLockTime limits defined in the
	    group specs. Set server.commandlimits=1 to allow per-command flags
	    to specify lower, but not higher, resource limits, and set it to
	    the value 2 to quietly ignore command-line resource limits entirely.

	#591780 (Bug #61585) **
	    Various improvements have been made to the 'p4 journaldbchecksums'
	    command and to related tools for monitoring the integrity of
	    replica servers in a multi-server installation. Administrators
	    who have one or more replica servers deployed should:
	    a) ensure they have an 'integrity.csv' log defined for all servers
	    b) configure the new rpl.checksum.* configurables for the
	       appropriate level of integrity checking
	    c) routinely monitor the integrity.csv file for issues
	    d) use the new features of the 'journaldbchecksums' command to
	       investigate and resolve server integrity problems that arise.

	#589668 (Bug #41143) * **
	    When connecting to unicode-enabled servers, a default value for 
	    the client's P4CHARSET will now be chosen based on the platform 
	    and code page if P4CHARSET is not set explicitly.

	#588464 **
	    A server which has a non-empty serverid, but does not have a
	    P4NAME specified, will now use the serverid as the P4NAME. We
	    recommend that all servers should be configured with a serverid,
	    and you should use the serverid in your 'p4 configure' commands
	    to specify the configuration for that server. Specifying the
	    P4NAME or -In value when starting the server is then no longer
	    necessary.

	#586875,#677508 (Bug #67550) **
	    Trigger definitions can now request the expansion of three new
	    trigger variables: %servername% is set to the value of the
	    server's P4NAME; %serverid% is set to the value of the
	    server's server.id. In a distributed installation, %submitserverid%
	    is set to the server.id of the Commit Server or Edge Server where
	    the submit command was run.

	#569772 (Bug #62259) *
	    On Windows, 'p4 set -S <service>' will now issue an error message
	    if there is no corresponding sub-key in the Windows registry.

Bugs fixed in 2013.2

	#1239015 (Bug #80722) **
	    A file which was integrated from a streams depot to a local
	    depot, or vice versa, would be placed into the wrong location in
	    the proxy cache if it was accessed via the proxy by a command
	    such as 'p4 sync' or 'p4 print'. Note that the symptom of this
	    bug is in the proxy cache, but the fix is in the server.

	#1213529 (Bug #79647) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server.

	#1061247 (Bugs #78830,#78915) **
	    A replica with rpl.checksum.change set to 2 or higher might
	    incorrectly write its own journal file under conditions of high
	    concurrency on the master, resulting in incorrect behavior and
	    problems with replicas of this replica.

	#1058411 (Bug #78785) **
	    If a replica with rpl.checksum.change set to 2 or higher
	    encountered an internal error processing a changelist checksum
	    note, it would halt replication. Now, it logs the error but
	    resumes replication.

	#1047418 (Bug #78444) **
	    The replica-specific table db.user.rp is now journaled. This means
	    that the table data will appear in checkpoints, journals and
	    dumps. The replica pull thread automatically filters out all
	    db.user.rp records from its P4TARGET server, which is normally the
	    desired behavior, since records in this table are unique to each
	    replica's activity. However, for maintaining warm standby replicas
	    of other replicas, you can set rpl.replay.userrp=1 for the standby
	    replica to disable the filtering and replicate db.user.rp data.

	#1039831 (Bugs #73075, #74961) **
	    The revision specifier @client was not working properly for
	    clients bound to a build-server.

	#1036596 (Bug #77433) **
	    In a distributed configuration, 'p4 unshelve' no longer takes
	    the global exclusive file lock for a file of type +l which is
	    unshelved for add.

	#1035769 (Bug #78256) **
	    A replica running 2014.2 or later which is connected to a 2013.2
	    master server no longer displays 'Unknown command' when the
	    'p4 pull -lj' command is run.

	#1031176 (Bug #76013) **
	    'p4d -xx db.working db.have' could create spurious delete records
	    for db.working if a file opened for move or delete is subsequently
	    moved and submitted by another client and the opened file is
	    then synced to the head revision.

	#1030313 (Bug #77559) **
	    A build-server replica would incorrectly process the View: field
	    for labels, causing the wrong set of revisions to be specified
	    by the label.

	#1028751 (Bug #56707) **
	    The presence of a client spec with the same name as the TCP/IP
	    address of a replica machine no longer causes that replica to
	    issue the error: "Don't know how to translate paths for OS ''".

	#1028372,#1028461 (Bug #77558) **
	    A replica with lbr.replication=cache was not able to access
	    labels using the autoreload option.

	#1027668 (Bug #77595) **
	    'p4 export -f' now formats the domain type column correctly for
	    unloaded clients, unloaded labels, and unloaded task streams.

	#1010386 (Bug #77471) **
	    The 'reload -p' command, used to migrate a workspace from one
	    Edge Server to another, or between an Edge Server and the Commit
	    Server, failed in certain specialized licensing scenarios.

	#960002 (Bug #73909) **
	    When a workspace on an Edge Server was used to merge new files into
	    a task stream, the workspace's have records were not properly
	    updated at the completion of the submit.


	#870882 (Bug #72411) **
	    'p4 admin journal' and 'p4d -jj' could incorrectly rotate the
	    server's journal on a heavily loaded Linux server, resulting in
	    some journal records which were generated after the journal
	    rotation being written to the end of the already-rotated journal.

	#777730 (Bug #70950) **
	    A 'p4 revert' command which ran concurrently while a 'p4 shelve'
	    command was underway using the same workspace and changelist
	    could cause that shelve command to crash, if the shelve command
	    included certain undocumented arguments.

	#753181 (Bug #70144) **
	    A case involving integration of files with a tricky combination
	    of prior ignore and copy records is now handled better.

	#748166 (Bug #70041) **
	    Resolve will no longer give a false "already opened" error when
	    resolving an edited depot file against a moved depot file.

	#744138 (Bug #69946) **
	    Integrate will now consider all reverse integration records
	    between the source and target when trying to determine whether
	    the files share a close enough connection that scanning for
	    renamed variants is not necessary.


	#739254 (Bug #69832) **
	    Integrate will no longer attempt to remap the source to earlier
	    (later readded) variants of the target file that have more
	    direct connections with it than the current head revision.

	#736559 (Bug #69654) **
	    Resolving an open file that has been moved at the head depot
	    rev will no longer produce a false "not in client view" error
	    when a filename argument is given to the resolve command.

	#735760 (Bug #69656) **
	    When integrating moved files, the search for earlier filename
	    variants will stop if the earlier variant is not mapped in the
	    current branch/stream view provided that a target file matching
	    a later filename has already been found.

	#735695 (Bug #69698) **
	    Files that have been re-added in the source branch will no longer
	    be remapped into moved counterparts in the target branch when
	    there is no connecting history with the re-added variant.

	#732377 (Bug #45535) **
	    Certain 'p4 integrate', 'p4 interchanges', and 'p4 copy' commands
	    would incorrectly display the message "Database scan error on
	    db.integed!" if the command was terminated due to MaxResults,
	    MaxScanRows, or MaxLockTime.

Bugs fixed in 2013.2 PATCH1

	#723755 (Bugs #69429) **
	    Journal replay into the new server type 'edge-server' was
	    acquiring unnecessary locks when propagating a submit from a
	    commit server.

	#723545 (Bugs #69286, #69288) **
	    An update command submitted via a forwarding replica which is
	    interrupted while it is waiting for replication processing to
	    complete will no longer cause unnecessary system resource usage
	    in the forwarding replica.

	#721940 (Bug #69315) **
	    A failure from a change-commit trigger during a submit
	    from an edge server could cause the edge server submit to
	    leave the submitted change status as pending on the edge server.
	    This has been fixed.

	#721669 (Bug #65583) **
	    Change #589668 (charset detection) introduced a regression by
	    setting a charset before acknowledging whether the server was
	    unicode or not.  This problem could happen against a unicode
	    enabled server and if P4CHARSET was not set.  The following is
	    an example of the kind of error observed:

	    p4 add <filepath in local charset>
	    //depot/path/????txt#1 - opened for add
	    No Translation for parameter 'path' value...

	    The (charset detection) feature has been disabled until this
	    problem can be resolved.

Bugs fixed in 2013.2

	#708462 (Bug #68808) **
	    Changing the spec.hashbuckets configurable no longer causes all
	    existing autoreload labels to be empty.

	#705600 (Bug #66770) **
	    A replica which used the ClientDataFilter or RevisionDataFilter
	    options would stop replicating after the completion of a large
	    'p4 sync' command on the master server.

	#700621 (Bug #68446) **
	    'p4 unshelve -b' could previously carry resolve records from older
	    revisions on the originating branch over to the destination branch,
	    which in turn would create permanent integration history on submit.
	    These records are now discarded during the unshelve.

	#700115 (Bug #68342) **
	    'p4 unshelve' was not permitting an ignored branch to be unshelved
	    on top of a previously deleted depot file.  This has been fixed.

	#698342 (Bug #66972) **
	    'p4 interchanges' on a virtual stream no longer requires the 
	     force (-F) flag to ignore the stream's expected flow.

	#696998 (Bug #67954) **
	    'p4 archive' will now refuse to archive a revision which is used
	    as the source of a pending or shelved integration.

	#694657 (Bug #68200) **
	    A rare case where 'p4 merge' could loop indefinitely when trying
	    to track a renamed target file has been fixed.

	#693514 (Bug #67698) **
	    Integrating and resolving a moved file would sometimes suggest 
	    ignoring the move when it had been copied over by another file.  
	    This has been corrected.

	#693503 (Bug #67951) **
	    A rare case where ignore credit could be lost in the process of
	    overwriting a change via copy has been corrected.

	#693346 (Bug #68018) **
	    Change numbers recorded in the db.template index are based on
	    the previous change committed +1.  To reduce the chance of
	    missing pending changes at time a stream spec is modified, the
	    template index will now reflect the greater value between
	    'commmitted change +1' and 'change counter'.

	#691799 (Bug #67611) * **
	    Reconcile mangled paths when called from a root directory (ie.
	    '/' or 'C:\') This has been fixed.

	#869231 (Bug #66849) **
	    Police maximum date range for SSL Certificate creation so that 
	    the date does not exceed the precision of the underlying int.
	    Issue error indicating maximum number of days that can be specified.

	#688624, 690969 (Bug #67981, 68100) **
	    A file that was overwritten by a copy and then moved was previously 
	    not joined with its parent/child file when merged back.  This has 
	    been fixed.

	#688064 (Bug #67680) **
	    'p4 user' will not fail when noautocreate is set to 1 and the
	    security level of the server is > 0 due to the password not
	    being set.

	#686560 (Bug #66854) **
	    The server consistency checker 'p4d -xx' would report depot
	    inconsistencies during the 'db.integed vs db.rev' check should a
	    file within a task stream be integrated to a target within the
	    same task stream.  This has been fixed.
	
	#682378 (Bug #66785) **
	    The error message raised when a server connects to a remote
	    depot server via an SSL connection and the trust check fails
	    has changed to ServiceNoTrust which requires an administrator
	    to correct the trust problem.  The previous error messages
	    wrongly implied that the end client user could correct the
	    problem.

	#680865 (Bug #67203) **
	    P4TRUST value was not honored for Windows Service settings
	    ie. p4 set -S <service>  Fixed.  Also can be set via p4 configure.

	#671142 (Bug #53464) **
	    The network-related performance of a 'p4 sync -f', 'p4 sync -p',
	    or 'p4 print' command issued via a proxy over a long-haul network
	    is improved by performing fewer network duplex flush operations.
	    The new behavior, if problematic, may be disabled using the
	    undocumented tunable 'rpc.deliver.duplex=1'.

	#670223 (Bugs #52464,#54911,#66981) **
	    The server no longer allows a Build Farm workspace to be edited
	    on the master server. Build Farm workspace definitions should be
	    created and edited by issuing the 'p4 client' command directly
	    to the Build Farm replica, not to the master server. It is still
	    possible to delete a Build Farm workspace directly from the master
	    server, but this requires the -f flag to be passed on the
	    'p4 client -d' command by an administrator; it is preferable to
	    delete Build Farm workspaces by issuing the 'p4 client -d' command
	    directly to the Build Farm replica.

	#668938 (Bugs #34426,#65796) **
	    Accessing a file of type +X could cause the server to crash.

	#668764 (Bug #67156) **
	    A Build Farm replica now refuses the 'client -d' command if it
	    specifies a workspace not bound to that Build Farm replica.

	#666659 (Bugs #67081,#67375) **
	    A 'p4 sync' command issued via a forwarding replica which accesses
	    a file that is not in the replica's cache and for which the replica
	    fails to retrieve the file from the master server would incorrectly
	    be recorded as sync'd in the client's have list. This also caused
	    incorrect file delivery when the forwarding replica was accessed
	    via a proxy.
	    
	#661948 (Bug #66666) **
	    On Windows if the Server log file is made busy by another
	    application, an error is placed in the Windows Application
	    Event log.

	#658282 (Bug #66768) **
	    'p4 annotate -i' will no longer attempt to follow history from
	    remote depots.

	#656862 **
	    'p4 copy' could fail to propagate a change in filetype or
	    attribute when the target revision was already recorded as
	    a direct copy of the source.  This has been fixed.

	#652978 (Bug #66630) **
	    It is no longer necessary to restart a Unix server following a
	    'p4 configure unset' of a configurable value.

	#652052 (Bug #66384) **
	    A Windows replica server will now dynamically recognize when a
	    'p4 configure unset' command is replicated.
	    
	#651403 (Bug #66597) **
	    'p4 interchanges' with a revision range could produce different
	    results from the equivalent 'p4 integrate' command in some cases.
	    This has been fixed.

	#651019 (Bug #65773) **
	    If the client is terminated or the network is disrupted during
	    the execution of a 'p4 sync' command, the server now notices the
	    disruption more quickly and cleans up its own state (including
	    the client workspace lock) more rapidly, thus avoiding situations
	    in which the client workspace lock remained held by a 'p4 sync'
	    that was no longer actively connected to its client.

	#649135 (Bug #66256) **
	    Labels using the 'autoreload' option were being incorrectly updated
	    by a 'labelsync' command which specified filespec argument(s) but
	    did not specify the -a or -d flags. Files present in the label
	    which did not match the filespec argument were lost from the label.

	#648350 (Bug #66349) **
	    Certain server-to-server network messages (e.g., 'rmt-Journal')
	    specify the workspace name as a string of length zero. The server
	    log, monitor table, audit log, and structured server logs will now
	    log these network messages with a workspace name of: "unknown".

	#648013 (Bug #66251) **
	    'p4 diff #head' will now correctly pair up files that are open
	    for move.

	#644053 (Bug #66309) **
	    'p4 unload' will now refuse to unload a client which has one or
	    more files of type +l opened. Such files must be explicitly
	    reverted prior to unloading the client.

	#643157 (Bug #63668) **
	    'p4 integrate' now has more sophisticated logic in place to select
	    a target from among multiple renamed variants of a file that all 
	    share common history with the source.

	#641784 (Bug #66176) **
	    When 'p4 verify -t' on a replica server reported a BAD! file and
	    scheduled the file to be re-transferred from the master server,
	    the re-transfer request was quietly ignored by the 'pull -u' thread.

	#638593 (Bug #66011) **
	    'p4 shelve' will no longer fail with a 'missing from rev table'
	    error when shelving a file that is open for branch and has a
	    scheduled resolve from a remote depot.

	#638364 (Bug #66081) **
	    Replica servers now treat 'logger -c N -t X' as an update command,
	    instead of executing it locally on the replica server.

	#635226 (Bug #65955) **
	    Replica servers now treat 'obliterate' as a read-only command if
	    it does not specify the '-y' flag, thus executing the read-only
	    obliterate command on the replica.

	#634123 (Bug #65912) **
	    'p4 integrate' will now recognize when a previously deleted change
	    has been explicitly reinstated in the source, and permit it to
	    override a deletion in the target when that is the case.
										
	#630677 (Bug #65579) **
	    'p4 submit -e' is now supported for use with task streams.

	#621164 (Bugs #65121, #65124) **
	    Fixed a memory leak in 'p4 attribute' in replica servers.

	#619878 (Bug #64650) **
	    The server no longer maintains the 'last access time' for
	    service users.

	#617921 (Bug #64944) **
	    Trying to connect a replica to a server which has journaling
	    disabled now results in an error message, not a server crash.

	#616323 (Bug #61797) **
	    'p4 diff2 -q' would sometimes not give the 'no differing files'
	    message when all files were identical.  Fixed.

	#614102 (Bug #64703) **
	    Partial information about an unloaded task stream can now be
	    displayed using the command 'p4 -ztag stream -o <task-stream>'.

	#614086 (Bug #64744) **
	    On a replica server, 'p4 verify -t' now allows the '-z' option.

	#613774 (Bug #64781) **
	    The server now refuses to allow a client's ServerID field to be
	    set to a non-existent server identifier.

	#608529 (Bug #60612) **
	    'p4 fstat -mN -Ru' now correctly limits the results based on
	    the number of unresolved files, not the number of open files.

	#607046 (Bug #64413) **
	    'p4 property' now detects out-of-range values for the -s flag.

	#605852 (Bug #64354) **
	    The replica server's journal pull thread was keeping the rdb.lbr
	    file open even when it wasn't actively using it.

	#603339 (Bug #64177) **
	    'p4 fstat' was omitting the otherOpen tags for a deleted revision.

	#598622 (Bug #63963) **
	    'p4 resolve -at' of a file opened for edit will no longer produce
	    'corrupted during transfer' errors when keyword expansion differs
	    between the depot and client files.

	#598401 (Bug #63986) **
	    When an autoreload label is deleted, its server.locks lock file
	    is now deleted as well.

	#598303 (Bug #63987) **
	    A memory leak in replica on-demand file transfer is fixed.

	#596612 (Bug #63873) **
	    'p4d -jd /dev/null' was issuing a confusing message about being
	    unable to write to /dev/null.md5.

	#591150 (Bug #63488) **
	    It is no longer possible to submit a move/add revision without
	    a corresponding 'moved from' integration record.

	#587922 (Bugs #52464, #56428) **
	    When a client workspace is created on a Build Farm replica, the
	    client name is also now created on the central server, resolving a
	    race condition in which a client by that same name might be
	    simultaneously created on another Build Farm server, or on the
	    central server itself.

	#587664 (Bug #60715) **
	    A replica configuration which accidentally specifies multiple
	    metadata pull threads no longer causes multiple threads to run.
	    The extra metadata pull threads now block on a lock and are idle.

	#585006 (Bug #62994) **
	    The 'submit -e' command now deletes the shelf database records
	    using a single database transaction.

	#577771 (Bug #62637) **
	    The 'p4 merge' command was not correctly checking that move
	    operations were propagated atomically (per change 465399). This
	    has been fixed.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r13.1/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Major new functionality in 2013.1

	#555450 (Bug #59844) **
	    This release provides support for lightweight short-lived branches
	    when using Perforce streams. This new type of branch is utilized
	    by creating a stream of type 'task'.  This special type of stream
	    behaves similarly to a 'development' stream except that branched
	    data is not stored in the regular repository tables.  Submitting
	    revisions that are not simple branches will promote file data to
	    regular (visible) database tables, otherwise most meta-data for
	    the 'task' stream will remain private.  Task streams come with
	    some caveats, they cannot be re-parented, they cannot have child
	    streams and private data (un-promoted) is not visible except to
	    clients of the task.  When a 'task' stream is completed it should
	    be either deleted or unloaded,  this keeps task meta-data to a
	    minimum and reduces checkpoint time.

	#521779 (Bug #11379) * ** ***
	    IPv6 network connections are now fully supported (in addition
	    to the existing IPv4 support). An IPv4 or an IPv6 address may
	    be used wherever an address literal is allowed, and hostnames
	    may now resolve to an IPv6 address.  Servers can now listen
	    on either an IPv4 address or on an IPv6 address, and by
	    listening on the IPv6 wildcard address ([::]) they can accept
	    both IPv6 and IPv4 connections (if the host OS supports it).
	    P4PORT strings can require either IPv4 or IPv6, or allow
	    both (in which case they can specify a preference). See
	    'p4 help networkaddress' for additional details on syntax.

	    In particular, IPv6 addresses may be used in the host field
	    of the protects table. IPv4 addresses in the host field will
	    also apply to the corresponding IPv4-mapped IPv6 address, and
	    vice-versa.

	    For backwards compatibility, IPv6 is disabled unless explicitly
	    requested or allowed, via either P4PORT or the net.rfc3484
	    tunable. When IPv6 is allowed, addresses that are reported
	    (in log files, messages, etc) will be IPv6 addresses for IPv6
	    connections.  Customer scripts that parse such strings should
	    be enhanced to support IPv6 address strings.

	#539809 (Bug #53058) **
	    Shelved changes containing files that do not require resolve
	    may be submitted directly without unshelving first via
	    'p4 submit -e <shelvedChange#>'. See 'p4 help submit' for
	    details and restrictions.

	#538913 (Bug #36686) **
	    Shelved changes may now be unshelved into different branches
	    or related streams via 'p4 unshelve -b' and 'p4 unshelve -S'.  
	    See 'p4 help unshelve'.

Minor new functionality in 2013.1

	#573464 (Bug #62517) **
	    At times the stream view generator is changed causing different
	    client or branch views to be generated.  The existing method to
	    force a new client view to be generated is by editing the stream
	    view, or parent fields.  Now 'p4d -xf 57689' can be used to cause 
	    all existing stream-client views to be marked stale, forcing new
	    client views to be generated on next stream-client usage.

	#571383 (Bug #62343) **
	    'p4 unlock -s <shelvedChange>' will unlock files left locked
	    by an aborted 'p4 submit -e' command.

	#557509 (Bug #61754) **
	    The '-T' argument to 'p4 export' and 'p4 pull' now allows the
	    table name list to be separated by either commas or spaces.

	#555572 (Bug #61641) **
	    'p4 counters' and 'p4 keys' now support the '-m max' option
	    to limit the output to the first 'max' counters/keys.

	#549890 (Bug #15834) **
	    A trigger may now specify the variables %peerip% and/or
	    %peerhost% when it needs to distinguish between the ip/host
	    that originated the command and the ip/host of the proxy, broker,
	    or replica which conveyed that command to the server.

	#549743 (Bug #51831) **
	    'p4 pull -l -j' now includes information about the replica's
	    current time and time zone.

	#549223 (Bug #53334) ** ***
	    Added an additional field "SV" to the credentials config
	    file that allows the user to overwrite the "Starting Valid" 
	    date for the certificate.  This value is interpreted as an 
	    offset of days from the default value of "now" and it can 
	    be positive or negative. The documentation for this new 
	    field is as follows:

	    SV: number of days from now for starting date of validity
	    Note that value can be positive or negative. Also note that
	    the units value DOES NOT pertain to this field, it is always
	    in "days".
	    (default: 0, e.g. starting validity is now)
	    SV =

	#549167 (Bugs #60033,#60461) **
	    A delay has been added when failing to login after a configurable
	    number of attempts.  The delay increases up to a maximum of 10
	    seconds (controlled by configurable dm.user.loginattempts), the
	    default attempts maximum is 3.

	#549153 (Bug #53542) ** ***
	    Files in P4SSLDIR can now have user read-only permissions. Prior 
	    to this release, files had to be user read-write permission. In 
	    addition the P4SSLDIR can now be user read-execute permission.

	#546277 (Bug #61243) **
	    'p4 change -U <newuser>' changes the owner of an empty pending
	    change.

	#542934 **
	    'p4 copy' will now produce a "no such file(s)" error when the
	    source path is completely empty, rather than opening all target
	    files for delete.

	#529441 (Bug #59601) **
	    'p4 opened -a file ...' can now be used with a new flag '-s' to 
	    improve performance with large repositories that have many clients.
	    Using '-s' (short) output reduces the information returned but
	    enables quicker processing.

	#540894 (Bug #41825) **
	    A replica server can now filter revision data and/or active client
	    data when journal records are retrieved from the target server.
	    For more information, see 'p4 help server' and 'p4 help pull'.

	#538414 (Bug #17818) **
	    When 'security' is set to a non-zero value, setting the new
	    configurable 'dm.password.minlength' (default 8) will require 
	    that a password has at least that many characters.

	#536043 (Bug #55700) **
	    A replica server may specify 'lbr.replication=ondemand' to
	    indicate that file content transfers should not be scheduled.

	#535812 (Bug #45046) **
	    The replica server now supports the 'p4 pull -d' command to
	    cancel an unwanted file content transfer.

	#530488 (Bug #44943) **
	    The stream spec now allows a 'group' as the stream owner instead
	    of a user.  When a stream is owned by a group, any user within
	    that group or subgroup can update a locked stream or submit to
	    the stream when the 'ownersubmit' option is set.

	#527471 (Bug #53537) **
	    Invocations of 'p4d -Gc' and 'p4d -Gf' are now logged as event
	    records in structured server logs.

	#527364 **
	    Server performance tracking now includes information about
	    triggers which take an unexpectedly long time to execute.
	   
	#519545 (Bugs #33242,#49675) **
	    Setting the configurable 'server.maxcommands' to a non-zero value
	    will cause the server to refuse to accept more than that many
	    simultaneous command requests. We encourage you to set
	    'server.maxcommands' to a value which is low enough to detect a
	    runaway script or denial of service attack before your server
	    hardware resources (swap file, process/network limits, etc.) are
	    exhausted, yet high enough to maintain a substantial cushion
	    between your server's typical average number of connections and
	    the max value, in order to accommodate normal bursts of activity.
	    If P4LOG is defined, the server log will contain lines of the form
	    'Server is now using N active threads'.
	    which will help you assess your current level of activity; consider
	    setting 'server.maxcommands' to a value which is larger than your
	    current normal activity level, but small enough to protect the
	    server from extreme request loads. Note: on AIX platforms, the
	    server.maxcommands feature requires that monitoring be enabled.

	#519339 (Bug #59013) **
	    Configuring a replica of a replica is now possible. Note that this
	    is an advanced scenario and you should first become comfortable
	    with simple replication scenarios. Certain configurations are not
	    useful (e.g., configuring a forwarding replica of a read-only
	    replica is pointless); please contact Perforce technical support
	    for guidance if you are considering a multi-level replica
	    installation.

	#508420 (Bug #59515) **
	    The new command 'p4 property' can be used by administrators to
	    view and update property definitions stored on the server. The
	    server does not use property definitions itself; it provides this
	    capability for client software that finds it useful.

	#505844 (Bug #61399) **
	    'p4 sync' now accepts a '-N' flag to display a summary of the
	    estimated size of the sync command, without actually executing it.
	    In addition, for servers with structured server logging enabled,
	    'p4 sync' commands now log size estimation information in new
	    log record type 14.

	#503533,503656 (Bugs #1231, #7727) ** *
	    The p4 command now supports a global '-q' flag. When set, this flag
	    suppresses all informational messages; only warnings and errors
	    are displayed. A new flag '-q' has been added to 'p4 integrate',
	    'p4 copy', and 'p4 merge'; when set, it suppresses normal output
	    about the list of files being integrated, copied, or merged.

	#503080 (Bugs #1344, #54775) **
	    The new configurable 'run.users.authorize' can be set to 1 to
	    cause the server to require authentication and authorization
	    for the 'p4 users' command.

Bugs fixed in 2013.1

	#1213529 (Bug #79647) **
	    p4d -jr would mis-handle the revStatus field if replaying db.rev
	    journal records written by a 2005.2 or older server.


	#749425 (Bug #69604) **
	    'p4 istat' in a merge direction did not indicate all outstanding
	    changes reported by 'p4 merge'.  Regardless if the the content in
	    the target stream was correct, 'p4 istat' did not report identical
	    change information reported by 'p4 merge'.

	#723545 (Bugs #69286, #69288) **
	    An update command submitted via a forwarding replica which is
	    interrupted while it is waiting for replication processing to
	    complete will no longer cause unnecessary system resource usage
	    in the forwarding replica.


	#708462 (Bug #68808) **
	    Changing the spec.hashbuckets configurable no longer causes all
	    existing autoreload labels to be empty.

	#705600 (Bug #66770) **
	    A replica which used the ClientDataFilter or RevisionDataFilter
	    options would stop replicating after the completion of a large
	    'p4 sync' command on the master server.

	#696998 (Bug #67954) **
	    'p4 archive' will now refuse to archive a revision which is used
	    as the source of a pending or shelved integration.

Bugs fixed in 2013.1 PATCH3

	#677117 (Bug #67554) **
	    After upgrading a user could experience a 10 second delay logging 
	    in for the first time.

	#675716 (Bug #66603) **
	    On Server shutdown, client commands which do not terminate
	    in time will no longer cause a Windows Service stop error.

	#673894 (Bug #67259, #67285) **
	    Old stream path entries recorded in db.template are not always 
	    deleted from the stream when the stream is saved.  This regression
	    was caused by change #655696 and has been fixed.  This change
	    also uses the last committed change number, rather than the
	    current change number for template indexing.

	#672185 (Bug #67318) **
	    Using 'p4 reviews' with many file arguments (>1000) can lock
	    out the db.user and db.review tables for long periods.
	
	#664350 (Bug #66853) **    
	    The server consistency checker 'p4d -xx' would report missing
	    depot entries during the 'db.rev vs db.have' check should an
	    unpromoted task stream be populated and sync'd to a client.  If 
	    one or more of the files in that sync'd client also be open for 
	    edit, there would be errors reported during the check of tables
	    'db.working vs db.rev'.  This has been fixed.
	
	#659745 (Bug #66721) **
	    'p4 copy' could fail to propagate a change in filetype or
	    attribute when the target revision was already recorded as
	    a direct copy of the source.  This has been fixed.

Bugs fixed in 2013.1 PATCH2 

	#655696 (Bug #66132) **
	    When switching a stream-client between versioned (ie.
	    StreamAtChange) and default, the new client was not always
	    referencing the whole map.  This was cause of 'sync' and 
	    'have' commands with no parameters to not always reflect the 
	    correct haveMap entries.  This has been fixed.

	#655694 (Bug #66266) **
	    Change numbers recorded in the db.template stream table
	    reflect the previous change submitted, rather than the next
	    change to be submitted.  This has been deemed to reflect 
	    incorrect results when using the StreamAtChange field of a
	    stream client.  This fix requires an additional administrative
	    run of a bugfix to correct existing rows.

	    With the system quiet, and this new P4D in place, run the
	    command 'p4d -xf 66266', which will update all previously 
	    existing records in the db.template with change-counter + 1.  
	    This bugfix should be run only one time.

	    When the installation is brought back up, subsequent stream
	    specification modifications will correctly store the new
	    change-counter + 1 to the db.template.

	#653833 (Bug #66666) **
	    On Windows if the Server log file is made busy by another
	    application, an error is placed in the Windows Application
	    Event log.

	#651019 (Bug #65773) **
	    If the client is terminated or the network is disrupted during
	    the execution of a 'p4 sync' command, the server now notices the
	    disruption more quickly and cleans up its own state (including
	    the client workspace lock) more rapidly, thus avoiding situations
	    in which the client workspace lock remained held by a 'p4 sync'
	    that was no longer actively connected to its client.

	#647594 (Bug #65830) **
	    Its possible under certain race conditions or sequence of
	    commands to circumvent the (+l) exclusive locked file type.

	#630820 (Bug #65680) **
	    Integrations into task streams will now correctly handle files
	    that have been moved in the parent stream.

	#630442 (Bugs #65539) * **
	    The diff option '-dl' (ignore line endings) will correctly
	    match the last line of a file with no line ending.

Bugs fixed in 2013.1 PATCH1

	#628176 (Bugs #65599, #65611, #65612) **
	    Using the 'revertunchanged' flag when submitting to a task
	    stream could result in the error:

	    Operation 'user-submit' failed.
	    //filepath/file is missing from the rev table!

	    Further problems may also happen to files that were partially
	    submitted when this error occurs.  To clear the error this
	    task stream should be deleted.

	#625965 (Bug #60612) **
	    'p4 fstat -mN -Ru' now correctly limits the results based on
	    the number of unresolved files, not the number of open files.

	#625432 (Bug #65155) **
	    In some cases unpromoted task stream files were not being seen
	    by certain commands.  This problem could also manifest itself 
	    by causing an unnecessary sync replace operation when switching
	    between stream clients.  The commands affected are sync, diff,
	    edit, reconcile, fstat, files, filelog, annotate and delete.

	#624649 (Bug #65272) **
	    'p4 copy -b branch @label' did not work correctly if the label did
	    not include the target files.  This has been fixed.

Bugs fixed in 2013.1 (GA)

	#606657 (Bug #60500) *
	    'p4 reconcile -a' generated translation errors with clients using
	    a non-utf8 P4CHARSET setting against a unicode server. This has
	    been fixed.

	#603329 (Bug #64013) **
	    'p4 revert' of unmatched move/delete files could in rare cases
	    produce librarian errors or a crash.  This has been fixed.

	#598303 (Bug #63987) **
	    A memory leak in replica on-demand file transfer is fixed.

	#598155 (Bug #63967) **
	    Updating the label spec for an autoreload label was incorrectly
	    clearing the existing label contents.

	#597848 (Bug #63333) **
	    On an outer server configured to use another server as its
	    P4AUTH server, if a command requiring remote authentication is
	    issued with a client of a Stream, the P4AUTH server would fail
	    to authenticate with an incorrect error message.

	#596664 (Bug #63713) ** ***
	    Broker and proxy fail client authentication when net.mimcheck=5
	    and IPv6 literal addresses are used.

	#596288 (Bug #63533) **
	    'p4 reconcile -a' could generate 'Database get' errors trying
	    to add files that are already opened when the client uses
	    overlay mappings, or has changed the client map without syncing.
	    This has been fixed.

	#595808 (Bug #63812) **
	    On a unicode-enabled server configured to use another unicode
	    server as its P4AUTH server, 'p4 review' was failing.

	#590013 (Bug #62918) **
	    'p4 annotate -iI' will now produce a usage error rather than 
	    silently ignoring the '-i'.

	#589943 (Bug #63121, #63191) **
	    'p4 integrate' will no longer consider contiguous ranges of 
	    directly credited source revisions for integration.  Previously 
	    it was possible for revisions that were integrated with "-f" to 
	    be re-integrated due to the resulting history not clearly 
	    indicating which changes were applied by the merge.

	#588844 (Bug #63236) **
	    'p4 integrate' of a file that has been repeatedly deleted and
	    re-added will no longer produce a conflict when the file has been
	    deleted in the target branch.

	#584476 (Bug #62805) **
	    'p4 submit' will fail with an appropriate error if the change
	    being submitted has shelved files due to a concurrent
	    'p4 shelve' command.

	#583869 (Bug #62823) **
	    Using a client or label as a template now updates its access time.

	#583451 (Bug #62790) **
	    'p4 interchanges' will no longer report changelists associated with
	    revisions that have been made irrelevant by a 'copy' operation.

	#582893 (Bug #62837) **
	    Edits made prior to a user-specified integration range are now
	    considered to be ignored for purposes of deciding how important
	    it is to include them in the merge base versus already-integrated
	    edits.

	#582216 (Bug #62819) **
	    Previous edits made to deleted files that have been ignored are now 
	    considered ignored by future integrations.

	#581888 (Bug #62138) **
	    Files with sizes greater than 2^31 bytes had their file size
	    incorrectly displayed by 'p4 pull -l' and 'p4 pull -l -s'.

	#581498 (Bug #62787) **
	    'p4 integrate' will now schedule move resolves correctly for files
	    that were previously opened for integrate.

	#581376 (Bug #62579) **
	    'p4 reconcile -a' and 'p4 status' would try to open or report
	    a file already opened for add if the file had been deleted
	    at the head revision. This has been fixed.

	#580235 (Bug #62734) **
	    A corrupted RCS archive which was missing the deltatext for the
	    head revision could cause the server to crash.

	#580188 (Bug #42670) **
	    Running concurrent 'p4 shelve' commands to both update and
	    delete the same shelved change could cause unexpected loss
	    of shelved data. This has been fixed.
 
	#580136 (Bugs #62686,#62922) *
	    Fixed 'p4 delete symbolic-link-to-directory', which was broken
	    by change 492002.

	#579718 (Bug #62604) **
	    The command 'p4 diff @=<shelved changelist>' would return incorrect
	    results for branched files.

	#579138 (Bug #62606) **
	    Fixed 'p4d -jd' crash on a read-only database due to change 508345.

	#575512 (Bug #62061) **
	    Change #397964 introduced a regression allowing streams of 
	    type 'mainline' be saved with another stream as Parent.  
	    This has been fixed.

	#569569 (Bug #62171) **
	    'p4 -u <newuser> user' will now fail to create a new user if
	    there is an error in the user spec when the 'noautocreate'
	    configurable is set. Previously the new user would be created
	    anyway.

	#569270 (Bug #57689) **
	    Stream view generation has used an algorithm that has placed
	    significance in a single dot in view mappings.  The result is
	    inconsistent client or branch views, based on the complexity
	    and lineage of the stream.  This algorithm, by default, will
	    no longer place such emphasis on single dots in view mappings.  

	#569052 (Bug #57370) **
	    Leading wild-cards of Stream path definitions are not always 
	    flagged as errors when the stream is saved.  Bug fix #484326
	    was not stringent enough for certain surreptitious mappings, 
	    which this change corrects.

	#568019 (Bug #62081) **
	    'p4 integrate' could report ignored revisions as still requiring
	    integration when ignores had been combined with a copy into the
	    same revision.  Fixed.

	#566564 (Bug #57798) **
	    Stream views have been reordering Remapped paths causing certain
	    views to be generated incorrectly.  This has been corrected but
	    for the new correct views to be generated, the streams will need 
	    to be updated and saved.

	#561180 (Bug #52246) **
	    'p4 unshelve' to open a file for add will schedule a baseless
	    merge and open the file for edit if the file already exists
	    in the depot.

	#559674 (Bug #61920) **
	    Two or more submits running concurrently could lock-step each 
	    other in a way that would delay the call to get the wallclock
	    time for the submit,  this could result in changelist/time
	    ordering anomaly.

	#558151 (Bug #61809) **
	    Specifying an unloaded client or label as a template using the -t
	    flag to 'p4 client' or 'p4 label' now issues an error message.

	#555164 (Bug #61646) **
	    'p4 verify -q //pattern...' now prints an appropriate message if
	    there are no such files matching the pattern.

	#554167 (Bug #61573) **
	    'p4 submit -c' could succeed even if the change had shelved
	    files if the files in the change had been previously locked.
	    This has been fixed so that the submit will fail as expected.

	#553462 (Bug #51589) **
	    shelve-delete triggers would not fire unless there were files
	    opened at that change in a workspace. This has been fixed.

	#553344 (Bug #58397) **
	    'p4 sync -q' was failing to report non-existent files.

	#549497 (Bug #53669) **
	    A  stream depot can be deleted while stream specifications
	    still point to the depot.  The deletion of the depot now checks
	    for streams first.

	#548995 (Bugs #57794,#41323,#42956) **
	    A workspace with a name which contains a backslash (\) character
	    no longer creates an invalid spec depot entry on a Windows server.

	#548246 (Bug #61303) **
	    The message 'Forwarder set trusted client address' no longer
	    appears in P4LOG unless the server trace level is set to 4 or more.

	#547623 (Bug #61235) *
	    'p4 reconcile' no longer crashes on Windows8 X64.

	#547586 (Bug #61280) **
	    Password expiration problems on a replica server which specifies 
	    lbr.replication=none are resolved.

	#545955 (Bug #59572) **
	    Server restart command on Windows now allows client commands
	    to stop before initiating the restart operation.

	#545904,#569710 (Bugs #22844,#60304) **
	    The server now refuses attempts to create a user name with an
	    embedded NUL byte inside the name.

	#542396 (Bug #58064) **
	    Audit records written to structured server logs for file contents
	    transfered from server-to-server for remote depots and replicas
	    (f_action="import") now contain accurate revision identifiers.

	#540594 (Bugs #53165,#60056) ** ***
	    A Windows virus scanner will no longer block access to the
	    logfile and cause multiple concurrent threads to hang.

	#539320 (Bug #49295) **
	    Restricted changelist descriptions will no longer be visible if 
	    all the files associated with that change have been obliterated.

	#538652 (Bug #60705) **
	    'p4 unload' command can report misleading success message even
	    when the command fails.  This has been fixed.

	#535454 (Bug #60483) **
	    The 'p4 admin resetpassword' command may not be issued against
	    a replica server.

	#532397 (Bug #58303) **
	    'p4 describe' no longer issues the fatal error message:
	    'Change NNNNN description missing!' if a simultaneous 'p4 change -d'
	    command deletes the change while it is being described.

	#532068 (Bug #58474) **
	    Some commands which reacquire locks e.g. 'p4 changes -l' were
	    not cacheing effectively.  Some disk read I/O's were also
	    missing from track information.  Fixed.

	#531369 (Bug #58857) **
	    Interrupting a checkpoint 'p4d -jc' or journal rotation 'p4d -jr'
	    could leave the counters table in a corrupt state.  Fixed.
	    
	#528848 (Bug #48725) **
	    'p4 diskspace' now includes spec depots, archive depots, and unload
	    depots in its report.

	#528378 (Bug #49612) **
	    The '-s' flag to 'p4d' is only valid when '-jr' or '-jrc' is
	    also specified.

	#528207 (Bugs #48719,#57850) **
	    A change-content trigger that queried the server for information
	    about a file moved by 'p4 move' could get incorrect results.

	#527665 (Bug #53520) **
	    'p4 logschema' now includes a human-readable name for the
	    log record type.

	#527589 (Bug #52729) **
	    'p4 logappend' now issues a warning if no logs have been configured
	    to record user log events.

	#503100,526227 (Bugs #59284,#59285) **
	    The 'p4 submit' command can now detect certain specific types of
	    damage to the db.revhx index, and will prevent further damage.

	#521622 (Bug #55320) * ** ***
	    The server and proxy no longer support the Zeroconf server
	    registration protocol. The P4ZEROCONF environment variable is no
	    longer implemented, and the 'p4 browse' command has been removed.

	#520723 (Bugs #21350,#36126) **
	    The 'p4d -jr' command now checks to see if a checkpoint is being
	    replayed into an existing database directory by mistake. To bypass
	    the check, and allow replaying a checkpoint over an existing
	    database, specify 'p4d -jrF <checkpoint-file>'.

	#520399 (Bug #59310) **
	    When the same event is logged to multiple structured log files, the
	    log record will now have the same high precision timestamp in each
	    log file.

	#515167 (Bugs #59192,#51548) **
	    A memory leak in the client workspace lock feature is fixed.

	#514839 (Bug #58872) **
	    The 'p4 client -o' and 'p4 label -o' commands will now display a
	    placeholder line in the View: field for a client or label which
	    has been unloaded with the 'p4 unload' command.

	#514334 (Bug #59197) **
	    A 'p4 diff2' command issued against a replica server might have
	    reported librarian errors if the files were of type ktext.

	#514181 (Bug #59204) ** ***
	    Low-level file locking errors on Windows are now reported.

	#513549 (Bug #58934) **
	    A 'p4 verify' command which is run against a server which has a
	    spec depot defined and which has millions of non-mappable damaged
	    revision entries will no longer crash the server.

	#513373 (Bug #59131) **
	    A shelve-commit trigger which updates the same client that is used
	    to submit the shelf will no longer deadlock on the client lock.

	#513214 (Bug #59085) **
	    'p4 protects //pattern/...' will no longer crash if the protections
	    table contains a single line with hundreds of wildcards.

	#512707 (Bug #58967) **
	    'p4 dbschema' now includes the db.monitor table in its output.

	#504133 (Bug #7908) **
	    'p4 verify' now reports bad and missing revisions as error
	    messages, not info messages; the command-line exit code is also
	    now set to a failed value if any such errors are reported.

	#503857 (Bug #58257) *
	    A user whose name contained a colon was unable to login.

	#491284 (Bug #57110) * ** ***
	    There are 4 new configurables to control network timeout of idle
	    connections; all are initially set to 0:
	        net.keepalive.disable
	          - if non-zero, disable sending TCP keepalive packets
	        net.keepalive.idle
	          - idle time (in seconds) before starting to send keepalives
	        net.keepalive.interval
	          - interval (in seconds) between sending keepalive packets
	        net.keepalive.count
	          - Number of unacknowledged keepalives before failure
	    If set, these configurables override the system-specified default
	    values.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r12.2/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Important update for integration engines 2012.2 **

	    Two integration engines are supported in the 2012.2 release.

	    The new integration engine (v3) was introduced in the 2011.1
	    release and provides improved base selection semantics and 
	    expanded resolve capability.  The default integration engine
	    is still the (v2) engine which has been around since its first
	    release in 2006.

	    For new installations of Perforce, it is advisable to select 
	    the new integration engine as the default.  Admins can set the
	    global configuration parameter like so:

	    'p4 configure set dm.integ.engine=3'

	    The simplified integrate command 'merge' always uses the new (v3)
	    engine.  By using streams for your branching strategy, you will 
	    automatically be using the new engine.

	    We recommend that customers who upgrade should try this new engine
	    by using the 'merge' command instead of 'integrate'.  You can also
	    use 'p4 integrate -3' flag to specify the new engine.  After you 
	    have tested the new engine's behavior as it relates to your branch
	    history, you can set the dm.integ.engine configurable to '3' to 
	    make the change apply to all users at your site. 

	    We anticipate that the (v3) engine will likely become the default
	    in a 2013 release. 

	    For more details on enabling the new engine, and further information
	    see the following link: 

	    http://kb.perforce.com/article/1631/generation-3-integration-engine

Major new functionality in 2012.2

	#408756 **
	    A new depot of type 'unload' can be configured so that old or
	    infrequently used clients and labels can now be unloaded.
	    Unloading removes database records from the live database tables 
	    and writes them to files in the unload depot. Routine use of the 
	    new 'p4 unload' and 'p4 reload' commands frees up space in the 
	    db.have and db.label tables for active clients and labels.
	    Clients and labels can be reloaded as necessary.  A label with
	    the autoreload option set in its spec is always unloaded, and
	    does not need to be explicitly reloaded prior to use. Note that
	    unloaded labels and autoreload labels, like automatic labels, are
	    always omitted from the results of 'p4 labels <filespec>'.

Minor new functionality in 2012.2

	#485057 (Bug #43361) **
	    'p4d -xf 43361' can be used to create new db.have records from
	    existing db.working records.

	#483800 (Bug #57375, #53798) **
	    A new command 'p4 key' allows users with review permission to set, 
	    delete, and access key value pairs.  These values can be viewed
	    and searched with a complementary command 'p4 keys'. For more
	    information see 'p4 help key/keys'.

	#479199 (Bug #56618) **
	    On Windows, 'p4s -V' can be issued at the command line to view
	    the version information of the p4s executable.

	#471920 (Bug #16588, #15260) **
	    A new configurable, 'submit.unlocklocked', causes 'p4 submit'
	    to unlock files from a failed submit.

	#469562 (Bug #56270) **
	    'p4 print' now accepts a '-k' flag to suppress keyword expansion.

	#462379 (Bug #39317) **
	    New command 'p4 admin resetpassword' allows a super user to
	    force user(s) with passwords to reset their passwords
	    before issuing another command. In addition, a new configurable
	    'dm.user.resetpassword' allows forcing password resets for all
	    newly created users with passwords. See 'p4 help admin' for
	    more information.

	#460143 *
	    'p4 -I submit' displays a progress indicator as files are being
	    sent to the server during a change submit.

	#452158 **
	    'p4 fstat -Or' now displays all resolves associated with each open
	    file, along with the type of resolve (content/branch/delete/etc),
	    similar to "p4 resolved" and "p4 resolve -n".

	#451955 **
	    'p4 integrate' and 'p4 merge' now accept a -O flag that enables
	    more verbose output.  '-Ob' causes the base to be displayed, and
	    '-Or' causes each scheduled resolve to be displayed.  The old '-o'
	    flag on 'p4 integrate' continues to function as a synonym for '-Ob',
	    but is considered deprecated.

	#448526 (Bug #25974) **
	    Automatic labels can now be used as 'pure' aliases for a single
	    revision specifier (e.g. @change) by clearing (leaving blank) the 
	    view specification.  When used in this way labels will perform 
	    better and behave exactly as the revision specifier rather than 
	    computing a label on-the-fly.  See 'p4 help label' for more 
	    information.
								
	#443861 (Bug #14936) **
	    'p4d -jj' and 'p4d -jc' can now run a user supplied command
	    as part of their operation while the locks are held on the
	    database.  Example usage: 'p4d -c "snapshot /depot" -jj
	    The command is run after the journal rotate and before locks
	    are released.

	#438803 (Bugs #44867, #45119, #47718, #54043) **
	    'p4 configure set defaultChangeType=restricted' can now be used to
	    specify that new changelists should default to Type: restricted.

	#436459 (Bug #53622) **
	    'p4 list' now supports the '-M' flag, for use in forwarding replica
	    scenarios. 'p4 list' by default is executed on the replica; if the
	    '-M' flag is specified, 'p4 list' is forwarded to the master.

	#436300 (Bug #53349) **
	    Audit logs on forwarding replicas now include user and client
	    information when a 'p4 sync' command issued via the forwarding
	    replica causes file content to be delivered by the replica.

	#389844 **
	    'p4 lockstat' now accepts the flags '-c client' and '-C' to
	    specify reporting on the client workspace locks added in 2011.1.

	#384638 *** ** *
	    The net.maxwait configurable can be used to specify a hard limit
	    (in seconds) on the maximum time that a connection will wait for
	    any single network send or receive to complete. The 'p4 sync'
	    command now supports a '-r' global flag to specify that the sync
	    command should be retried if a network error occurs.

Bugs fixed in 2012.2

	#752957 (Bug #70168) **
	    A performance problem in 'p4 archive' introduced by change 696998
	    is addressed. The performance of 'p4 archive' now correctly depends
	    on the number of revisions being archived, not on the total number
	    of revisions examined by the 'p4 archive' command.

	#708462 (Bug #68808) **
	    Changing the spec.hashbuckets configurable no longer causes all
	    existing autoreload labels to be empty.

	#696998 (Bug #67954) **
	    'p4 archive' will now refuse to archive a revision which is used
	    as the source of a pending or shelved integration.

	#608133 (Bug #64478) **
	    Replica servers failed in certain specialized licensing scenarios.

	#606617 (Bug #64384) **
	    Customers with large domain tables (million+ records) can
	    experience performance problems if the data is continuously
	    scanned for domain information.  This change improves performance 
	    when querying with the name filter '-e|-E' and has support for a 
	    secondary index to allow fast access when using the '-u username'
	    option. The index is created by using 'p4d -xf index.domain.owner'.

	#603329 (Bug #64013) **
	    'p4 revert' of unmatched move/delete files could in rare cases
	    produce librarian errors or a crash.  This has been fixed.

	#603012 (Bug #62738) **
	    Concurrent 'p4 shelve -d -c <filename' could cause a server
	    crash if the 'server.locks.dir' configuration setting had been
	    disabled.

	#598303 (Bug #63987) **
	    A memory leak in replica on-demand file transfer is fixed.

	#598155 (Bug #63967) **
	    Updating the label spec for an autoreload label was incorrectly
	    clearing the existing label contents.

	#592561 (Bug #63437) **
	    Fixed license check failure on AIX 5.3, 6.1 on PPC; error was
	        Perforce server error:
	            Licensing error -- invalid server IP address.
	            socket: create: Protocol not supported

	#580136 (Bug #62686) *
	    Fixed 'p4 delete symbolic-link-to-directory', which was broken
	    by change 492002.

	#579523 (Bug #62712) **
	    Fixed a problem introduced by change #571446 where 'integrate'
	    could return inconsistent results.

	#579138 (Bug #62606) **
	    Fixed 'p4d -jd' crash on a read-only database due to change 508345.

	#576317 (Bug #62589) **
	    Fixed a server crash in 'p4 interchanges' and 'p4 merge' 
	    when files had been added, ignored, and then re-added,
	    introduced by change #571446.

	#574827 (Bug #62500) **
	    Corrected memory free pool management issue on Windows.

	#572555 (Bug #62418) **
	    Fixed case where 'p4 copy' could report nothing to do if
	    the latest source rev was a copy of an older target rev.

	#571446 (Bug #57211, 62338) **
	    'p4 merge' will now recognize when previously ignored changes
	    have been forcibly re-integrated, and propagate those changes
	    in future merges.

	#567824 (Bug #62247) **
	    Fixed a server crash involving integrate of ignored changes
	    between independently added files.

	#565785 (Bug #62127) **
	    Fixed a rare server crash involving complex combinations of
	    exclusions in protections, branch view, and client view in 
	    integrate.

	#561051 (Bug #61920) **
	    Two or more submits running concurrently could lock-step each
	    other in a way that would delay the call to get the wallclock
	    time for the submit,  this could result in changelist/time
	    ordering anomaly.

	#550724 (Bug #61278) **
	    Fixed crash and "cyclic dependency" warning when integrating
	    into a file with a resolve scheduled from its own head revision.

	#547239 (Bug #61205) **
	    Fixed a timing problem impacting forwarding replica reliability
	    on Windows servers.

	#546019 (Bug #59572) **
	    Server restart command on Windows now allows client commands
		to stop before initiating the restart operation.

	#545511 (Bugs #53165,#60056) ** ***
	    A Windows virus scanner will no longer block access to the
	    logfile and cause multiple concurrent threads to hang.

	#542667 (Bug #60854) **
	    'p4d -jr' and 'p4d -jc' were mistakenly printing error messages
	    to the log defined by P4LOG or by the -L flag, rather than to
	    stderr. That behavior is reverted, and these commands once again
	    print any error messages to stderr.

	#541593 (Bug #59534) **
	    When an unloaded client or label was deleted from the master
	    server, the replica server would fail to delete the unload file
	    from the replica's unload depot filesystem.

	#541534 (Bug #59746) **
	    A 'p4 obliterate' would be unnecessarily delayed by a 'p4 submit'
	    which was waiting for the client workspace lock held by a
	    long-running 'p4 sync' command on the same client workspace.
	    'p4 lockstat -c|-C' now also reports on the server 'meta' lock,
	    which is used to synchronize depot-wide commands such as
	    'p4 obliterate' and 'p4 retype -l'.

	#532763 (Bug #60277) **
	    Server crash caused by malicious connection. Fixed.

	#531495 (Bug #59407, #60228) **
	    'p4 resolve' should now run faster with very large numbers of
	    files.	    

	#530355 (Bug #60086) **
	    Files of type '+S' that were both copied and moved in the same
	    changelist could have incorrect digests recorded at submit,
	    requiring 'verify -v' to correct.  This has been fixed.

	#519219 (Bug #58589) **
	    Unshelved resolved ktext files that are re-shelved or
	    submitted with tamper-checking no longer report bogus
	    'tamper with after resolve' errors.

	#517852 (Bug #59338) * ** ***
	    A memory leak of NetSslTransport if SSL Handshake fails.

	#515167 (Bugs #59192,#51548) **
	    A memory leak in the client workspace lock feature is fixed.

	#511535 (Bug #59042) **
	    'p4 unshelve' would fail for files that had been shelved via
	    'p4 merge' if the files had not been resolved prior to shelving.
	    This has been fixed.

	#510327 (Bug #34560) **
	    'p4 move' will now correctly handle 'apple' type files on non-Mac
	    clients.

	#509653 (Bug #58973) **
	    Files that do not have stored digests will no longer produce
	    spurious 'tampered' errors on resolve.

	#508345 (Bug #58843) **
	    'p4d -m -jr' now processes @dl@ journal records.

	#507162 (Bug #56087) **
	    'p4 interchanges' no longer takes a shared lock on the spec 
	    database table 'db.revsx'.

	#506974 (Bug #52926) **
	    'p4 login -h' now uses the correct host when the auth-check-sso
	    trigger is defined on the server.

	#506481 (Bugs #53506, #57610) **
	    Certain low-level fatal assertion-failed messages are now captured
	    in the highest-numbered structured server log file which records
	    event log records, if such a server log has been configured.

	#504683,#506265 (Bugs #51740,#55195) **
	    When an archive file is damaged or missing, the server error
	    message now includes an additional line providing the librarian
	    file name and revision string.

	#503491 (Bugs #58614,#57495) **
	    'p4 monitor show -s R' was including IDLE threads in its display.

	#502859 (Bug #57725) **
	    A replica server might fail to transfer a file with the message:
	    "Wildcards (*, %%x, ...) not allowed in '//path/to/file', if the
	    file contained a certain pattern of embedded wildcards.

	#502560 (Bug #58554) **
	    'p4 jobs -e DateField=YYYY/MM/DD' would return a job with a date
	    value of exactly midnight on the next day.

	#496643 (Bug #58153) **
	    'p4 logschema' was missing the 'f_' prefix on log field names.

	#495402 (Bug #57694) **
	    The command 'p4 jobs -e query' is now restricted by maxScanRows,
	    previously a malformed query could cause a scan of the db.ixtext
	    table.

	#493204 (Bug #57484) **
	    When 'p4 populate' invokes a 'change-commit' trigger, it now
	    ensures that the %oldchangelist% and %changeroot% trigger
	    variables are set.

	#493031 (Bug #57467) *
	    On Windows, 'p4 set' now issues a warning if asked to set an
	    unknown variable, even if the variable name is in lower case.

	#492542 (Bug #52567) **
	    'p4 submit' with the 'revertunchanged' option will no longer
	    revert files that have been resolved.  This behavior now more
	    closely mirrors 'p4 revert -a' with respect to which files are
	    considered 'unchanged'.

	#492002 (Bug #57360) *
	    'p4 sync' will no longer issue the confusing message:
	        unlink: //path/to/file: Is a directory
	    in the case where:
	    a) there exist both a (deleted) file and a directory which have
	       the same name,
	    b) the directory is currently sync'd on the client, and
	    c) the sync command was instructed to delete the file.

	#490279 (Bug #57672) *
	    The presence of a P4CONFIG file would inadvertently turn off
	    buffered i/o for standard output.  

	#483306 (Bug #57202) **
	    A Windows server would produce a minidump if it encountered an
	    error opening the server.id file.

	#482308 (Bug #58492) **
	    When using a Build Farm replica server, the preferred usage pattern
	    is to define bound clients solely on the replica. In such a case,
	    if a client, branch, depot, label, or stream is later defined to the
	    master server with the same name as the bound client on the Build
	    Farm server, the Build Farm replica server will no longer corrupt
	    the bound client definition during replication of the conflicting
	    change from the master. Instead, the replica will issue a message,
	    halt replication, and wait for the bound client to be explicitly
	    deleted before resuming replication.

	#481402 (Bug #57038) **
	    'p4d -jd' now issues an error message if the dumpfile name is
	    a database table name, to avoid accidentally overwriting it.

	#476723 (Bug #56552) **
	    'p4 reconcile' with no arguments would fail to find files to
	    add if the server was on windows and the client was not
	    a windows client. This has been fixed.

	#473903 **
	    A forwarding replica on a case-sensitive platform will now cache
	    files submitted via that replica using case sensitive file and
	    directory names in the replica depot directory.

	#469767 (Bug #48489) **
	    'p4 print' will now display headers for deleted or otherwise
	    "empty" revisions that previously were omitted entirely.

	#467458 (Bug #29995, #44294) **
	    Attempts to open one workspace file with multiple different
	    depot file mappings will now fail with the error message
	    "can't open FILE1 (already opened as FILE2)".

	#465399 (Bug #46119, #46330, #46364, #47555, #52561, #53282, #53307, 
		     #53810, #54143, #55603, #59884) **
	    A number of bugs have been fixed in the v3 base selection engine
	    that is used by the 'p4 merge' command.  Merge base selection
	    should now be optimal in more cases, and atomicity of move
	    operations is now enforced when opening files for integrate.

	#465201 (Bug #59070) **
	    'p4 client -d' now removes the server.locks entry for the client.

	#464243 (Bug #56085) **
	    A 'move' type resolve of a file open for 'branch' will now relocate
	    the file with the original action, rather than reopening it for
	    'move/add' (similar to the 'p4 move' command).

	#463703 (Bug #56037) **
	    'p4d -s -jr' now respects a P4JOURNAL configuration set via the
	    'p4 configure' command.

	#461647 (Bug #52265) **
	    On a replica server, 'p4 admin checkpoint [-z|-Z]' now validates
	    the option flags passed on the command.

	#460619 (Bug #51837) **
	    'p4 configure show' now displays the serverid, if it has been set,
	    as well as the Name and Address from the server definition, if set.

	#459963 (Bug #55879) **
	    'p4 admin updatespecdepot' would add an extra copy of the typemap
	    spec to the spec depot each time it was run.

	#454277 **
	    An improved message is now issued when a remote depot access fails
	    because the initiating server's service user is not currently
	    logged in to the remote server.

	#453368 (Bug #55599) **
	    The 'p4 server' command now validates the 'Type' and 'Services'
	    fields more completely.

	#451742 (Bug #55560) **
	    A file that receives a content merge and is moved in the same
	    changelist will now have an "edit into" reverse integration record.

	#449001 (Bug #52481) **
	    Replica servers now reload their dynamic configuration only when
	    the persistent configuration is changed, rather than on every
	    configuration timer expiration.

	#448082 (Bug #51880) **
	    'p4 protects' will bail with an error if a user issues mutually
	    exclusive -a/-g/-u flags together in the same command.

	#447109 (Bug #38933) **
	    'p4 move -f' will no longer try to move a file open for add into
	    an existing file.

	#447020 (Bug #42838) **
	    The error message generated when trying to delete a client with
	    shelved changes now includes the change numbers that need to be
	    deleted.

	#446212 (Bug #47460) **
	    Group names longer than 128 characters no longer generate an error
	    message about "server.locks filename too long".

	#445617 (Bugs #54980, #55023) **
	    'p4 configure set' now checks server log file configuration
	    variables more thoroughly.

	#443291 (Bug #54898) **
	    'p4 populate' with a local filespec and no provided change
	    description will no longer generate a description that references
	    a top level depot path.

	#442968 (Bug #53427) **
	    Specifying an unknown logfile as the '-l' flag to 'p4 logrotate'
	    now produces a "no such logfile" message.

	#438461 (Bug #53789) **
	    When integrate schedules a move resolve of a deleted source file
	    it will now also schedule a delete resolve.  If the delete is not
	    conflicting, the move resolve will be set up to ignore, and if
	    another (non-deleted) source file maps to the same target, the
	    delete will be set up to ignore.

	#436823 (Bug #52944) **
	    The setting of the net.maxwait tunable now affects the SSL
	    handshake, so users of SSL connections should set net.maxwait to
	    a value which is large enough to accommodate the typical handshake
	    duration.

	#435664 (Bug #53671) **
	    Commands issued on a long-lived connection to a forwarding replica
	    now recognize a new depot created earlier on that connection.

	#426299 (Bugs #47645, #53006) ***
	    Premature client disconnects, such as those caused by a
	    user interrupting a command, on connections that include a broker
	    or forwarding replica, are now detected more quickly by the server.

	#396573 (Bugs #50941, #50960, #50961) **
	    Client specifications with improperly escaped special characters
	    in the client Root: or AltRoot: fields are now rejected when the
	    client spec is submitted to the server.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r12.1/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Major new functionality in 2012.1

	#383535 **
	    The new 'p4 populate' command performs the initial population
	    of a stream with files as a single-step operation (no submit
	    or client workspace is required).  Note that populate will fire
	    change-content and change-commit triggers, but not change-submit
	    or any form triggers.

	#372184,#373711,#389650 #423427 (Bugs #2493, #9875) *** ** *
	    The Perforce client/server protocol now supports encrypted
	    communication.  SSL support has been added to perforce clients
	    and server as well as the Perforce proxy and broker. In addition
	    the downloadable client API can be compiled with OpenSSL if
	    encrypted connections are required. 

	    A server, proxy or broker accepting SSL client connections 
	    must define a P4SSLDIR variable.  This directory holds the
	    server's certificate and public key files.  The files and
	    directory must only be accessible by the effective UID
	    under which the server runs.

	    Two new stand-alone command options can be run on any
	    server, proxy or broker:
	    -Gc generates credentials files in the P4SSLDIR.  It will
	    not overwrite the current contents.
	    -Gf displays the fingerprint of the Public Key contained
	    in the $P4SSLDIR/certificate.txt file.

	    P4PORT settings may now include the 'ssl:' prefix. In addition,
	    the existing but undocumented 'tcp:' prefix is now fully documented
	    and supported; it can be useful for cases where you desire to
	    explicitly indicate that the connection is cleartext.
	    The 'ssl:' prefix may be specified in P4PORT values to cause
	    the client and server to use SSL encryption of network traffic.
	    If this prefix is used, it must be used in both server and
	    and client. An SSL-enabled server will only accept connections
	    from SSL-enabled clients, and a server which does not specify the
	    ssl: prefix will not accept connections from clients that
	    do.

	    Upon first connecting to a new server using ssl the p4 client will
	    fail if the fingerprint of the server's public key has not been 
	    accepted before.  A new command "p4 trust" can be used to accept 
	    a previously unaccepted fingerprint.  

	    NOTE:  The server discovery feature 'zeroconf' which was added
	           in 2008.2 will not work with SSL.  Due to potential security
	           issues (spoofing) when configuring servers with zeroconf this
	           feature is being discontinued,  this is the last release that
	           it can be enabled.

	           The beta clients for the 2012.1 release did not have the
	           client trust check code.  Please make sure you update all
	           beta clients to ensure trust for SSL connections.

	#367753 (Bug #68, #889, #989) ** *
	    A new command 'p4 reconcile' allows users to reconcile client
	    with offline work. The command either previews or opens files
	    in a pending changelist that will bring the client up to date
	    with changes made to the workspace outside of Perforce.
	    The new command 'p4 status' is a synonym for 'p4 reconcile -n'.
	    Also for convenience, 'p4 status -A' is a synonym for
	    'p4 reconcile -ade'.

	#331092 **
	    A client of a properly-configured replica server can be specified
	    to perform server-private storage of its db.have data. This
	    separation of db.have data provides improved scalability for
	    build-farm operations.  The new 'p4 server', 'p4 servers', and
	    'p4 serverid' commands are used to specify this configuration.
	    The new 'server.id' file in the server root directory should be
	    backed up as part of routine server backups.

	#325599 (Bug #44042) **
	    A replica server which has been configured to forward commands
	    to its master server can be used in place of a traditional proxy 
	    server.  This configuration will offload work from the master 
	    server and in most cases perform better for its remote users. On
	    such a replica, the 'p4 login' and 'p4 logout' commands will
	    automatically log the user in/out of both servers (replica and 
	    master).

	#325315 (Bugs #3711, #8629, #11502, #12007, #18622, #19696, #19824,
	         #23425, #24496, #29067, #29892, #29909, #33331, #33619, #37080,
	         #37588, #37654, #38189, #41702, #42863, #43704,
	         #45906, #45915) **
	    The server can now be configured to write log files in a structured
	    format which contain more detail and are also easier to parse.
	    The new log files are also easier to administer, with support for
	    log file rotation and retention behaviors. The new commands for
	    working with these logfiles are: logparse, logrotate, logschema,
	    and logappend; the existing logstat and logtail commands are also
	    enhanced.

Minor new functionality in 2012.1

	#454883 ** (Bug #53797)
	    'p4 group' now has a new flag, '-A', that allows 'admin' level users
	    to create new groups.

	#423427 *
	    A new (client side only) command 'p4 trust' is required when
	    connecting to secure servers with the P4PORT prefix "ssl:".
	    See 'p4 trust -h' for more details.
	    
	#410530 ** (Bug #9028)
	    'p4 annotate' will now refuse to display diffs for binary files
	    unless the new '-t' flag is provided.

	#408858 ** (Bug #49801)
	    A new optional field 'StreamAtChange' in the client spec allows
	    the user to create a back-in-time stream client. 
	    See 'p4 help client' for more details.

	#397964 ** (Bug #43676)
	    New stream type 'virtual' is a stream with no physical files
	    branched to the stream.  Files are pulled from, and submitted
	    to the first, non-virtual parent stream - based on the view of
	    the virtual stream.  This can greatly reduce the number of files
	    branched when working with streams.  See 'p4 help streamintro' and
	    'p4 help stream' for details on streams and the virtual stream type.

	#398705 **
	    'p4 pull -l -j' now includes the last-modified-time of the replica
	    statefile in its output.

	#393549 ** (Bug #2165)
	    'p4 files' now supports a new flag '-e',  which limits output to
	    files that exist (i.e. have not been deleted, purged or archived).

	#391471 **
	    Obliterate has three new performance related flags '-abh'. These
	    flags have been present but undocumented since 2009.2.  
	    See 'p4 help obliterate' for more information.  

	#390676 **
	    'p4 dbverify -U' and 'p4d -xvU' perform a fast validation of
	    the database tables, checking only the table UnlockCount.

	#389341 ** (Bug #29848)
	    Using per-revision attributes is now supported. The 'p4 attribute'
	    and various 'p4 fstat' options for setting and retrieving attributes
	    has been present but undocumented since 2004.2.

        #388781, #373493 * ** ***
            The version information returned by "p4 -V" now includes
	    SSL license and version information if SSL is enabled:

	    Perforce - The Fast Software Configuration Management System. 
	    Copyright 1995-2011 Perforce Software. All rights reserved. 
	    This product includes software developed by the OpenSSL Project 
	    for use in the OpenSSL Toolkit (http://www.openssl.org/) 
	    Version of OpenSSL Libraries: OpenSSL 1.0.0e 6 Sep 2011 
	    Rev. P4/DARWIN100X86_64/2012.1.main/318424 (2011/05/19)

	#385958 (Bug #35709) * **
	    The new variable P4IGNORE names a file containing a list of
	    expressions which can be used to match certain file patterns 
	    and exclude them from the repository.  This mechanism is used 
	    by 'p4 add' and the new 'p4 reconcile' command.

	#385719 (Bug #48795) **
	    'p4 merge' will now schedule resolves for all added and deleted
	    files, similar to 'p4 integrate -Rbd'.

	#385458 (Bug #156, #14183, #17037) **
	    'p4 integrate' will now automatically schedule baseless merges
	    to be performed with an empty base file (forcing conflicts on
	    any differences).  The '-i' flag is still accepted but has been 
	    deprecated.

	#385004 (Bug #50613) *
	    'p4 add' will now choose 'text+Cx' rather than 'text+x' as the
	    default filetype for an executable text file larger than 10MB.
	    Also, 'unicode+C' will be chosen instead of 'unicode' for a
	    unicode file larger than 10MB, and 'utf16+C' rather than 'utf16'.

	#378661 **
	    'jnl.fix' files emitted by the server now include a @nx@ journal
	    header note at the start to identify the journal file.

	#374311 (Bug #41326) **
	    A new command 'p4 list' allows the user to build up a list of
	    files in-memory that can be used in subsequent commands just
	    like a label.  The list is only available during the life of
	    the connected session and therefore cannot be used across 
	    multiple calls to the perforce command line program 'p4'.

	#369970 (Bug #29164) **
	    Form-in triggers can now be passed the %formname% variable.

	#369400 * **
	    File type detection was only looking at the first 8192 bytes
	    of a file which could be adjusted on the client with the
	    filesys.binaryscan tunable.  Now, this default value is
	    65536 bytes and if this value is changed on the server,
	    it will be sent to client to allow setting a central default.

	#368694 (Bug #33723) **
	    'p4 verify' now accepts the '-X' flag to specify that files of
	    filetype +X should not be verified.

	#367359 (Bugs #3453, #31916) **
	    The 'p4 change' and 'p4 describe' commands now accept the '-O'
	    flag to specify that the changelist number argument is the original
	    number of a changelist that was renumbered on submit.

	#363423 (Bugs #32055, #41995) **
	    The '-g', '-u', and '-o' flags to 'p4 groups' are now supported.
	    The functionality has been present but undocumented since the
	    2009.2 release.

	#360990 (Bugs #33080, #25377) **
	    Providing a typemap entry that maps some or all of a spec depot's
	    revisions to filetypes 'text+CS<n>' or 'text+FS<n>' will now cause
	    the server to purge edit revisions of those spec depot files
	    appropriately.

	#359100 (Bugs #15959, #24457, #31911, #36804) **
	    If the optional SpecMap field of the depot spec for a spec depot
	    contains a mapping, only revisions that match that mapping will
	    be stored in the spec depot.

	#354289 **
	    On a replica server, 'p4 pull -l' will now include information
	    about each pending revision's change number, revision date, and
	    last-modified-time.

	#353194 (Bugs #3512, #29036) **
	    Server trigger invocation lines may now use the new variables
	    %clientprog% and %clientversion% to access the client's "prog"
	    and "version" information, respectively.

	#353068 (Bug #48562) **
	    The 'p4 obliterate' command now ignores archived files by default;
	    to instruct the command to process archived files you must pass
	    the -A flag.

	#353068 (Bug #48598) **
	    The 'p4 print' command now accepts the -A flag, to print a file
	    in an archive depot.

	#351058 **
	    The new table db.view.rp stores view mapping lines for clients
	    bound to a single server.

	#350377 (Bug #44455) **
	    If the '-e' flag to 'p4 clients', 'p4 branches', or 'p4 labels'
	    specifies a literal string with no wildcards, the server will now
	    use the index in the search and avoid scanning db.domain.

	#345318 **
	    Running 'p4 sync' with no file pattern on a client with no opened
	    files will now automatically remove un-needed havemap entries
	    from the client's view.

	#340478 **
	    'p4 dbverify' and 'p4d -xv' will now specifically report
	    problems with overflow data items, these are metadata records
	    which are too large to fit on a single database page.  Also,
	    spelling corrections to these reports and a new note that
	    some problems are only warnings.

	#340413 (Bug #47282) **
	    Replica server re-configurations which affect background pull
	    thread behaviors no longer require a server restart to take effect.

	#338798 (Bug #46363) **
	    The 'p4 verify' command on a replica server will no longer attempt
	    to transfer missing or damaged files from the master server itself.

	#336044 **
	    The 'p4 pull' command now supports the '-T' and '-F' flags. These
	    flags have the same syntax and meaning as they do for 'p4 export'.

	#329784 (Bugs #26031, #42006) **
	    The new command 'p4 dbverify' can be run by a super user or
	    operator to perform low-level verification checks on the
	    database tables. This is the same level of checking as is
	    performed by the 'p4d -xv' command, which is now documented.

	#321637 (Bug #23109) **
	    The command 'p4d -jd dump.file db.tablename' can now be used to
	    checkpoint just a single named table into the named dump file.

	#321561 (Bug #20259) **
	    'p4d -xv' and 'p4d -xr' will now set the operating system exit code
	    to a non-zero value if problems were found in one or more tables.
	    A summary message with the count of the problem tables will also
	    be printed in this case.

	#320029 (Bug #40288) **
	    'p4 groups -v -i <user>' now supports combining both '-v' and '-i'
	    flags to display both indirect group membership and group resource
	    limits in a single command.

Bugs fixed in 2012.1

	#547239 (Bug #61205) **
	    Fixed a timing problem impacting forwarding replica reliability
	    on Windows servers.

	#513635 (Bug #58700) **
	    'p4 integrate' could open files with an unset haveRev when the
	    client mapping was complex.  This has been fixed.

	#507528 (Bug #58819) **
	    'p4 interchanges' now defaults to the '-3' behavior when run with
	    a stream argument, in order to more closely follow 'p4 integrate'.

	#505914 (Bug #58769) **
	    'p4 shelve' no longer fails with a 'missing from the rev table'
	    error when shelving files that have been moved by 'p4 resolve'.

	#504825 (Bug #58325) **
	    'p4 counter -i monitor' no longer fails with a locking error on
	    the db.config table.

	#502049 (Bugs #57862, #58199) **
	    'p4 sync -f' could flag a file as 'corrupted during transfer' if
	    the immediately preceding file was deleted from the client due to
	    being not present in the label being sync'd, and if those two
	    files had differing file types (e.g., one was binary, one ktext).

	#499273 (Bug #58256) **
	    'p4 filelog -i' will now correctly show branch history when a
	    revision range is specified for the initial file.

	#368980,#498941 (Bugs #28397, #28753, #29835, #43984, #57961) **
	    'p4 login' would issue tickets without client address restrictions 
	    if that command was submitted through a proxy, or a broker or if 
	    P4AUTH was in use, this has been fixed.
	    'p4 info' reported the proxy or broker address as the client 
	    address if one of those were in use.  Now, 'p4 info' reports both 
	    a PeerAddress and a ClientAddress.  The ClientAddress omits the 
	    port.  The old 'p4 info' format is avaliable for api <= 70.

	#497791 (Bug #58255) **
	    "p4 merge" will now correctly recognize moved source files when 
	    they have been deleted and re-added after being moved.

	#496304 (Bug #58193) **
	    "p4 copy" and "p4 integrate -t" will now copy all attributes
	    (including those not set to be propagating) when opening files for
	    "branch".

	#486432 (Bug #56773) **
	    On Server shutdown client commands are now prevented from
	    running during the final stages of process termination.

	#486047 (Bugs #55422, #33649) **
	    Non fatal depot repository librarian errors are now reported
	    in the Server logfile.

	#486009 (Bug #57488) **
	    It was possible to output the generated branch view of a -S stream
	    with a -P parent when the stream and parent were not of the same
	    depot lineage.  This is now disallowed.

	#484326 (Bug #57370) **
	    Validation of a stream specification form failed to reject spec
	    Path fields containing leading wildcards ( *, ... ) causing 
	    client and branch views to be incorrectly generated.  Existing
	    streams containing such leading wildcards in Path fields will 
	    invoke an error the next time they are attempted to be saved.  
	    Correct these errors by removing leading wildcards.

	#482580 (Bug #56339) **
	    'p4 copy' with both (-S) stream and (-s) fromFile could falsely 
	    report "CopyNeedsMergeFirst" error when no merge exists.  This has
	    been fixed.

	#482438 (Bug #18060) **
	    'p4 add' will now fail if the file is slated as exclusive open
	    in the typemap, and the file is already opened by
	    someone else.

	#481968 (Bug #56430) **
	    'p4 group -a' was returning an "illegal command usage" error on some
	    platforms.  This has been fixed.

	#479612 (Bug #56607) **
	    'p4d -xx' and 'p4d -xv' were mistakenly printing non-error messages
	    to stderr. Those messages are now printed to stdout, and only
	    actual errors are printed to stderr.

	#479503 (Bug #54048) **
	    The 'archive' and 'restore' commands now copy compressed binary
	    files between the local depot and the archive depot in their
	    compressed format (i.e., without uncompressing, then recompressing).

	#478740 (Bug #55738) **
	    'p4 reconcile' ignored typemap entries. This has been fixed.

	#478690 (Bug #56331) *
	    On Windows, the p4 client would mistakenly attempt to create a
	    directory when that directory already existed as a symbolic link
	    created via 'mklink /d'.

	#472861 (Bug #56416) **
	    Performance degradation from excessive scans of db.resolve
	    with the 'p4 shelve' command has been fixed. 

	#471479 (Bugs #56347,#56421) **
	    On Windows, 'p4d -jd' would skip tables larger than 4GB, and
	    'p4d -jc' would fail to truncate journals larger than 4GB.

	#471096 (Bug #56243) **
	    Added 'p4 help legal' to include the full OpenSSL license text
	    with appropriate acknowledgements.

        #467304 (Bug #56226) **
	    Server now detects if broker closes connection as a result
	    of client control-C.

	#462189 (Bug #55748) **
	    Resolve records in 'p4 fstat' output will no longer have gaps in
	    their numbering.

	#458325 (Bug #44399) *
	    Syncing an apple (resource filetype) file would fail with 
	    network transfer errors.  This has been fixed.

	#454430 (Bug #54729) **
	    Police that private key is of type RSA.  Prevent loading
	    of DSA private keys.

	#453549 (Bug #55540) **
	    'p4 counter -i' race condition removed.

	#445556 (Bug #53950) **
	    If a stream and the stream parent have any identical 'Ignored'
	    fields, there is a redundant exclude entry in the generated 
	    branch view.  This has been fixed.

        #443907 (Bug #54921) ** ***
	    p4d, p4p, p4broker run as service on NT could not see
	    P4SSLDIR value in registry. 

	#440231 (Bug #54176) **
	    If a form type had a form-save trigger defined, but did not have
	    a form-in trigger defined, the form-save trigger was called with
	    an empty formfile.

	#436410 (Bug #53679) **
	    'p4 integrate' could fail if the only depot for the source was
	    a remote depot and a change range was specified.  The error
	    'Relock failed in Position()' would be reported under this
	    scenario.

	#436206 (Bug #53742) **
	    A Super user logged in via a ticket trying to login another user 
	    through a proxy did not work.  Fixed.  Also applies to Auth
	    server use.

	#435729 (Bug #53366) **
	    'p4 move' will now open files at the correct depot revision when
	    the target of the move is an existing (deleted) file.  Previously
	    the file would be opened for move/add at revision #1, which could
	    lead sync to schedule spurious resolves.

	#435626 (Bug #53776) *
	    'p4 set P4WEBSERVICEFLAGS=<value>' works again.

	#432300 (Bug #53529) **
	    Files that have been opened with 'p4 copy -v' and then synced
	    while open will now be transferred to the workspace when reverted.

	#431728 (Bug #53461) **
	    Resolving a move could in rare circumstances result in the file
	    being opened in a workspace location that it was formerly mapped
	    to rather than the currently mapped location.  (When this happened,
	    a subsequent sync would correct the issue.)  This has been fixed.

	#429428 (Bug #51965) **
	    When replicating a server which was initially created prior to
	    2008.2, and has not yet been reloaded from a checkpoint to enable
	    the database checksums feature, 'p4 journaldbchecksums' will no
	    longer report 'table checksums DIFFER' in the replica log but
	    will instead report 'table checksums unknown (master)'.

	#427158 (Bug #53155) **
	    This change significantly improves performance of <filespec>@label,
	    when filespec contains no wildcards and is not from a remote
	    depot.

	#426213 (Bug #53180) **
	    'p4 resolve' could fail with a "can't resolve: (shelved change
	    was deleted) error if the file was shelved in multiple places
	    and the file to be resolved was from an older shelved change. This
	    has been fixed.

	#425360 (Bug #47395) **
	    'p4 shelve' could fail with a "missing rev" error if a file to be
	    shelved has resolve records to its head revision and also to a
	    shelved file revision. This has been fixed.

	#424140 (Bug #53126) **
	    Attribute resolves now combine correctly with branch resolves.

	#423257 (Bug #52484) **
	    'p4 copy' no longer deletes target files in a parent stream when 
	    those files are entered in the Ignored: path of the donor stream.

	#422968 (Bug #52995) **
	    'p4 populate' will no longer permit target files to be overwritten
	    when a revision specifier is provided on the second file argument.

	#421165 (Bug #52959) **
	    Using the deprecated '-d' flag to 'p4 integrate' will now propagate
	    move/delete revisions as plain deletes, rather than skipping them
	    entirely.

	#419958 (Bug #52820) **
	    The replica was incorrectly reporting a digest mismatch for a file
	    which was retyped using 'p4 retype -t text+k'.

	#418980 **
	    The 'p4 istat' command is no longer allowed on a read-only replica.

	#417685 (Bug #52442) *
	    A client command may now pass up to 256 command-line flags.

	#414070 (Bug #52521) **
	    A file that is moved back and forth between the same names in two
	    codelines will now correctly propagate the most recent filename
	    when integrated and resolved automatically.

	#412671 (Bug #52372) **
	    Replica server 'p4 pull' commands now use the server disk space
	    configurables and will check for sufficient disk space periodically.

	#412338 (Bug #52231) **
	    Replica servers were incorrectly treating 'p4 counter -i' as a
	    read-only command.

	#411861 (Bug #51623) **
	    The 'p4 verify -z' command now automatically disables file batching,
	    and it is no longer necessary to specify '-b 0' when running
	    'p4 verify -z' in order to get acceptable performance..

	#410909 (Bug #52181) **
	    When using 'p4 copy -S -P' or 'p4 merge -S -P' to copy or merge 
	    changes by reparenting on the fly, directional flow and copy/merge
	    rules are no longer enforced.  In the case of 'copy' however, a
	    check for merged down changes is still performed.

	#408930 (Bug #52147) **
	    Using 'p4 client -s -S' to switch a non-stream client into a stream
	    client will now issue a warning about destroying the clients static
	    view.

	#405701 (Bug #52069) **
	    Files that have been opened for move from an old revision will now
	    produce the correct base file (the origin of the move) when synced.

	#397922 (Bug #51656) **
	    'p4 monitor pause' no longer erases the application name, host
	    address, and workspace name fields.

	#393714 (Bug #51180) **
	    'p4 users -m N <pattern>' could display fewer than N users matching
	    the pattern, if some service users or operators also matched.

	#393526 (Bug #51292) **
	    A Remapped stream path disallowed files starting with a single
	    dot, interpreting the file to be starting with a wildcard.
	
	#393175 (Bug #51183) **
	    It is once again possible to create, edit, and delete a client
	    spec which contains a back-slash (\) character, when the server
	    is on a Windows platform.

	#390961 (Bug #17878) **
	    A job name beginning with a hyphen is now disallowed.

	#387667 (Bug #50828) **
	    Reverting a file that has been synced after being opened by
	    'p4 delete -v' will now correctly sync the file to the workspace.

	#386216 *
	    In some cases, a Windows client trying to delete a symbolic link
	    to a directory could fail with the error message:
	    "unlink: <symlink-name>: Access is denied.".

	#384441 (Bug #50644) *
	    The '-d' flag, which specifies the current directory, is now in
	    effect for the 'p4 set' and 'p4 tickets' commands.

	#379943 (Bug #50375) **
	    A replica server with rpl.pull.position set might echo journal
	    state information to the log excessively following a 'p4 monitor
	    resume' command resuming the replica's pull thread.

	#379327 (Bug #50311) **
	    'p4 verify -t' will now schedule an archive transfer of a missing
	    or damaged file which is a lazy copy.

	#369361 (Bug #26775) **
	    'p4 admin updatespecdepot -a' now includes protect, triggers,
	    jobspec, and license forms in its list of form types to process.

	#367474 (Bug #49092) **
	    It is once again possible to submit a file whose name contains a
	    single double quotation mark character using 'p4 submit -d',
	    although only if the server has neither a form-in trigger of type
	    'change' nor a form-save trigger of type 'change'.

	#366680 (Bug #49557) **
	    'p4 -ztag diff -sb' could report invalid data for the 'depotFile'
	    and 'rev' tags for open branched files that had been modified.

	#366184 (Bugs #42854, #49383) **
	    The MD5 digest file which is created for a compressed checkpoint
	    contains the digest of the uncompressed checkpoint data, so the
	    filename has been changed to omit '.gz'.

	#361586 (Bug #48744) **
	    Updating a shelf such that a previously-shelved edit is changed to
	    a lazy copy of a different archived file will no longer result in
	    a revision that the replica server is unable to transfer.

	#352567 (Bug #47699) **
	    The '-h' flag on 'p4 login' is no longer restricted to super users.

	#349544 (Bugs #42492, #46051) **
	    A 'p4 retype' command which finds that no files need retyping will
	    now issue a warning message describing that fact.

	#349470 (Bug #43904) **
	    An invalid form type for the 'p4 admin updatespecdepot -s' command
	    will now generate a message warning about the unknown type.

	#348775 (Bug #48125) **
	    On a replica server, 'p4 license -i' will no longer update the
	    spec depot entry for the license.

	#348308 (Bug #48242) *
	    When the assumed type of a newly-added missing file is modified
	    by a partially-wild typemap spec, the message about the assumed
	    file type now reflects the typemap information.

	#345397 (Bug #48150) **
	    A 'p4 cstat' command which retrieves no records due to exceeding
	    map.joinmax1 will now display an appropriate message.

	#341691 (Bug #33799) **
	    A typemap entry which defines an invalid filetype for spec depot
	    data is quietly ignored, and the spec depot files are stored in
	    the default (text+C) type.

	#340854 (Bug #34226) **
	    A 'p4 obliterate' command which obliterates both local-depot files
	    and spec-depot files with a single filename pattern will no longer
	    leave a single extra row in either db.revdx or db.revhx.

	#338261 (Bug #47013) *
	    A 'p4 sync' operation which fails due to P4CLIENTPATH will no
	    longer issue the message: "Fatal client error; disconnecting!"

	#337986 (Bug #47021) * **
	    Specifying an out-of-range port number now results in an error
	    message, rather than interpreting the port number modulo 65536.

	#337170 (Bug #21657) **
	    Attempting to open a spec depot file for edit or delete no longer
	    produces the message "File isn't in revisions table!"

	#324724 (Bug #46254) **
	    'p4 fstat -F' filter expressions are now evaluated properly when
	    the arguments are larger than 2^32-1.

	#321510 (Bug #36807) **
	    The standard trigger variables (%client%, %user%, etc.) are now
	    available to archive triggers.

	#321281 (Bug #33612) **
	    Submitting a file of type +X via the proxy no longer crashes
	    the proxy.

	#320613 (Bugs #16997, #18719, #29781, #32950) **
	    Triggers of type "fix-*", "form-*", and "auth-*" now validate their
	    path value more thoroughly.

	#320243 (Bug #14434) **
	    An improved error message is now issued for a 'p4 add' command of
	    a file name containing the ellipsis wildcard (...)

	#320100 (Bug #42051) **
	    Invalid regular expression patterns in a 'p4 fstat' command now
	    issue a syntax error message instead of quietly failing to match.

	#319627 (Bug #45848) **
	    Normal termination of a Unix server will now once again display a
	    log message for each child connection that was running at the time
	    of the shutdown.

	#318993 (Bug #24639) **
	    'p4 opened' now displays '*exclusive*' for opened files of type +l.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r11.1/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Important changes to default integration behavior for 2011.1 **

	#427338 ** (Bug #53249)
	    Two integration engines are supported with the 2011.1 server.  
	    The new integration engine (v3) includes improved base selection 
	    semantics and expanded resolve capability (see below).

	    The GA release of 2011.1 moved to the v3 integration engine as
	    its default engine across all commands (integrate, copy, merge).
	    Given that the new engine will schedule new types of resolve and
	    therefore can return unfamiliar results the default behavior has 
	    been changed.

	    Starting with this patch, the server uses the v2 (2010.2) engine
	    for 'p4 integrate'. The new commands 'p4 merge' and 'p4 copy'
	    continue to use the new v3 engine. 

	    For more details on enabling the new engine, and further information
	    see the following link: 

	    http://kb.perforce.com/article/1631/generation-3-integration-engine

Major new functionality in 2011.1

	#386481 **
	    The unlicensed (free) server version user/client limit (2/5)
	    has been raised to 20/20. Unlimited users and workspaces for 
	    repositories with less than 1000 files has not changed.

	#268731 ** *
	    This release provides support for streams. This functionality
	    provides a way to create and maintain customized branches, known 
	    as streams, and regulate the flow of control of changes for 
	    clients using those streams. A stream spec is used to detail 
	    the relationship between a parent codeline and the branched 
	    files on the workspaces of clients using the stream. Besides 
	    using 'p4 integrate', 'p4 interchanges', 'p4 copy', and 
	    'p4 merge' to handle integration of changes using streams, 
	    a few new commands have been implemented for streams support:

		istat   - Check for integrations needed for a stream 
		stream  - Create or edit a stream specification
		streams - Display list of streams

	    Additionally, 'p4 branch', 'p4 client', 'p4 clients',
	    'p4 diff2', and 'p4 dirs' have command options that relate
	    to streams.

	    To find out more about streams, see 'p4 help stream', or
	    see help for any of the other supporting commands.

	#265906, #274187, #278007, #300647 
	(Bugs #36, #835, #2360, #4834, #21342, #21415, #22187, #22281, 
	 #24144, #25840, #29694, #34416, #37508, #39465 ) ** *
	    With the v3 integrate engine enabled, 'p4 integrate' provides
	    improved base selection semantics and expanded resolve 
	    functionality, including:

		1) Files that have previously been "moved" within the source 
		   and/or target branch will be paired up if there was common
		   integration history prior to the move.  When the range of
		   source changes to be merged includes "move" actions, a
		   special resolve will be scheduled to accept, ignore, or
		   merge the move action.

		2) When files have been edited in one branch and deleted in
		   another, a special resolve will be scheduled to accept or
		   ignore the branch or delete action.  (This replaces the
		   old "can't branch/delete without -d flag" warning.)  The
		   -Rb and -Rd flags to "p4 integrate" will force all branch
		   and delete actions to be resolved, permitting them to be
		   ignored even when they are not in conflict.

		3) When the range of source changes to be merged includes
		   filetype changes, a special resolve will be scheduled to
		   accept, ignore, or merge the filetype change.  (This
		   eliminates the need to use the -t flag to ensure that
		   filetype changes are propagated.)

		4) The new -Rs flag forces multiple resolves to be scheduled
		   per source file when there is a non-contiguous set of
		   unintegrated changes.  This prevents previously "cherry-
		   picked" changes from being re-integrated, at the cost of
		   requiring additional merge steps during "p4 resolve".

	    A new client is required to perform new (non-content) resolves
	    interactively (with prompts), although old clients may still
	    perform these resolves with "p4 resolve -a".  The "p4 integrate"
	    command will not schedule the new types of resolve if the client
	    application indicates that it does not support them.

	    
Minor new functionality in 2011.1

	#342289 **
	    'p4 fstat' will now return a 'reresolvable' field if the file
	    has been resolved and may be re-resolved with 'resolve -f'.

	#335746 * **
	    The auth-check-sso ( auth type trigger ) is now supported.
	    This simple single sign-on trigger has been present but
	    undocumented since 2007.2.  Due to the requirement of the 
	    client-side script component, the trigger will only function
	    with clients at or above release 2007.2.  See 'p4 help triggers'
	    for more information. 

	#333847 (Bug #39308, #46830) **
	    When a copy of a form is saved in the spec depot, the formname
	    is stripped of any leading slashes ('/')  prior to file creation. 

	#332191 (Bug #46870) **
	    The 'dbschema' command is now available to service users.

	#331093 (Bug #46259) **
	    'p4 shelve' now performs tamper checking on lazy-copied files,
	    similar to 'p4 submit -t', by default.

	#323005 (Bug #17757) **
	    'p4 interchanges', which lists changes that have not been 
	    integrated from a set of source files to a set of target files,
	    is now supported.  The command has long been present but has 
	    been undocumented.

	#321120 (Bug #32218) *
	    'p4 resolve' will now suggest 'ae' after an editor or merge
	    tool has been invoked to produce a result identical to the
	    'yours' file.  The resulting 'edit from' record will be a
	    candidate for integration in the reverse direction.  (The user
	    may still enter 'ay' to produce an 'ignored'.)

	#319257 (Bug #39693) **
	    'p4 fstat -Or -e <change> -Rs <file>' now shows pending
	    integration records for shelved files.

	#314657 (Bug #45291) **
	    Compress checkpoint but not journal files.  A new flag '-Z' when
	    used with 'p4 admin checkpoint' and 'p4d -jc' requests that the 
	    checkpoint be compressed but that the journal remain plain text.  
	    Note that the existing '-z' option compresses both the checkpoint 
	    and the journal; '-Z' is useful to allow a replica to read the 
	    uncompressed journal, while allowing the master to save disk space 
	    by compressing the checkpoint.  See 'p4d -h' and 'p4 help admin' 
	    for details.

	#312885 (Bug #43878) * **
	    MD5 routines are somewhat faster now for some platforms.

	#312551 (Bugs #44398, #44626, #40974, #42629 ) **
	    Replica servers now implement the 'p4 login' command locally,
	    rather than forwarding it to the master server. Each user may
	    separately log in and out of the replica server independently
	    from their login to the master server. Replica-server-specific
	    login information is tracked in the db.user.rp table. The new
	    flags '-r' and '-c' to the 'p4 users' command can be used on a
	    replica server to observe replica-specific or central-server
	    login information, respectively. A 'p4 logout -a' or 'p4 passwd'
	    command issued on the central server will also log the user out
	    of the replica server, and deleting the user on the central server
	    deletes them from the replica as well.

	#310768 (Bugs #1415, #2087, #16395, #37612) *
	    P4CONFIG files now validate variable names more carefully. They
	    also are more tolerant of line ending differences. 'p4 set' now
	    reports the name of the actual P4CONFIG file that was used, and
	    also includes any tunables that were set in the config file.

	#309049, #309070, #324902 (Bug #43718) **
	    Create a new 'operator' user type.  There are now three types of
	    users:

	        standard: a normal user (licensed)
	        service: a service user (not licensed)
	        operator: an operator user (not licensed)

	    The purpose of an operator user is similar to that of a restricted
	    admin; he or she can perform various administrative tasks:

		stop or restart the server
		monitor and confirm its correct and timely operation
		return a server to proper operation
		assure the safety and integrity of the data and metadata

	    However, the operator user cannot access or modify any metadata 
	    or file contents.  Operators are intended to be used to manage the 
	    operational aspects of a Perforce server (as opposed to an admin 
	    user, who can also change configuration, etc).  We expect that 
	    large companies might separate functional roles by creating 
	    operators to run the day-to-day management of a Perforce server,
	    admins to perform tasks that have access to metadata or file 
	    contents, and superusers to handle everything else.

	    We expect that the main use of operator users will be to manage a
	    replica; as these users will almost by definition not be co-located
	    with the people responsible for a server, it is desirable that they 
	    can handle the day-to-day operation of a replica without being able
	    to access or to modify metadata or confidential data.  Like service 
	    users, operators are severely limited in what they can do.
	    Operators can run only the following commands:

		    p4 admin stop
		    p4 admin restart
		    p4 admin checkpoint
		    p4 admin journal
		    p4 dbstat
		    p4 diskspace
		    p4 configure
		    p4 counter (including -f)
		    p4 counters
		    p4 jobs (including -R)
		    p4 journaldbchecksums
		    p4 login
		    p4 logout
		    p4 logtail
		    p4 logstat
		    p4 lockstat
		    p4 monitor
		    p4 passwd
		    p4 ping
		    p4 verify

	    Note that the only one of these commands that takes a file path
	    argument is 'p4 verify'.  Operators require LIST access to verify
	    a file, but are not limited by their client spec (they don't even
	    need one).

	    Note also that operators can't run 'p4 client', so they can't
	    create or edit their client spec.  A superuser could create one
	    for them, but it would be pointless: none of the commands they can
	    run use the client spec.

	    Multiple operators can be created, with any desired user names.
	    As is usual, however, the type of a user can't be changed after
	    he or she is created.  Once an operator, always an operator.

	    Finally, note that if a password is set for an operator then they
	    must login (as usual) before running any commands.

	#308967 **
	    'p4 clients' and 'p4 branches' now accept a '-t' argument to
	    output both the date and time of the last update of the client
	    or branch.

	#308775 (Bug #1928) **
	    'p4 resolve' now accepts a '-c' option to limit itself to files
	    open in a particular pending changelist.

	#308703 (Bugs #36850, #39046, #40348, #41933) **
	    'p4 clients', 'p4 branches', and 'p4 labels' now accept a '-E'
	    argument to perform case-insensitive name filtering.

	#308611 (Bug #10863) **
	    'p4 filelog' now allows a revision range to be specified.

	#307793 **
	    'p4 rename' is now a synonym for 'p4 move'.

	#306575 (Bug #42888) **
	    'p4 archive' can now operate on RCS files via the '-t' flag.

	#306446, #307153 (Bugs #7756, #18886, #20385, #24183, #25261,
	              #28208, #30281, #34859, #38949, #39587, #40804,
	              #40834, #41685, #41746, #42691, #44200, #44685,
	              #45078) **
	    Concurrent operations using the same client workspace over
	    separate network connections are now coordinated using locks
	    in the server; this also applies to concurrent 'obliterate',
	    'snap', and 'retype' commands. The locking behavior may be
	    disabled using the 'server.locks.dir' configurable. By default,
	    a new directory "server.locks" is created in P4ROOT to hold lock
	    files for workspace locks; the contents of this directory are
	    transient and do not need to be backed up.

	#304688 (Bug #44656) **
	    Long running integrate commands will no longer block submits
	    if they do not need to add integration history. 

	#302035 **
	    A new option '-b <batchsize>' for the command line client allows
	    the user to specify how many arguments should be sent to the 
	    server.  This option is for use in conjunction with the '-x'
	    option,  which by default sends arguments to the server in 
	    batches of 128.

	#302002 **
	    'p4 fstat' and 'p4 sync' now take a new '-L' flag.  When this
	    flag is used all file arguments supplied must be in full depot
	    syntax and contain a valid (numeric) file revision.  The '-L'
	    flag causes file arguments to be processed together by building
	    an internal table similar to a label. This file list processing
	    is faster and more efficient than computing the results for each
	    individual argument.  Error handling is subtly different (non-
	    existent files, for example, are ignored) but the performance
	    gain can be significant.

	#301617 **
	    'p4 pull -l' now takes a new '-j' flag. 'p4 pull -l -j' displays
	    a short summary report of the metadata replication state.

	#301506 **
	    The 'p4 copy' command will now translate moved source files
	    into paired move/add and move/delete actions in the target.

	#301255 (Bug #44740) **
	    The server can now detect a database table which was not closed
	    properly due to a power failure or system crash. Each time such
	    an event occurs, a counter is incremented in the table's header.
	    The counter value, if non-zero, is displayed by 'p4 dbstat'.

	#300930 **
	    The 'p4 admin checkpoint' command can now be issued against a
	    replica server; the checkpoint is not taken immediately, but
	    rather is performed by the "pull" thread at the next journal
	    rotation that it replicates from the master server.

	#300870 (Bug #3824) **
	    The "-t" option of "p4 edit" allows the string "auto" to mean
	    that the files being opened for edit should have their file types
	    redetected and looked up again via the typemap.  Other commands
	    with similar "-t" options do not support this.

	#299614 (Bug #38221, #39099) **
	    Unshelving a file opened for edit over a file already opened
	    for edit in the workspace is now allowed. A resolve record is
	    created when unshelving, and the user must then run 'p4 resolve'
	    to resolve the workspace files with the shelved files. 

	#298266 (Bug #16321)
	    When a copy of a form is saved in the spec depot, the form text
	    will now include a comment at the top identifying the user who
	    supplied that revision of the form data.

	#298099
	    'p4 pull -u' commands in a replica server with monitoring enabled
	    will now display which file is currently being pulled from the
	    master server in the output of 'p4 monitor show -a'.

	#295632 (Bugs #23544, #11545, #4383, #14431, #27386, #38044) ** *
	    Provided all server and client components are at 2011.1 or
	    higher release levels, Perforce no longer truncates passwords to
	    16 bytes. Users with existing passwords that were truncated
	    should reset their password once all components have been upgraded;
	    otherwise they must enter only the first 16 bytes of their password
	    when prompted by a new client. Users who must use a mix of new
	    and older clients should avoid using passwords longer than 16
	    bytes as the behavior can be confusing. The new password length
	    limit is 1024 bytes.

	#293927 
	    "p4 copy" will now report "file(s) up to date" when attempting
	    to copy between files that are already identical, rather than
	    "all revisions already integrated".

	#291190 **
	    'p4 pull -l' now takes a new '-s' flag. 'p4 pull -l -s' displays
	    a one-line summary report of pending archive transfers.

	#291139 (Bug #38674) **
	    The default value for server command logging is now 'server=1'.
	    Sites which were previously not specifying server log levels
	    should direct server log output to a file by setting P4LOG and
	    should periodically rotate the log and clean up old copies to
	    ensure that disk space usage is managed.

	#290500 (Bugs #19806, #40554) **
	    On Mac OS X and FreeBSD platforms, SO_REUSEPORT is no longer set
	    by default on the server's listening socket. To specify that
	    SO_REUSEPORT should be set, configure net.reuseport=1.

	#289313 **
	    'p4 integ' and 'p4 copy' now support the '-m max'
	    option to limit the output to the first 'max' files.

	#289299 (Bugs #39394, #43519) **
	    Added "-k" option to delete to keep the local file on the client.
	    This option (keep) leaves the local file on the client; the file
	    will still be deleted in the repository when the change is
	    submitted.
	    
	    After running the "delete -k" command, the specified files will be
	    marked for deletion in the repository, but will not be deleted on
	    the client.  After this change is submitted, the files will be
	    deleted in the repository, but will not be deleted on the client.
	    
	    Without "-k", p4 delete operates as it did previously.

	#288318 (Bug #43504) **
	    The 'p4 copy' command now produces revision ranges more similar
	    to those produced by 'p4 integrate'.

	#286960 (Bug #2784) **
	    The new command 'p4 admin restart' can be used to restart a
	    running server using the latest configurable settings.

	#286630 **
	    Checkpoints produced by 'p4d -jd' now include MD5 digest files.

	#286414 (Bug #4558) **
	    The following server configurables may be set to control the
	    automatic enforcement of sufficient available disk space on
	    the server: filesys.P4ROOT.min, filesys.P4JOURNAL.min,
	    filesys.P4LOG.min, filesys.TEMP.min, and filesys.depot.min.

	#286303 **
	    A new journal record type @dl@ now appears in journals and
	    checkpoints. @dl@ records contain information about file content
	    which has been deleted from the server's repository by a command
	    such as 'p4 obliterate', 'p4 archive', 'p4 shelve -d', etc.
	    External programs which parse journal records should be enhanced
	    to recognize the @dl@ records and skip them. 

	#285084 **
	    The new command 'p4 diskspace' can be used by a super user to
	    display the current disk space usage conditions on the server.

	#284481 (Bugs #546, #2048, #13073) *
	    Symbolic links are now supported on Windows 7, Windows Vista, and
	    Windows Server 2008, using NTFS file systems, provided that the
	    CreateSymbolicLink privilege has been granted, or that Perforce
	    is running as Administrator for administrators with UAC enabled.
	    If the target of the symbolic link does not exist, the symbolic
	    link is created as a link to a file, not as a link to a directory.

	#283889 **
	    New commands 'p4 monitor pause' and 'p4 monitor resume' can be
	    used to pause and resume long-running 'verify' and 'pull' commands.

	#283726 (Bugs #32090, #42917) **
	    'p4 license -u' shows the license limits and the entity
	    counts towards the limits.

	#283449 (Bug #3153) **
	    The new server configurable 'journalPrefix' can be used to
	    persistently configure the directory or prefix for checkpoints
	    and rotated journals.

	#282209
	    'p4 client' now supports a new flag '-s'. This flag allows the
	    user to switch views without the need for calling a form editor.
	    The view can either be a template from a client '-t template'
	    or a stream '-S stream'.  Switching views is not allowed if the
	    client has open files,  unless the force '-f' option is used.

	#281596 (Bugs #2122, 42800) **
	    'p4 sync' has been optimized when replacing files on a client
	    that have been remapped but are identical. Previously the server
	    always sent the identical file to the client, this change uses
	    MD5 digests on the server to see if the file needs sending.

	#281208 (Bug #5991) **
	    'p4 sync' now supports a new flag '-s'. This flag adds a safety
	    check using MD5 digests to prevent overwriting previously synced
	    files that have been modified outside of Perforce control.  An
	    alias 'p4 update' has been added for 'p4 sync -s' for users more
	    familiar with this command.

	#281461 **
	    The new command 'p4 journaldbchecksums' can be used by
	    administrators of replicated configurations to verify that table
	    checksums on the replica match those on the master server.

	#280421 **
	    The configurable 'lbr.retry.max' can be set to limit the number
	    of times that a replica server will retry a failed file transfer.

	#280322 **
	    The configurable 'rpl.compress' can be set to cause a replica
	    server to enable data stream compression for connections it makes
	    to the master server. Legal values of compression are: 0-3.

	#280226 **
	    The replica now retrieves compressed binary archives from the
	    master server in their compressed format.

	#280165 **
	    'p4 verify -t' can be used on a replica server to schedule the
	    transfer of missing or damaged file revisions from the master.

	#279986 (Bugs #26286, #36423, #42369) **
	    'p4 verify' now processes files in batches, and will no longer
	    run out of virtual address space when processing an extremely
	    large number of file revisions. The batching is disabled if
	    the '-z' flag is used.

	#278207 (Bug #37707) **
	    'p4 login' now supports a new flag '-h host'. This flag allows a 
	    super user requesting a login for another user to bind the ticket 
	    to a different host (IP address).

Bugs fixed in 2011.1

	#744802 (Bug #69776) **
	    A server with security=3 which uses a P4AUTH server that has an
	    auth-check trigger defined will no longer perform password strength
	    checking, since the external authentication system is responsible
	    for enforcing password strength requirements.

	#598303 (Bug #63987) **
	    A memory leak in replica on-demand file transfer is fixed.

	#515167 (Bugs #59192,#51548) **
	    A memory leak in the client workspace lock feature is fixed.

	#499291 (Bug #53456) **
	    Resolving a move would fail if the target of the move was already
	    opened for add on another client.  This has been fixed.

	#479968 (Bug #56770) **
	    On a Windows server, if 'p4 admin restart' cannot successfully
	    quiesce all the server threads, it will now issue an error message
	    and force the server to shut down, rather than crashing.

	#444979 (Bug #55038) **
	    Running 'p4 integrate/merge/copy' with a bad P4CHARSET value
	    resulted in a server crash.  This has been fixed.

	#437449 (Bug #53834) **
	    'p4 unshelve' would allow unshelving a '+l' file that has been
	    already opened in a different workspace. This has been fixed.

	#425753 (Bug #53138) **
	    A replica server which re-processes a segment of journal data
	    containing one or more row-deletion (@dv@) records will no longer
	    halt replication with the message "Journal record replay failed!"

	#405122 (Bug #52037) **
	    Change #392899 introduced a possible crash when 'p4 sync'
	    schedules resolves.  Fixed.

	#395917 (Bug #51611, #51599) **
	    Some tunables were not initialized to the correct value.  These
	    bad settings could result in non-optimal diff output for large
	    files and some bad transfer errors when syncing files that have
	    a different base file type (lazy copy) compared to the client
	    file type (Binary+D).

	#395714 (Bug #51605) **
	    'p4 integrate' could fail to propagate move actions when the
	    moved file had been overwritten from another branch.  Fixed.

	#392899 (Bug #50843, #51372) **
	    'p4 integrate' would include additional changes in certain
	    circumstances involving cherry-picking of copied revisions.  This
	    has been fixed by reverting to older behavior of picking the base
	    revision just prior to the cherry-pick.

	#390611 (Bug #50948) **
	    'p4d -xu' would incorrectly increment the UnlockCount.

	#388275 (Bug #50814) **
	    Performance changes to the 'p4 integrate' command would incorrectly
	    report a 'relock' failure when the maxlocktime limit was exceeded.

	#387901 (Bug #50836) **
	    Spec depot revisions created by a 2011.1 server have an incorrect
	    filesize value. To correct the data, run 'p4 verify -v' against
	    those spec depot revisions after updating to this patch.

	#385159 (Bug #49324) *
	    On Windows Vista, Windows 7, or Windows 2008, a client running as
	    Administrator would fail to properly process file names in
	    non-ASCII character sets (such as Shift-JIS).

	#380915 (Bug #49890) **
	    Incompatible journal data which a replica can not handle due
	    to a central server upgrade would be silently ignored by
	    the replica which should have stopped replication.
	    Now, a central server upgrade will stop replication by an
	    older replica.  Also, in case of replication errors such
	    as a failed connection, the replica will wait for a minute
	    before retrying so as to not cause wasteful network traffic.
	    This wait time may be set with a -b flag on the pull command.

	#379362 (Bug #50416) **
	    'p4 integrate' would miss integrations in a scenario involving
	    a particular combination of copies and ignores.  Fixed.

	#378640 (Bug #50324) **
	    A replica server would experience concurrency bottlenecks on the
	    rdb.lbr table when replicating 'p4 obliterate' or 'p4 archive'
	    operations: unrelated archive transfers would be blocked.

	#378292 (Bug #50325) **
	    'p4 integrate' will now search the entire branch view when
	    looking for moved file pairs, even when limited by filespec.

	#372168 (Bug #49630) **
	    An interactive 'p4 change' command no longer keeps the client
	    workspace locked during the form editing session.

	#371869 (Bug #49691) **
	    A performance change to 'p4 dirs' in this release caused a
	    regression with respect to the time taken in detecting a
	    twisted client map.  In this scenario 'p4 dirs' has the
	    potential to block other processes,  this has been fixed.

	#363564 (Bug #43979) **
	    Server start up errors on Windows may not be logged.  These
	    errors will now appear in the Windows Application Event log.

	#355223 (Bug #6144) **
	    Triggers may now use a %quote% variable which expands into a "
	    character.

	#342070 (Bug #47657) **
	    'p4 copy' will no longer treat ktext files in remote depots as
	    needing to be re-copied.

	#339848 (Bug #47469) **
	    'p4 pull -u' no longer reports 'Broken pipe' when transferring
	    files with +X filetype modifiers.

	#336867 (Bug #46210) **
	    'p4 unshelve' will no longer open files in more than one changelist
	    after changing the client view.

	#332013 (Bug #46774) **
	    A 'p4 sync' via a proxy of a server file with a corrupted
	    librarian filetype field will no longer hang.

	#330225 (Bug #46683) **
	    A server which fails to start due to an invalid license will now
	    report that error to the P4LOG file (if set), not to stderr.

	#324939 (Bug #46264, #48538) **
	    Performance of protection table processing against a user who
	    is a member of many groups has been significantly improved.

	#323993 (Bug #46191) **
	    Server trace messages now obey the P4LOG setting on Windows.

	#323644 (Bug #46153) * **
	    An already-logged-in superuser may specify his own username as
	    the argument to the 'p4 login' command.

	#321044 (Bug #45968) **
	    Setting filesys.bufsize to 2147483647 no longer crashes the server.

	#320241 (Bug #43747) **
	    The error handling for 'p4 submit' when there are outstanding
	    shelved files has been improved to not make suggestions that
	    may cause data loss.

	#318067 (Bug #28741) *
	    'p4 set' now properly supports 'P4CHANGE' and 'P4AUTH' settings.

	#318053 (Bug #32479) **
	    A 'p4 revert' command might fail to issue the message "//depot/file
	    has been moved, not reverted" if the command also included the
	    revert of at least one other move operation.

	#317078 (Bug #36720, 44704, 44808) * **
	    The replication journal position kept in a state file by
	    a replica server or the 'p4 replicate' command could be
	    corrupted or lost in an out of disk space condition.
	    Now when state files are written a temporary file is used
	    and moved into place which should preserve the existing
	    state file if something goes wrong when updating it.
	    Also, if the state file should be empty or missing, the
	    replica server will refetch from the start of its last used
	    journal position and not from journal number 0.

	#317030 (Bug #45669) ** *
	    In some cases, a super user logging in as another user might fail.

	#316949 (Bug #45646) **
	    The replica now properly handles the case where a +S type file is
	    purged by the addition of a subsequent revision while it is
	    simultaneously being transferred to the replica.

	#316119 (Bug #45018) **
	    Replica servers will report a warning if they are running
	    in a different timezone than their master server.  This
	    timezone difference causes problems with keyword expansion.

	#315817 (Bug #44794) **
	    If a master server crashes with outstanding transactions,
	    replicas would not detect this and not apply journal records.
	    Fixed.

	#314387 (Bug #45044) **
	    Shelving a branched file with the +m storage modifier will now 
	    copy the modified time correctly from the source of the branch.

	#314293 (Bug #41311) **
	    Accidentally configuring more than one metadata 'p4 pull' command
	    in a replica server no longer exposes the replica server to the
	    risk of metadata corruption.

	#312534 (Bug #45414) **
	    'p4 ping -p10 -i3' now flushes intermediate messages to the client
	    prior to the pause between tests, rather than after the pause.

	#312469 (Bug #45394) **
	    'p4 counter -f -i <counter>' may now be used (by a super user)
	    to increment a protected counter.

	#312141 (Bug #45413) **
	    'p4 dbstat -s' now reports a syntax error if any arguments follow
	    the '-s' flag.

	#311519 **
	    Files opened 'virtually' by 'p4 integ -v' or 'p4 copy -v' and then
	    reopened with 'p4 edit' will no longer be considered 'virtual' and
	    will now be cleaned up correctly by 'p4 revert'.

	#310266 (Bug #39450) *
	    'p4 set' now issues a warning if asked to set an unknown variable.

	#310094 (Bug #45337) **
	    'p4 unshelve' now properly unshelves a file which has been shelved
	    while opened for edit, then sync'd to a deleted revision.

	#309553 (Bug #11404) **
	    'p4 obliterate' is now able to properly clean up the working/locks
	    records for a file which has been opened for edit, then sync'd to
	    a deleted revision.

	#308291 (Bug #18396) **
	    'p4 sync -f' will now delete an existing client file when syncing
	    to a deleted revision that the client was currently sync'd to.

	#307786 (Bug #13229) **
	    The error message for a 'p4 integrate' command with a missing file
	    path in either the source or target now indicates which argument
	    was missing the file path.

	#307622 (Bugs #41007, #43965) **
	    'p4 configure show' will now include the p4d '-i' and '-f' flags,
	    if either was set when the server was started.

	#307552 (Bugs #33638, #43875, #43876) **
	    Command line flags that expect non-negative integer values, e.g.
	    'p4 clients -m max', now validate the argument more completely.

	#306175 (Bugs #44961, #44962) **
	    Access to a non-head revision in a remote depot will no longer
	    report "no file(s) at that revision".

	#305502 (Bug #44849) *
	    Errors detected by P4CLIENTPATH will no longer cause the message
	    "Fatal client error; disconnecting!" to be displayed.

	#305025 (Bugs #27168, #32828) **
	    When a super user logs in as another user, the expiration value
	    for the ticket will now be based on the group membership of the
	    logged-in user, not on the groups to which the super user belongs.

	#304734 (Bug #44882) **
	    Import or sync of a remote ktext file no longer erroneously fails
	    due to faulty MD5 verification. This has been fixed.

	#304010 (Bug #41174) **
	    'p4 configure show <variable>' will now show both named and
	    unnamed configurable values, if both are set for that configurable.

	#303228 (Bug #44762) **
	    'p4 fstat -Ol' will now display fileSize and digest values for
	    revisions that have been purged, archived, or moved.

	#303074 (Bug #43929) **
	    Configurable 'net.backlog' can now be set as high as 64K.

	#302300 (Bugs #18950, #25816) **
	    'p4 change -i' no longer allows a user who is not the owner of the
	    pending changelist to update that changelist.

	#301961 (Bugs #43814, #44254) *
	    P4CONFIG files located in the root directory of a Windows
	    filesystem are now located properly at startup of a command from
	    a sub-directory.
	    
	#300089 (Bugs #33102, #28493) **
	    form-in and form-save label triggers are now fired by 'p4 tag',
	    and form-in and form-save change triggers are now fired by
	    'p4 submit -d' and by 'p4 change -t'.

	#299335 (Bug #44391) **
	    'p4 diff' of a file opened for edit, but sync'd to a deleted
	    revision, could incorrectly diff the file against an unrelated
	    depot file.

	#297400 (Bug #43604) **
	    Some wildcard expressions against a remote server (windows),
	    could return incorrect (missing) results.

	#297383 (Bug #44288) **
	    Extra spaces in the 'p4 configure' command no longer result in
	    the setting or clearing of a configurable with the wrong name.

	#291473 (Bug #41841) **
	    'p4 configure show' now indicates if a configurable setting was
	    set via P4DEBUG, via the '-v' argument, or via 'p4 configure set'.

	#291277 (Bug #43917) **
	    A spec depot cannot be deleted unless all of its contents have
	    first been removed with 'p4 obliterate'.

	#290793 (Bug #23413) **
	    'p4 depot -d' now prevents the deletion of a depot which still
	    contains the archive content for files in other depots. After
	    obliterating the other files which are lazy copies of the files
	    in this depot, you can delete the depot normally.

	#290314 (Bug #41070) **
	    'p4 opened -u' no longer requires setting P4CLIENT.

	#290128 (Bug #41558) **
	    'p4 change -o' now requires only 'list' permission, not 'open'.

	#290043 (Bugs #23787, #38931) **
	    The type of an existing depot cannot be changed after creation.

        #288884 (Bug #29921) ** ***
	    Librarian filenames on case insensitive unicode mode servers will
	    now case fold non-ascii characters.

	#288772 (Bug #34940) **
	    The owner of an empty pending changelist is now allowed to change
	    the client field of that changelist via 'p4 change'. This can be
	    useful when handing off a shelf from one user to another.

	#288193 (Bug #22967) **
	    When one or more 'p4 obliterate' commands have resulted in the
	    situation where the oldest available revision of a file is an
	    'edit' revision, 'p4 describe' of the changelist that created that
	    'edit' revision no longer fails with a fatal error.

	#287921, #288760, #288833 (Bugs #43557, #43612, #31456, #43628) **
	    The server will no longer allow any of the counters used by the
	    server itself (change, job, journal, etc.) to be set to a
	    negative value or to a non-numeric value.

	#287785 (Bug #43552) **
	    Taking a checkpoint on a server with journaling turned off no
	    longer crashes the server.

	#287583 (Bug #24588) **
	    The file suffix field for a spec depot now rejects invalid suffix
	    values, such as "@", "...", and "/".

	#287548 (Bug #2235) **
	    'p4 diff -sd' and 'p4 diff -sl' no longer list files opened
	    for delete in their output.

	#287284 (Bugs #42965, #43873) **
	    'p4 pull' now removes obliterated files from the replica.

	#285810 (Bug #43267) **
	    'p4 configure set' and 'p4 configure unset' now support tagged
	    output.

	#285333 (Bug #43217) **
	    p4d -xf 18362 now resets auth-check-sso and service-check triggers.

	#284948 (Bugs #9638, #42928) *
	    When reading settings from P4CONFIG files, trailing blanks are
	    now ignored.

	#284828 (Bug #43034) **
	    In a P4AUTH configuration, the 'license' command is now forwarded
	    from the outer server to the central server.

	#283363 (Bug #43011) **
	    When a spec depot is in use, and a spec object was deleted, the
	    record in db.revsx for the deleted revision contained invalid
	    data for the digest and fileSize columns. This will no longer occur.

	#283211 (Bugs #29324, #42505) **
	    Accidentally defining P4CHANGE or P4TARGET to loop back to the
	    same server is now detected as a runtime configuration error.

	#281564 (Bugs #41265, #42755) **
	    The replica server no longer needs to be restarted following the
	    addition of a new depot to the master server.

	#281180 (Bug #25034) **
	    'p4 revert' no longer reports a librarian error when a revert of
	    a modified +S filetype file fails because the revision that is
	    opened has already been purged from the repository.

	#281105 (Bug #13393) **
	    'p4 describe' no longer reports a librarian error when describing
	    a change which includes a purged revision of a +S filetype file.

	#279464 (Bugs #2309, #36424) **
	    'p4 verify' no longer processes files in remote depots.

	#279258 (Bugs #28640, #33247) **
	    'p4 verify' no longer reports MISSING! for +S files purged after
	    the verify command has started.

	#278478 (Bug #3454) **
	    'p4 verify -q' no longer prints 'file(s) already have digests'.

	#277960 (Bug #41593) **
	    If your password has expired, 'p4 login' will no longer allow
	    you to login with the old password.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r10.2/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Major new functionality in 2010.2

	#274269 (Bug #20896) **
	    P4AUTH (central authentication) and P4CHANGE (central changelist)
	    server options are now fully supported.  Both options have long
	    been present but undocumented.  As of this release, a server that
	    is being used for authentication must have a valid license.  See 
	    the System Administration Guide for more details.

	#272848 (Bug #19628) **
	    This release builds on previous replication infrastructure adding
	    two major enhancements:

	        (i) depot file (content) replication

	        Perforce replicas can now be configured to transfer new file
	        content as well as metadata. The transfer is initiated as soon 
	        as the replica detects new version content.  Depending on how 
	        frequently new content is committed multiple processes can be
	        started to handle the various loads.

	        (ii) server-to-server replication

	        Replication has now been incorporated into the communication 
	        protocol.  This allows a configured replica to run without 
	        the need for external processes to drive the transfer.  
	        Configuration is accomplished by using the new 'p4 configure' 
	        command.

	    See the replication chapter in the System Administration Guide
	    for more details.

	#254889 **
	    A depot of type 'archive' may be defined, and used to implement
	    the controlled transfer of revision content to archival storage.
	    An 'archive' depot is typically mapped to a storage location which
	    can be placed offline to save on storage costs. Having defined an
	    archive depot, the 'p4 archive' command can be used to move
	    revision content to the archive; the 'p4 restore' command can be
	    used to restore archived revisions. The 'p4 files' command now
	    takes a '-A' argument to limit output to files in archive depots.
	    See 'p4 help archive' and 'p4 help restore' for more information.

	#264717 *
	    The p4 client, and the C++ client API, now support client
	    protected regions. Perforce client regions define "safe areas"
	    in a Perforce client's filesystem where files can be accessed
	    or modified, under the control of the Perforce server (through
	    the API); any attempt by a Perforce server to direct participating
	    client APIs to access or modify files outside a client protected
	    region will cause a client-side error in the client API and the
	    relevant files will not be touched. To enable this feature, you
	    may define the P4CLIENTPATH variable (as an environment variable,
	    via 'p4 set', or in a P4CONFIG file) to a (semicolon-separated)
	    list of one or more local filesystem directories.

	#259157, #261720 (Bug #1291, #28884) * **
	    By default, transfer of data between the client and server is
	    now verified against corruption. This check is performed on the 
	    client for 'p4 sync/revert/unshelve/integ' and on the server 
	    for 'p4 submit/shelve'.  These checks may be turned off using
	    'p4 configure' if they adversely affect performance.

	#259145 **
	    The new '-I' flag causes 'p4 annotate' to trace all integration
	    records, rather than only branch records.  If a line was added
	    in one branch, merged into a second, and merged from there into
	    a third, 'annotate -I' on the third branch will show the first
	    branch's changelist as the source of that line.

	#257689 **
	    A new journal record type @nx@ now appears in journals and
	    checkpoints. @nx@ records contain identification information,
	    such as timestamps, checksums, and version numbers, and are
	    recorded by the server periodically, including at the start and
	    end of each checkpoint or journal, when a server is started or
	    shut down, and when the database is upgraded. External programs
	    which parse journal records should be enhanced to recognize the
	    @nx@ records and skip them. 

	#257688 **
	    To help administrators keep track of successful checkpoints, a
	    new internally generated counter 'lastCheckpointAction' has
	    been added which contains the operation timestamp.  Also, when
	    the checkpoint completes, the MD5 digest of the checkpoint is
	    written to the file 'checkpoint.N.md5'. Together these data points
	    can help in verifying complete and undamaged checkpoints.  Note 
	    that if the -z flag was used to compress the checkpoint, it must 
	    be uncompressed to verify the checksum.  When restoring from a 
	    journal, the server will now produce a warning if the journal 
	    was written by a different version of the server, and will produce 
	    an error if the journal was written using different case-handling 
	    flags than are currently defined for the server.

	#255892 (Bug #1492) **
	    The change spec has a new field, 'Type', to specify whether a 
	    change is 'public' or 'restricted'. By default, a change is 
	    'public', which means that it is visible with 'p4 changes', and 
	    can see the change descriptions in 'p4 change' or 'p4 describe'. 
	    The type of 'restricted' will restrict the view of the change 
	    depending on user permissions.  Owners may always see their 
	    changes, and 'restricted' can be overridden by an admin user 
	    with '-f'. This field affects the operation of 'p4 change', 
	    'p4 changes', and 'p4 describe'.  See 'p4 help change', 'p4 
	    help changes', and 'p4 help describe' for more information.
  
	#255729 **
	    The new 'p4 copy' command allows files to be copied (integrated)
	    from one path to another based on file content differences rather
	    than on prior integration history between them.  Files opened with
	    'p4 copy' will be resolved automatically in a single step, and
	    will not be downloaded to the client if the '-v' flag is used.
	    See 'p4 help copy' for more information.

	#246820 (Bug #14713, #23831, #23822, #41783) **
	    Server configuration variables are now stored in the db.config
	    table, and may be displayed and set using the new administrator-
	    only command "p4 configure". Most server configuration variables,
	    including tunables and debug levels, are now dynamic, and will
	    take effect beginning with the next connection to the server.

Minor new functionality in 2010.2

	#281541 (Bug #42790) **
	    'p4 pull' now supports the '-J prefix' flag to allow the
	    specification of the journal file location on the master server.

	#275795 (Bug #16285) * **
	    'p4 ping', which sends messages from the server to the client
	    and back, timing performance, is now supported. It has been
	    present since 2009.2, but undocumented.

	#275057 (Bug #39375, #39412, #39421) **
	    'p4 fstat -F' filtering now supports regular expression matching
	    similar to that of 'p4 grep'. The syntax to enable this filtering
	    is '~='.

        #264938 **
	    'p4d -jr' now has new flags. '-s' will cause recovered
	    journal records to be written to the server's journal file.
	    And '-m' which records new file revisions in a new table
	    'rdb.lbr' which is used to fetch the archive data of those
	    new revisions by a replica server.

        #264054 *
	    'p4 replicate' now has a '-R' flag to attempt to reconnect
	    to a server continuously.

	#262094 *
	    A new flag '-T' was added to 'p4 replicate' that allows the user
	    to specify a quoted, space separated list of table names which
	    should not be transferred for replication.

	#262649 (Bug #7727) **
	    A new flag '-q' has been added to 'p4 sync' and 'p4 labelsync' 
	    which will suppress informational messages during operation.  

	#261187 **
	    A new flag '-T' was added to 'p4 export' that allows the user
	    to specify a list of database table names which will be excluded
	    from exported output.

	#259417 **
	    A new flag '-t' was added to 'p4 change' that allows the user
	    to change the change type on the command line.  This is useful
	    for scripting or triggers

	#259124 **
	    'p4 annotate' will no longer operate on files larger than 10MB.
	    This limit can be changed via the dm.annotate.maxsize configurable.

	#257282 (Bug #39527) **
	    When the target of an auto-merge is a file that was synced from the
	    depot and is not flagged as writable (i.e. open for "integ"
	    rather than "edit"), the client file's digest will be compared
	    against the corresponding digest in the depot.  If it does not
	    match, the resolve will terminate with a "tampered" error message.
	    If the client file is verified as matching the depot revision,
	    the server will use the depot revision for the merge rather than
	    transferring the file from the client.

	#256953 (Bug #3416) **
	    Browsing remote depots has been improved by reducing the amount
	    of data that is passed from the remote server to the local server
	    and then processed.  In particular 'p4 dirs' performance has been
	    improved significantly by computing the directories at the remote
	    end.  Both local and remote servers need to be upgraded to this
	    release to benefit from these improvements.

	#252485 **
	    When a deleted file is added back to the depot by syncing to an
	    earlier revision and running 'p4 add', an 'add from' integration
	    record will associate the added revision with the previously
	    synced revision.  This will make it possible to determine when an
	    'add' was a reversal of a delete as opposed to a new file.

	#250349 (Bugs #7605, #21295) **
	    The server now tracks the date when each user most recently
	    changed their password, and also provides a simple password
	    aging mechanism. The date when the user last changed their
	    password is now visible as a new read-only field in the user spec,
	    and is also displayed by the new '-l' flag to 'p4 users'. The
	    group definition now contains a new PasswordTimeout field which
	    may be set to the number of seconds after which members of this
	    group will be required to change their passwords. If a user is a
	    member of multiple groups, the longest timeout is used. The
	    password and ticket expiration information is now provided as
	    tagged output from 'p4 -ztag login -s'.

	#250142 **
	    A new type of user, called a 'service user', can be defined by
	    specifying 'Type: service' in the user definition. Service users
	    are useful for authenticating and securing network traffic between
	    intermediate servers in a distributed configuration. Service users
	    do not count against your license limit, and it's not necessary
	    to set the 'jobView' or 'reviews' information for a
	    service user. A service user can only run the following commands:
	    login, logout, password, info, and user. Service users should be
	    used as the value of the '-u' flag for intermediate services
	    (proxies, replica servers). When a server connects to another
	    server for remote depot access or for replicating data, the
	    connecting server will authenticate itself using the service user,
	    and the accepting server can control access by including the
	    service user in the protections table specifications.  When
	    using service users, you should be running at server security
	    level 1 or higher, since service users without passwords are not
	    valuable. External authentication for service users can be
	    implemented by providing the 'service-check' trigger. To include
	    service users in the output of 'p4 users', specify '-a'.

	#249892 *
	    On Mac OS X, 'p4 set' now sets Perforce variables as user or
	    system preferences in your Mac preferences folder.

	#247383 **
	    'p4 info' now supports a new flag '-s'. If this flag is provided,
	    the info command will no longer check the user name and client name
	    to verify whether they are known to the system or not. For uses
	    where checking for unknown user names or client names is
	    unnecessary, 'p4 info -s' should provide faster execution.

Bugs fixed in 2010.2

	#598303 (Bug #63987) **
	    A memory leak in replica on-demand file transfer is fixed.

	#470383 (Bugs #53678,#56359) **
	    On Windows an external application will no longer cause sporadic
	    loss of the RCS archive head-1 revision.

	#427939 (Bug #49890) **
	    Incompatible journal data which a replica can not handle due
	    to a central server upgrade would be silently ignored by
	    the replica which should have stopped replication.
	    Now, a central server upgrade will stop replication by an
	    older replica.  Also, in case of replication errors such
	    as a failed connection, the replica will wait for a minute
	    before retrying so as to not cause wasteful network traffic.
	    This wait time may be set with a -b flag on the pull command.

	#425753 (Bug #53138) **
	    A replica server which re-processes a segment of journal data
	    containing one or more row-deletion (@dv@) records will no longer
	    halt replication with the message "Journal record replay failed!"

	#423699 (Bugs #52987, #52837) **
	    Replica server performance could be severely impacted by read-only
	    commands which access new files that have not yet been transferred.

	#370742 (Bug #49769) **
	    Moved files with the +S filetype will no longer be lazy-copied.

	#370100 (Bug #46264, #48538) **
            Performance of protection table processing against a user who
            is a member of many groups has been significantly improved.

	#369984 (Bug #49691) **
	    A performance change to 'p4 dirs' in this release caused a 
	    regression with respect to the time taken in detecting a
	    twisted client map.  In this scenario 'p4 dirs' has the
	    potential to block other processes,  this has been fixed.

	#369871 (Bug #44794) **
	    A replica server might stop replicating if the central server
	    crashes with outstanding transactions.  Fixed.

	#369868 (Bug #43062) **
	    A monitor-enabled replica server will no longer log the message
	    "'pull' exited unexpectedly, removed from monitor table." when
	    'p4 monitor show' is issued.

	#361749 (Bug #49095) **
	    net.mimcheck level 5 did not validate properly causing
	    all commands through a non-local intermediate server to be
	    rejected.  Fixed.

	#308107, #345509 (Bugs #44640, #44713, #44875, #47466) **
	    'p4 print -o' and 'p4 unshelve' no longer fail with a bogus
	    'corrupted during transfer' error with shelved ktext files.

	#345500 (Bug #46430) **
	    The replica server will no longer report "No such file" errors
	    when a move operation is shelved.

	#345377 (Bug #47944) **
	    Metadata changes to replicas could be lost when forms with
	    large numbers of items, such as groups, are changed.  Fixed.

	#345072 (Bug #48002) **
	    A 'p4 change -o' operation that fails to list files due to
	    excessive joined mappings will now produce the appropriate
	    error message rather than silently omitting the file list.

	#331394 (Bug #46820) **
	    A failed 'p4d -jr' operation will now set the operating system
	    exit status to a non-zero (failed) value.

	#322148 (Bug #42260) **
	    A replica server will now only transfer a single revision of
	    an RCS file at a time from the master server.

	#322108 (Bug #44853) **
	    Replica servers will no longer report spurious digest mismatch
	    errors for shelved file content; replica servers in a different
	    timezone than the master will no longer report spurious digest
	    mismatch errors for ktext files containing $Date$ or $DateTime$.

	#320770 (Bug #45601) **
	    Accessing an offline remote depot could cause a server crash.

	#320763 * ** (Bug #41078)
	    Improve network protocol sanity check to prevent crashes
	    when garbage data is received on a connection.

	#315777 ** (Bug #45062)
	    Nested server side errors could result in allowing premature 
	    invocation of a new command.  This new command on the same
	    connection could result in a server crash.

	#310293 **
	    Change 256113 (from the initial 2010.2 release) has been reversed
	    so that files opened by 'p4 integrate -v' or 'p4 copy -v' may be
	    reopened by 'p4 add' or 'p4 edit'.  Note that these files may
	    not be submitted until they are manually added to the workspace.

	#309223, #309512 (Bug #45042, #45121) **
	    In a specific happenstance a Perforce Server trigger may inherit
	    a Windows file handle which belongs to a depot repository file.
	    If the trigger holds that handle long enough, the submit using
	    that repository file can fail.  Files are no longer inherited.

	#300591 (Bugs #43858, #44353) **
	    Accidental multi-threaded sharing of a single client connection
	    will no longer cause a server crash.

	#297671 (Bug #44375) **
	    Changes to the locking algorithm for SOLARIS10 could result in
	    a server hang when multiple p4d processes were chasing the same
	    file locks.

	#297301 (Bug #44354) **
	    'p4 job -i' could block other commands while waiting for a
	    lock.  

	#294117 (Bug #43930) **
	    'p4 dirs' could hang if the client had excessive exclusionary
	    mappings. Now it will exit with an error instead of hanging.

	#293676 (Bug #43942) **
	    'p4 shelve' commands specifying invalid file names no longer crash.

	#292172 (Bug #43797) **
	#293382 (Bug #44092) **
	    In rare cases a Windows virus scanner may block access to the
	    server logfile for extended periods of time and cause a server
	    exit or crash.  This has been corrected.

	#293249 (Bug #43888) **
	    'p4 delete -v' would fail to preserve propagated traits if
	    the file was not on the user's have list. This has been fixed.

	#288575 (Bug #42969) **
	    The replica server will no longer print the error message:
	    "dbget rdb.lbr: no read lock!" during archive transfer.

	#285568 (Bug #42662) **
	    'p4d -xf 925' did not update the change field of the locks table,
	    resulting in incorrect reporting of the 'otherChange' field by
	    'p4 fstat'. This has been fixed.
	    
	#285240 (Bug #42828) ** *
	    A 'p4 sync' via a proxy of a missing server file will no longer
	    hang; also, the client will no longer report a digest mismatch
	    related to the failure to deliver the missing file.

	#285127 (Bug #42971) **
	    A replica server will no longer report archive transfer errors
	    for the contents of deleted shelves.

	#285003 (Bug #43149) **
	    An outer server using a P4AUTH (central server) would fail on 
	    submit due to incorrect checking of local user count. This has
	    been fixed.

	#283415 (Bugs #36103, #38200, #42977) **
	    When the server is logging commands via -vserver=n, replication
	    support operations such as user-export, rmt-Journal, rmt-FileFetch
	    would be reported many times, now they are only reported
	    when initially run or when they take a long time. "-vserver=4"
	    will force even these repeated operations to be logged.

	#282873 (Bug #42997)  **
	    On 32-bit Windows,  a bug with the heap manager could result 
	    with memory allocation problems that could lead to a server 
	    crash. This has been fixed. 

	#282799 (Bug #33543) **
	    'p4 sync <filepath>#none' would make a scan of the db.rev table 
	    for the specified argument even though its redundant.

	#282081 (Bug #42889) **
	    Removed an invalid flag from the help output of 'p4 archive'.

	#282065 (Bug #42858) **
	    If a Windows server was running with a non-zero security level,
	    excess data was being returned on the first response from the
	    server to the client. This has been fixed.

	#280377 (Bug #40748) **
	    Metadata replication with p4 pull stored information
	    in a counter 'sequence' however that causes the counters
	    table to differ from the master server.  This information
	    is now kept in a file 'state' instead.  This file name
	    may be changed with the 'statefile' configurable.

	#280361 (Bugs #26753,#41870,#42313) *
	    'p4 -p "rsh:p4d -i -r ." passwd < password.txt' now works
	    properly on Windows. Additionally, marshalled invocations such as
	    'p4 -G login < password.txt' now work properly on Windows.

	#280347 (Bug #42664) **
	    'p4 copy' will no longer delete files from the target if they are
	    excluded from the branch view.

	#280332 (Bug #42226) **
	    When a replica fails to transfer a binary file revision from its
	    master server, it no longer leaves a temporary file in the
	    replica's depot directory.

	#280021 (Bug #42221) **
	    'p4 pull' run interactively would sometimes hang.  Fixed.

	#278187 (Bug #42429) **
	    'p4 pull' would not work for unicode mode servers.  Fixed.

	#277329 (Bug #42231) **
	    Excluded trigger paths were ignored by shelve-submit triggers
	    when file arguments are used in the 'p4 shelve' command.
	    This has been fixed.

	#276005 (Bug #28693) **
	    The central changelist feature (P4CHANGE) can now be used in
	    configurations where all servers are Unicode-enabled.

	#275889 (Bug #42081) **
	    'p4 print' of a shelved revision via the proxy will no longer
	    erroneously print the content from an earlier version of the shelf.

	#275814 (Bug #6589,#37177) **
	    Windows UNC paths now work in a client root and depot map.

	#275765 (Bug #25700) **
	    In a P4AUTH configuration, to determine whether a username is
	    known, run 'p4 -ztag info' against the central server. When run
	    against an outer server, 'p4 -ztag info' now always displays that
	    the username is unknown.

	#275754 (Bug #40923) **
	    In a P4AUTH configuration, 'p4 info' displays the server license
	    information only when run against the central server.

	#275738 (Bug #32971) **
	    User job views are now operational in the outer server of a
	    P4AUTH configuration.

	#275581 (Bug #41914) **
	    'p4 unshelve' could create db.have/db.rev inconsistencies
	    if unshelving files that were not on the shelving client's
	    have list. This could happen if a user shelved files after
	    'p4 delete -v'. This has been fixed.

	#275083 (Bug #40842) *
	    'p4 replicate' now catches cntl-c to shutdown cleanly.

	#274912 (Bugs #39630, #40903) **
	    An administrator may now use 'p4 shelve -d -f' to delete a shelf
	    without having to specify a valid client name for the command.

	#274855 (Bug #41575) **
	    'p4 integrate' with no arguments now issues a usage message. The
	    arguments to 'p4 integrate' must specify either '-b branchspec'
	    or exactly two file specs.

	#274673 (Bug #42028) * ** ***
	    Perforce crashes or hangs on some 64-bit Linux platforms
	    due to glibc change.  Fixed.

	#273231 (Bug #41819) **
	    'p4 describe' could spend a long time scanning the 'db.integed'
	    table before giving up with the error 'Can't find successor rev'.
	    This was due to bug #37058 which is also fixed in this release.

	#271204 (Bug #41504) **
	    'p4 sizes', 'p4 files', and 'p4 sync' now support the '-m max'
	    option to limit the output to the first 'max' files.

	#271044 (Bug #39870) **
	    'p4 move' has been improved to check for content changes before
	    transferring files to the server.  By checking if the source and 
	    target files are the same, 'p4 move' can implement a lazy copy
	    instead of adding extra files to the archive.

	#270938 (Bug #41442) **
	    On a case-insensitive server, 'p4 counter -f minclient 2009.2'
	    no longer sets the minClient counter to an invalid value.

	#270765 (Bug #41319) **
	    Delete -v would, in some cases, generate an incorrect error 
	    "Can't delete (already opened on this client)" message, and
	    refuse to delete a file even if file was not opened on that
	    client.

	#270764 (Bug #40730) **
	    Spurious error messages were generated by p4 diff -du when
	    a deleted file was diffed. Diffing deleted files generates
	    a "delete diff" that removes all of the lines of the deleted
	    file if the output of diff -du is run through patch.

	#270710 (Bug #7326, #41203) **
	    New tunable 'dm.user.noautocreate' has been created to
	    provide control over automatic user creation. By default, if
	    unset or set to 0, the server allows users to be created on
	    the fly as permitted by the protects table. If this tunable is
	    set to '1', users may only be created using the 'p4 user' command.
	    If set to the most restrictive value of 2, users may only be
	    created by a super user using the 'p4 user' command.

	#270688 (Bug #16379) *
	    Use of a .p4tickets file with DOS-style line end conventions no
	    longer confuses Unix/Linux clients, and the tickets file can thus
	    now be shared between different systems.

	#269913 (Bug #41053) * **
	    The merge algorithm has been improved to detect a delete adjacent
	    to a conflict, and include the deleted lines in the conflict
	    region.

	#268822 (Bug #41101) **
	    A trigger specification which mentions a %variable% whose name
	    exceeds 64 characters will no longer cause a server crash.

	#267930 (Bug #40800) **
	    'p4 describe' of a pending changelist now properly includes
	    files with leading special characters in the Affected Files list.

	#264435 (Bug #6479)
	    Version resources are now embedded into executables on Windows.

	#264291 (Bugs #36052,#34255) **
	    The performance of 'p4 unlock -f' has been greatly improved for
	    sites that have many files open.  

	#263471 (Bug #40589) **
	    'p4 revert -a -k files...' no longer issues the error message
	    'Illegal command usage. Try 'p4 help' for info.'.

	#263034 (Bug #40520) **
	    If a trigger emitted "\n" as its standard out, and nothing else,
	    then the server would access an invalid memory location and
	    might crash.

	#261184 (Bug #39375, #39421) **
	    Implements two new escape combinations to fstat. Allows
	    user to specify \0 to represent an empty field and \... to
	    represent the wildcard expression ... 

	#260495 (Bug #35426) **
	    The TCP/IP listen() 'backlog' parameter may now be configured to
	    a value larger than 5 on Windows, and the default backlog value
	    is now 10 on all platforms, whereas formerly on Windows it was 5.

	#258947 (Bug #32695) **
	    Attempting to labelsync a revision that is not in the label's
	    view will now produce the correct "not in label" error rather
	    than "no permission".

	#258410  (Bug #40020) **
	    'p4 dbschema' is now present in the output of 'p4 help commands'.

	#257615  (Bug #023018) **
	    Duplicate log output is written to log when certain conditions
	    are met.  This has been fixed.

	#257026 (Bug #39846) **
	    'p4 describe' of a pending change allowed users without
	    'list' permission for its files to view them. This should 
	    work the same as describe of submitted changes. Both should 
	    restrict running the command to having 'read' access (or 'list'
	    if '-s' is used), but should only list files to which there
	    is at least 'list' access. This has been fixed.

        #256225 (Bug #39682) *
	    'p4 replicate -x -s <statefile>' would not update the statefile
	    on journal rotate exit (the -x flag) in a way such that the
	    next run of the command would continue with the next journal.
	    Fixed.  Also, the -o <file> option would leave the target file
	    read only on journal rotate exit.  Also fixed.

	#256195 (Bug #38909) **
	    Operations that produce no result because of exclusions in a
	    a combination of mappings (e.g. protect + client + branch) should
	    now more accurately produce an error message that indicates which
	    mapping was empty due to exclusions.  For example, integrating
	    into an excluded client path could previously report "no permission
	    for operation," and will now report "not in client view".  A more
	    subtle effect of this fix is a change from "no permission" errors
	    (insufficient access) to "protected namespace" (no access at all)
	    for some commands where the user does not have "list" access.

	#256113 **
	    Files opened for branch but not present on the client (the result
	    of 'p4 integrate -v') may no longer be reopened for 'add'; this
	    was unintended and in most cases undesirable behavior.  Users who
	    had been making use of this behavior to avoid extra downloads 
	    when renaming files should be able to get similar (but better)
	    behavior with a combination of 'p4 sync -k' and 'p4 move'.

	#256017 (Bug #39601) **
	    'p4 unshelve' operations are now logged to the audit log when
	    audit logging is enabled.

	#255335 (Bug #14771) * **
	    Handling of ^C interrupts of 'p4 sync' commands has been improved:
	    the client's ^C signal handler now flushes buffered messages, and
	    the server's connection-dropped logic now processes buffered
	    acknowledgements more thoroughly.

	#254916 (Bug #39653) **
	    The '-T' flag to 'p4 fstat' has been fixed to correctly handle the
	    tags otherOpenN, otherLockN, otherActionN, and otherChangeN.

	#253916 (Bug #39595) **
	    'p4 integrate -t' will now correctly propagate the filetype
	    of the source when the target file is already open for integrate.

	#253773 (Bug #39458) **
	    The 'have list' could become confused when a file was opened,
	    deleted at the head rev, synced, remapped to a different file,
	    and synced again.  This has been corrected.

	#253333 (Bug #23248) *
	    If the Perforce client was unable to delete a binary file on a
	    Windows platform due to the file being in use by another process,
	    the file was being mistakenly left with read-write permissions,
	    instead of being restored to read-only permissions.

	#253325 (Bug #15981) **
	    When 'p4 integrate' is run with a branchspec and multiple toFile
	    arguments, each argument is processed fully before starting on the
	    next.  This should prevent the "muddled resolve" error that could
	    result from a file being opened for branch multiple times by a
	    single command.

	#253264 (Bug #22184) **
	    A usage error now occurs for 'p4 submit -d xxx -i', since the
	    -d and -i flags cannot both be used together. Prior to this change,
	    the -i flag was quietly ignored in this case.

	#253055 (Bug #37058) **
	    A 'copy' resolve will no longer override an earlier 'moved' and
	    change it to an 'ignored'.  This should prevent a subsequent
	    'describe' of that change from producing a 'can't find
	    successor rev!' error.

	#252662 (Bug #37694) *
	    When using a Perforce client on Windows that spans multiple drives,
	    drive letters were being mistakenly processed in case-sensitive
	    fashion. They are now once again automatically lower-cased.

	#252513 (Bug #3830) **
	    Files that were open for branch before being reopened for add
	    will now be deleted from the workspace when reverted.  New
	    files opened for add will still be "abandoned" on revert.

	#252446 (Bug #20380) **
	    The performance of 'p4 dirs' has been greatly improved in the
	    case where a user has exclusionary permissions under the
	    specified path. In this case, the number of rows scanned has
	    been significantly reduced, resulting in faster performance.

	#252366 (Bug #38831) **
	    The command 'p4 jobs -e "Job >= jobNNNNNN"' was mistakenly
	    treating the >= operator as though it was =.

	#252228 (Bug #38955, #20516) **
	    If 'p4 reopen -t +ko file' is used to add the +ko modifier to
	    a file which is already marked as +k, the +ko is now ignored,
	    and the file remains marked with filetype +k.

	#251611 (Bug #34018) * **
	    On Windows platforms, it is now once again possible to specify
	    parameters such as P4EDITOR using double quotation marks to
	    surround the parameter value.

	#251384 (Bug #35357) **
	    'p4 annotate' did not respond properly to a user attempting
	    to interrupt the command with ctrl-c.

	#251342 (Bug #35562) **
	    When computing the set of groups to which a user belonged, the
	    server could fail to notice an indirect group membership via
	    a subgroup, if another group of which the user was a member
	    happened to be the very last entry in the db.group table. Fixed.

	#251119 (Bug #28201) *
	    'p4 [cmd] -i < /some/directory' would crash because the I/O
	    error that resulted from re-directing stdin to a directory was
	    not caught. This has been fixed.

	#251093 (Bug #30807,32404,32405,34003) **
	    'p4 fstat -T' now validates the field list more thoroughly and
	    rejects unknown field names as errors.

	#250920 (Bug #37475) **
	    When an integrate command reported 'File(s) not in client view',
	    a memory leak was occurring, and has been fixed.

	#250482 (Bug #30780) * **
	    Validation of the port number in P4PORT has been improved, and
	    port numbers that start with a digit but contain non-numeric
	    characters are no longer accepted.

	#250142, #255123 (Bug #39294, #21949) **
	    'p4 user -o' or 'p4 user -d' for an unknown user would fail
	    if the license quota was full. Fixed.

	#249529 (Bug #38785) **
	    A malformed date specification combined with another search
	    expression could cause "p4 jobs -e" to crash.  Fixed.

	#246985 (Bug #26138,38051) **
	    Running 'p4 verify' on a compressed-binary revision file in
	    the versioned file tree would loop forever if the binary was
	    truncated. Fixed.

	#239657 (Bug #38194) *
	    'p4 replicate -k' would not terminate if the subprocess
	    terminates abnormally.  Fixed.

--------------------------------------------------------------------------
Important note:

	Please refer to:
	http://www.perforce.com/perforce/r10.1/user/relnotes.txt
        to get up to date GA and post-GA information about this release.
--------------------------------------------------------------------------

Major new functionality in 2010.1

	#235471 (Bug #1400) **
	    The new 'p4 grep' command enables users to search through a 
	    revision range of archived text files on the server.  Regular 
	    expressions, case-insensitive and inverse search are supported.  
	    See 'p4 help grep' for more information.

Minor new functionality in 2010.1

	#243979 (Bug #994) **
	    A new flag '-d' for 'p4 add' now allows the user to downgrade
	    some open file actions which previously would require a revert.
	    This flag can be used if a file is opened for 'edit' and synced
	    to a (deleted) head revision or for a file that is opened for
	    'move/add'.  See 'p4 help add' for more information.

	#242851 **
	    Per change 227535, the error message on attempting to submit a 
	    deleted file that is open for edit will now suggest "sync & add" 
	    as a possible solution.

	#241134 * **
	    Perforce clients, servers, and proxies will attempt to increase
	    TCP send and receive buffers to 64Kbytes if those buffers are less 
	    than that amount.  This can improve network performance on high 
	    latency networks.

	#236504 **
	    'p4 export -r' command to report journal records will now
	    report the table name of a record if the record is a database
	    table record and the '-F' filter option will now work with
	    these raw journal export records.

	#236044 (Bug #3440, #37905) **
	    A new system counter 'minClient' may be set to a release
	    number which the server will enforce as a minimum
	    client version to work with.  If set, another counter,
	    'minClientMessage' may also be set to supply a message to the
	    client regarding how to get newer clients.  The server must be
	    restarted after changing these counters.

	#235925 **
	    A new flag '-S' for 'p4 sizes' reports size information for
	    files that have been shelved.  See 'p4 help sizes' for more
	    information.

	#235755 (Bug #37597) **
	    The server may be operated with the -C1 option to force
	    the server to operate in case insensitive mode on a normally
	    case sensitive platform.

	#235393 (Bug #34869) **
	    String case handling of a p4d server is now specified in the
	    output of 'p4 info'

	#235026 (Bug #36327) * **
	    A new flag '-f' for 'p4 move' allows the user to force a move
	    to a file already synced to the client workspace.  One use of
	    this command is the ability to move and resolve a file that is
	    opened for edit but has been renamed at the head revision.

	#233651 (Bug #2319) **
	    Atomic update of counters.  A new flag '-i' for 'p4 counter' 
	    increments the supplied counter by 1 and returns the new value.

	#232628 (Bug #35860) *
	    PKZIP and Java archives are now detected as compressed
	    binary files and added to the server by default as ubinary
	    meaning they are not compressed by Perforce.

	#230242 (Bug #23422) * **
	    Perforce clients running on (windows) NTFS filesytems can suffer
	    from performance problems due to fragmentation.  This change
	    pre-allocates space for files larger than 32K.

	#227793 **
	    The performance of 'p4 unshelve' has been improved by batching 
	    its updates to benefit from the internal cache and a reduction 
	    in lock requests.

	#225620 **
	    New triggers are available for use with shelving files.
	    The 'shelve-submit' trigger is similar to 'change-submit', 
	    but trigger failure prevents shelving. The 'shelve-commit'
	    trigger operates similarly to 'change-commit'. Finally, the
	    'shelve-delete' trigger can be used to prevent shelved file
	    deletion. Please see 'p4 help triggers' for more information.

Bugs fixed in 2010.1

	#282873 (Bug #42997)  **
	    On 32-bit Windows,  a bug with the heap manager could result 
	    with memory allocation problems that could lead to a server 
	    crash. This has been fixed. 

	#276388 (Bug #41364) **
	    Resolves between 'text' and 'symlink' files will now be treated
	    as 'binary' (at/ay) by default.

	#264737 (Bug #40395 and #40396) *
	    Change #258714 introduced a regression that caused the client
	    spec option 'rmdir' to not delete directories on Windows. 
	    This change resolves that problem.

	#264094 (Bug #40089) **
	    The p4d server on SOLARIS10 suffers from poor concurrency due
	    to changes in the way that the file locking system call fcntl()
	    has been changed. Unlike other platforms, SOLARIS does not allow
	    shared access to files if an exclusive lock is waiting.
	    This change fixes the problem by using region level locks for
	    each reader and should provide improved concurrency.

	#258714 (Bug #12200) *
	    RmDir operation (invoked by client rmdir option) will delete
	    junction points, causing undesirable side effects, including 
	    deleting files unexpectedly.

	#257930 (Bug #39886) **
	    Multiple simultaneous grep commands could cause server instability.

	#256855 (Bug #39815) **
	    Problems with the TCP connection would be reported if
	    the proxy (or configurable broker) was in use and a
	    TCP forwarder (or older proxy) is between the client
	    and that proxy.  Fixed.

	#248446 (Bug #34305) **
	    'p4 changes -s pending @change' would result in a 'no read lock'
	    error message. This command now works correctly.

	#248320 (Bug #39200) *
	    When a file created in winter (during standard time) is added
	    in summer (during DST), using a Windows platform for the client,
	    the modification timestamp on the file is incorrectly computed.
	    This has been fixed.

	#248131 (Bug #39140) **
	    'p4 diff @=<shelved>' could fail to find the files to
	    diff if files were opened outside of the shelved change under
	    certain circumstances. This has been fixed.

	#248086 (Bug #37881) **
	    'p4 diff -f' did not handle moved files correctly, it would
	    diff the target of the move against the wrong depot file, this
	    has been fixed.

	#246764 (Bug #38800) **
	    'p4 shelve' now requires open access rather than write access.

	#246502 (Bug #38992) **
	    'p4 change -f' was erroneously changed in 2009.2 to disallow
	    changing the 'user' to a non-existent user. This has been
	    fixed.

	#244697 (Bug #38850, #38915) **
	    'p4 revert' will now allow users to revert a file opened for
	    move/delete even if its move/add partner isn't open in the
	    user's client. 

	#244448 (Bug #36927) **
	    Submission of a changelist in which one or more modified files
	    failed to be transferred to the server could improperly
	    complete (rather than being aborted) if an unchanged file in the
	    same changelist was reverted or excluded due to the use of the
	    revertunchanged or leaveunchanged client submitoptions.

	#244379 (Bug #36875) **
	    'p4 tag' command would not save forms to the spec depot, this
	    has been fixed.

	#243724 (Bug #38117, #38813) **
	    Issuing 'p4 unshelve' with ktext files resulted in $Change$,
	    $Date, and $DateTime expanding to values from the shelved
	    revisions rather than the depot revisions, causing spurious
	    diffs based only on expanded keywords. This has been fixed.

	#243445 (Bug #38776) **
	    'p4d -jrc' used with 'p4 replicate' or 'p4jtail' would stall
	    the last transaction until the next transaction starts.
	    If interrupted during this stall the last transaction would
	    be lost.  Fixed.

	#243220 (Bug #37618) **
	    The 'p4 describe -S' command would fail if a shelved file
	    was deleted at the head revision.  This has been
	    fixed to perform the describe, list the files, but skip 
	    printing impossible diffs.
	    
	#243221 (Bug #38349)) **
	    p4 diff -du gives errors when run against files open for move.
	    This has been fixed.

	#243165 (Bug #38286) **
	    'p4 annotate -i' could take a long time if the branched files
	    being followed stepped into protected namespace.  
	    this has been fixed.	

	#243180 (Bug #37720, #38349, #37689) **
	    p4 diff -du does not run against files open for integrate,
	    but not yet resolved.  Also fixes 'p4 diff -du -f' against
	    unopened/all files. 

	#243163 (Bug #38350) **
	    p4 diff -du gives wrong output when diffing shelved files open 
	    for add. This has been fixed.

	#242670 (Bug #16782) *
	    On Windows platforms, when using the 'modtime' client option
	    or the +m filetype modifier to cause sync'd files to have
	    their last-modified date set to the last-modified date from
	    the revision on the server, the date could sometimes be off by
	    an hour. Specifically, if the last-modified date was during
	    standard time, and the Windows machine is now observing daylight
	    saving time, or vice versa, an erroneous time zone adjustment
	    was performed. This has now been fixed.

	#242130 (Bug #37007) **
	    When sorting output with 'p4 fstat -Sd' added files would not
	    be consistently ordered if the command was run at exactly the
	    same time (in seconds) as some of the other files were submitted.
	    This change considers that newly added files are not part of
	    the existing repository and hence do not have a submitted date
	    to order on, they will always appear first in the sorted output 
	    list.

	#242074 (Bug #38596) **
	    When 'p4 replicate' or 'p4 export' was invoked to export the
	    current journal file against a server which is running with
	    journaling disabled, the server would crash. This has been fixed.

	#242015 (Bug #37481) **
	    When the job counter exceeded ten million, a server error would
	    occur trying to create the next job. This has been fixed, and
	    the job counter can now go up to 2,147,483,647.

	#241872 (Bug #37934) **
	    When multiple triggers were fired by a single operation, if the
	    second trigger's command line length was exactly 1 character
	    longer than the first trigger's command line, the second
	    trigger's final argument was not properly null terminated.
	    This has been fixed.
	    
	#241218 (Bug #38024) **
	    Obliterating a deleted revision from a spec depot was issuing
	    a warning about a non-existent RCS file in the archive. This
	    warning was incorrect and has been fixed so it no longer appears.

	#241181 (Bug #37822) **
	    The usage message displayed by 'p4 protects' when an invalid
	    command line switch is passed was missing the '-g' option.
	    This has been fixed.

	#241038 (Bug #36180) **
	    'p4 fstat -F' gets wrong results when the filtering value began
	    with a number, but was actually a string value. The filter was
	    mistakenly performing numeric comparisons using only the numeric
	    prefix of the string, rather than string comparisons using the
	    entire string. For example, the filter '-Ol -F "digest=9"'
	    would display all files with a digest starting with a 9.

	#240993 (Bug #38507) * **
	    'p4 replicate' may produce duplicate journal records as
	    output or to a subprocess if a server transaction exceeds
	    the poll time interval ('-i' option) of the replicate command.
	    Fixed.

	#240721 (Bug #36004,#38389) **
	    When server command tracing is set to level server=2 or higher,
	    'p4 -Ztag counter' and 'p4 -G counter' commands were logging
	    the counter's value as an extra line of command completion
	    trace output. This has been fixed.

	#240699 (Bug #36135) **
	    When a single change fires both the fix-add and fix-delete
	    triggers, the value of the %jobs% variable for the fix-add
	    trigger now correctly contains the added jobs, not the
	    deleted jobs.

	#238565 (Bug #38103) **
	    Under certain conditions 'p4 login' could issue a ticket
	    to a user with a weak password even if the server security
	    level required strong passwords. In that event, the user
	    had a ticket, but could still not issue any commands.
	    Now a ticket will not be issued unless the password
	    strength is sufficient.

	#238346 (Bug #37870) **
	    Users will receive a warning message when shelving a file
	    opened for edit with exclusive open (+l).

	#238025 (Bug #37815) **
	    Password strength could be computed incorrectly in certain
	    circumstances when server security level is less than 2. This
	    has been fixed.

	#237764 (Bug #37836) **
	    In some cases strong passwords were not being enforced
	    correctly when using command line arguments. This has been
	    fixed.

	#237028 (Bug #37630) **
	    'p4 group' will no longer save a completely empty group.

	#236158 (Bug #19844) **
	    This change delays a reverse DNS lookup for the trigger 
	    variable 'clienthost' until it's actually needed.  

	#235848 (Bug #37543) **
	    'p4 diff @=<shelved change> will now show diffs for files
	    which have been opened for add and shelved against their
	    corresponding file(s) in the client workspace. 

	#235845 (Bug #37882) **
	    'p4 diff @=<shelved change> would show incorrect results
	    if the change contained files which were moved. This has
	    been fixed.

	#233698 (Bug #12574) **
	    'p4 integ' with no rev range specified could pick a non-existent 
	    base revision when the first revision of the source file had 
	    been obliterated, leading to a 'missing from rev table' error 
	    on resolve.  This situation will now be treated as a baseless 
	    integrate, using the first available revision as a base.

	#233519 (Bug #29969) **
	    'p4 sync' to a path that has been excluded from the workspace
	    yielded a "protected namespace" error instead of a "file(s) not
	    in client view" error. This has been fixed.

	#232867 (Bug #37121) **
	    'p4 info' command run against a p4d server on a Windows machine
	    whose timezone name includes non-ascii characters would show
	    a server date with the timezone corrupted.  Now, any non-ascii
	    characters will prevent the timezone from being displayed.

	#232454 (Bug #1870) * **
	    'p4 diff2 -q' would report the confusing message "No file(s) to
	    diff" if the files were identical. Now it will report "No
	    differing files" instead.  Users requiring the old behavior
	    for scripts or applications can set the protocol variable 'api' 
	    to a pre 2010.1 value, such as 'p4 -Zapi=66 <cmd>'.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2009.2

	#215740 * **
	    This release brings together two commands which provide core
	    infrastructure required for replication.  These commands are
	    administrative only and should not be used without reading and
	    understanding the available documentation.

	    'p4 export' (first introduced in 2009.1) is now a fully supported
	    command for extracting checkpoint and journal meta-data out of a
	    Perforce repository.  See 'p4 help export' for more information.

	    'p4 replicate' is a new command built into the command line
	    client that polls for new journal entries from a server and
	    allows them to be played into a replicating repository.
	    See 'p4 help replicate' for more information.

	    Please see the Perforce System Administrator's Guide for more 
	    details on replication functionality and usage.

	#208746 (Bug #15043) **
	    Two new commands, 'p4 shelve' and 'p4 unshelve', enable 
	    developers to store and retrieve files on the Perforce server 
	    without submitting them.  These commands make multi-tasking, 
	    code sharing, testing and review much easier and more practical.  
	    Users gain access to shelved files and their content through 
	    the following commands:

	        'p4 describe -S change#' displays files that are shelved 
	        for the specified change (along with any diffs).

	        'p4 changes -s shelved' limits the output of the command
	        to only those changes that have shelved files.

	        'p4 fstat -e change# -Rs' displays file information for
	        those files shelved at the specified change.

	        'p4 diff/diff2/files/print' have access to shelved files
	        through the '@=change' revision specification,  where 
	        'change' is the pending changelist number.

	    See 'p4 help shelve/unshelve' for more information.

Minor new functionality in 2009.2

	#220795 **
	    'p4 dbschema' (first introduced in 2009.1) is now a fully 
	    supported command that reports database schema information.
	    See 'p4 help dbschema' for more information.

	#216422 **
	    The variable %changeroot% is now available to change-commit 
	    triggers,  its value being the root path of submitted files.

        #215113 (Bug #34319) **
	    The access time updates on users and domains/clients are now
	    tunable.

	#214910 (Bug #35399) *
	    A password specified on the command line might be visible
	    in a list of processes (ps). To reduce this possibility,
            add logic to obscure memory.

	#214697 (Bug #35363) **
	    Deleting a user with 'p4 user -d' now checks for open files
	    in a separate transaction. This approach improves concurrency 
            by reducing lock duration for the other tables.

	#213147 (Bug #35353, #35354) **
	    'p4 filelog' has two new flags.  The '-s' flag returns
	    a shortened form of output.  The '-c changelist#' flag restricts
	    output to files submitted at the given changelist.  
	    See 'p4 help filelog' for details.

	#209865  (Bug #35224) *
	    P4PORT=rsh: can now handle quoting of spaces on UNIX.  
            Use double quotes. For example, the P4CONFIG file can contain:

		P4PORT=rsh:p4d -r "root directory"

	    and "root directory" is recognized as a single argument
	    (without the quotes).  A " can be specified by using "".  Note
	    that, on Windows, the whole string (after the rsh:) is passed
	    to cmd.exe for handling, and must obey cmd.exe's quoting
	    rules.

	#205590 (Bug #33826) **
	    'p4 edit' and 'p4 move' now accept a '-k' flag, which
	    updates the server so that it appears that a client
	    workspace already has the file(s) requested.  Using this
	    flag prevents files from being synced to the client workspace.

	#205204 **
	    'p4 change' now permits the owner of a pending changelist
            to modify the User field of a pending changelist, if
            the changelist is empty.

	#203942 (Bug #32494) **
	    The client/server network connection handling has been
	    adjusted to prevent it from hanging.  The server logic has
            been changed so that it complements TCP's send/receive buffers
	    with buffers of its own and uses polling to buffer what TCP
	    won't.  With this change, the server's "himark limit" can be set
	    arbitrarily high.

	#203415 (Bug #34227) **
	    Modify the fstat filter option to support wildcard comparisons
	    for text fields.

	#201673 **
	    Two database tables, db.boddate and db.ixdate, have been
	    combined into two other tables, db.bodtext and db.ixtext,
	    to improve access times for jobs.

	#199579 **
	    New data type for jobspec fields: bulk. 'bulk' is like 
            'text' but the field contents are not indexed for searching 
            by 'p4 jobs -e'.

	#199599 **
	    Updates of the last access time for a client/label/user
	    now happens only when those tables are free to be updated. 
            If no update has happened for over an hour, the
	    update is forced (the command waits for the lock).

Bugs fixed in 2009.2

	#260664 (Bug #40045) **
	    'p4 describe -s' was taking an unnecessary shared lock out on
	    the db.integed table.

	#255952 (Bug #39742) **
	    A performance change has been made to reduce the number of times
	    that the db.monitor table is read when monitoring is in effect.

	#247496 (Bug #39061) **
	    'p4 unshelve' could fail to unshelve moved files if the files
	    were mapped differently on the user's client workspace than
	    the shelver's client workspace. This has been fixed.

	#245854 (Bug #038771) **
	    In rare cases traversing a large db.archmap table may cause
	    a stack overflow.  This problem has been corrected.

	#244299 (Bug #038062) **
	    The Server's Smart Heap memory manager retained free memory
	    in an internal heap free list.  Capped the level of free list
	    memory retention to 4 Gbytes. (Windows x64, Linux 2.6)

	#244254 (Bug #37717 ) **
	    'p4 change -f -s' would fail to allow a super user to
	    change the user of an empty pending change if there were
	    opened files in the client's default change. This has
	    been fixed.

	#241894 (Bug #38580) **
	    A jobview filter that specified date-field > date-value would
	    incorrectly return jobs where the date-field was exactly equal
	    to the date-value (that is, the > was processed as >=).
	    This has been fixed.

	#237368 (Bug #37964) **
	    Several password and security bugs that required manipulating
	    the protocol stream have been fixed.

	#237994 (Bug #37073,#22531,#29638) **
	    Under certain conditions a user with admin privilege could set a
	    weak password for another user on a system with level 2
	    security. This has been fixed.

	#236925 (Bug #37956) **
	    The server could crash when a table containing an invalid
	    permission was being parsed to create a spec.  Fixed.

	#235183 (Bug #37752) *
	    Users could still erroneously submit unicode type files
	    to a non-unicode enabled server by locking the files
	    (via 'p4 lock') prior to submitting them. Now this
	    scenario will cause the submit to fail as it should.
	
	#232016 (Bug #37534) *
	    Changes to the client/server network connection handling did not
	    check for certain error conditions on windows.  An application
	    could fail with the message 'WSAEWOULDBLOCK'.

	#231847 (Bug #37464) *
	    Allowing the P4CONFIG file to contain tunable values caused
	    a regression on case insensitive clients (windows).  Any variables
	    in configuration files that did not exactly match the case as
	    documented would be ignored.

	#231272 (Bug #37395) **
	    'p4 diff -du' would diff files that had been deleted from
	    a client workspace even if they were not opened. 

        #230553 (Bug #37173) *
	    'p4 replicate' when run against a Unicode mode server
	    would translate journal records into the P4CHARSET
	    specified character set which should not happen because
	    those records are expected to be in UTF 8 when loaded
	    into a replica server.  'p4 replicate' will now not translate
	    those journal records when in Unicode mode.

	#230416 (Bug #37377) **
	    Users were removed from groups during upgrade to 2009.2
	    if the group db records were in 2007.2 db record format.
	    This has been fixed.
 
        #229997 (Bug #37318) * **
	    p4 export and p4 replicate did not properly handle journal
	    file positions > 2Gbytes.  Fixed.

	#229380 (Bug #37147) *
	    Significant delays occur on Windows 64 bit platforms when
	    using PowerShell with a current directory of a remote mount point.
	    Fixed.

	#229048 (Bug #37229) **
	    'p4 shelve' could get confused if during its operation a 
	    concurrent revert of the same data is executed.  Now the
	    the shelve command issues a warning message and terminates. 

	#228752 (Bug #37144) **
	    'p4 filelog -c' would incorrectly display all revision history
	    rather than starting with the revision created by the changelist
	    for each file submitted.

	#227737 (Bug #37083) **
	    'p4 export -r' would not properly return large trait journal
	    records.  Extra newlines were added which would prevent
	    journal recover from working.  'p4 replicate' was affected
	    by this also.  Fixed.

	#227563 (Bug #36959) **
	    'p4 diff -du' in some cases, where files from the workspace
	    were deleted through the OS, would segmentation fault..

	#225273 (Bug #36644) **
	    'p4 job' would allow saving a job with a required field
	    of type 'line' even if the field had not been set. This
	    has been fixed to fail to save the job in this situation.

	#223167 (Bug #32018, #33885) **
	    'p4 integ' could produce non-optimal results when processing
	    a branch view and a protection table that have many embedded
	    wildcards. Typically this manifests itself by ignoring previous
	    integration history and files that are synced on the client.
	    This condition is now correctly detected and an error message
	    output to the user.

	#222817 (Bug #32962) **
	    Some complex client views, when combined with other internally 
	    generated views create a map with more than 10 wild card
	    combinations.  These may crash the server, or fail to match
	    filepaths when they should. This change detects the overflow
	    and returns an error.

	#222762 (Bug #36460) **
	    Commands logged by a unicode mode server into the log file
	    with long argument lists would elude the argument list, but
	    that did not understand multi-byte characters and would
	    corrupt characters around the eluded bytes.  Fixed.

	#222207 (Bug #36364) **
	    Editing of a job would fail if the job contains a read-only 
	    timestamp within the repeated hour of the Fall time change.

	#222099 (Bug #35887) **
	    p4d could crash if an archive rcs file was missing a final
	    '@'.  Fixed.

	#221032 (Bug #34579) *
	    p4 set command would not always find configuration files if
	    the P4CHARSET is set to shiftjis and certain characters
	    are in the current directory path.
 
	#219888 (Bug #28251) **
	    Utf16 files submitted by clients older than 2007.2 could
	    be wrongly stored on the server.  These old clients are
	    no longer permitted to submit utf16 files.

	#219031 (Bug #34607) *
	    On Windows platforms, files with unicode characters in their names
	    are not created with their correct names if the P4CHARSET is
	    set to a unicode charset other than utf8.  Fixed.

	#218555 (Bug #19487) **
	    The server consistency checker 'p4d -xx' would report missing
	    spec and remote depot entries during the 'db.have vs db.rev'
	    check.  This fix ignores db.have entries that originate from
	    spec or remote depots.

	#217700 (Bug #24167) **
	    'p4 obliterate' of a spec depot file would not remove the
	    archive file content.  Fixed.

        #217455 (Bug #35714) **
	    'p4 submit' of a ktext file through a proxy when the ktext
	    file was integrated from another file which is not in the
	    proxy's cache would cause the refresh of submitted keyword
	    expanded files to fail with an Illegal operation error.
	    The submit would succeed but a subsequent sync would be
	    needed to update keyword expanded files.  Fixed.

	#217426 (Bug #13033) **
	    On a non-unicode enabled server, the 'unicode' file type is not
	    supported. As from 2009.2, users can no longer submit 'unicode' 
	    files.  Therefore the file type must be changed to 'text' before 
	    submission.  (Prior to this change unicode files were treated the
	    same as text when the server was non-unicode anyway).

	#213786 (Bug #35361) **
	    The 'p4 changes' command now completes if the number of 
	    changes is greater than the setting for maxscanrows.  
	    The maxscanrows check has been disabled for the db.change 
	    table on this command when no filepath is specified. 
	    Excessive scanning of other tables is still enforced, however.

	#213783 (Bug #35349) * ** ***
	    Too many flag arguments to a command can no longer cause
	    a server or client crash.  Now limited to 20 flag arguments.

	#207848 (Bug #34239) **
	    The 'p4 group/change/depot/license' commands no longer
	    crash the server if a custom field has been added to
	    the top of a spec definition (using the undocumented
	    "p4 spec" command). 

	#202956 (Bug #308, #14219, #14859, #18403) **
	    The 'p4 diff' command flag '-du' (unified diff output)
	    now produces diff files that are compatible with 
	    patch. This fix changes the diff output to be compatible
	    with patch; adds correct handling of lines that don't
	    with a newline; and improves handling of added and 
	    deleted files. Note: patch generally lacks features
	    to create or delete files, so this fix only empties 
	    files, it does not delete them.

	#199648 (Bug #33644)
	    The 'p4 fstat' flag '-mN' is now compatible with the
	    "-F <filter>" flag,  and no longer returns too few results.

	#199356 (Bug #23215, #28804, #32354, #33268) **
	    'p4 group' now allows a member name to be used for more
	    than one type in a group. Previously, the same member
	    name could only be specified as either a subgroup, owner,
	    or user. Also, an owner was also automatically made a user
	    member of the group.  Now the same name can be used in any
	    combination of user, owner and/or subgroup. Also, a group
	    owner must be explicitly made a member by adding the
	    name to the Users field.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2009.1

	#177023 * **
	    The new 'p4 move' command allows for better support for
	    renaming files.  A file must be already opened for 'edit'
	    or 'add' in order to be moved.  Moved files can be synced,
	    resolved and diffed against the repository just like files
	    opened for 'edit'.  See 'p4 help move' for more info.

Minor new functionality in 2009.1

	#205042 (Bug #25229) **
	    Password strength checking was not done for unicode
	    mode servers.  With 2009.1 this checking is performed.
	    Passwords will still need a roman letter in addition
	    to unicode characters, that is they can not be purely
	    non-roman letters.

	#205034 (Bug #31826) **
	    Most metadata tables will now have 50% more pages cached
	    by default.

	#195179 (Bug #1141, #13396, #17288) **
	    Support for external archive access with new 'archive' trigger
	    and new +X filetype modifier.  For files with the +X storage
	    modifier, the server will now run a command defined with the
	    'p4 triggers' command to access the file's content in the
	    server archive.  Note that this new functionality partially
	    addresses the above mentioned bugs but not completely.  The
	    Perforce proxy does not cache +X type files: they are always
	    delivered from the server.

	#194895 **
	    Multiple fix, form, or auth triggers with the same name 
	    will now all be run.  Previously, only the first would be
	    run.  That was consistent with change triggers, but an
	    unneeded restriction.

	#193862 (Bug #25041) **
	    Change p4 delete to allow 'virtual delete' -- deletion 
	    of files in the depot without first syncing them into the 
	    client workspace. Implemented with a new flag, -v.

	#191989 (Bug #27021) **
	    The new 'p4 logtail' command returns error log data to 
	    the client with an offset value for getting updates. 
	    See 'p4 help logtail' for more information.

	#191795 (Bug #18774, #27387) **
	    The limit on RCS files of 1.5GB has been lifted, and p4d
	    now supports arbitrarily large RCS files on server platforms
	    that support 64 bit file sizes (most all nowadays).  Further,
	    the limitation of 50M lines on any single revision has also
	    been lifted.  RCS files are used by p4d to store text files
	    revisions.

	    It is still a better idea to treat very large text files
	    as type 'ctype' (so that they are stored as compressed text
	    files on the server), but the regular text type may now be
	    used for any size file -- it may just be slower than ctext
	    to access a large RCS archive.

	#191373 **
	    p4d journal commands such as 'p4d -jr' will now honor the
	    -q flag to suppress messages.

	#190670 **
	    Commands with no revision specifier (head revision only) will 
	    see an improvement in the compute phase time. By reducing the 
	    amount of internal record copying lock times of certain 
	    commands have been reduced as much as 10%.

	#190515 **
	    'p4 submit' now batches database updates during the transfer
	    phase.  This change improves concurrency by reducing the number 
	    of lock requests.

	#190322 **
	    'p4 edit', 'p4 integ' and 'p4 revert' updates to database
	    tables have been improved by dynamically changing the batch
	    size. Previously the number of rows updated was fixed at 100.
	    In this release the update batch size is adaptively increased
	    when the database tables are busy.

	#189833 **
	    The performance of 'p4 edit' has been improved by batching 
	    its updates to benefit from the internal cache and a reduction 
	    in lock requests.  

	#189522 (Bug #32565) **
	    Modify fstat to report adds by other users when two users
	    have the same depot path open for add at the same time.
	    Prior to this change only 'p4 opened' reports this. Now fstat
	    generates a similar message.

	#186609 **
	    'p4 filelog' will automatically follow the history of files
	    that were renamed with the new 'p4 move' command.

	#183505 (Bug #6603) **
	    A new flag '-u user' for 'p4 opened' restricts the output
	    to files opened by the specified user.

	#175099 (Bug #21832) **
	    A new option '-z' for 'p4 verify' allows the user to choose
	    to skip verifying any duplicate archive files for that
	    command. Note that the output may report a lazy copy
	    revision if it happens to be the first revision in the
	    sort order to access a common archive file. That may
	    be confusing, but it's correct behavior.

	#166067 (Bug #30784) **
	    A new flag '-T fields' for 'p4 fstat' allows the user to choose 
	    which fields are included in the fstat output.
	    See 'p4 help fstat' for more info.

	#174443 (Bug #31190) **
	    A new flag '-t' for 'p4 labels' allows the user to choose to
	    output the date and time of the label instead of just the 
	    date.

Bugs fixed in 2009.1

	#247476 (Bugs #34562,#36123) **
	    Recovering from a journal which was truncated, or which was
	    unreadable due to I/O errors, could result in a crash instead of
	    an error message describing the journal file problem. Fixed.

	#216895 (Bug #35295) **
	    'p4 revert' of a moved file could sometimes leave the client
	    with the 'move/delete' half of the rename.  Fixed.

	#212299 **
	    A 'change-commit' trigger could be erroneously fired during 
	    submit even though the target file had been reverted.  This
	    would only happen if the files were submitted with the option 
	    'revertUnchanged'.  (Bug #34819).

	#208500 (Bug #34730) **
	    The Perforce Server on Linux (32-bit) would fail to
	    start or log errors if a database file exceeded 2 Gbytes.
	    This platform has been fixed to correctly support large
	    files.

	#205435 (Bug #32494) **
	    On certain platforms (Linux, Solaris), the client/server
	    connection could hang due to deadlock.  This change lowers
	    the 'himark' (buffer value) to prevent this.

	#205388 (Bug #34466) **
	    'p4 filelog -m -i' was inconsistent in its output, this has
	    been fixed.  Previous versions would define 'maxRevs' on
	    revisions of files output rather than the files specified
	    on the file[rev] argument.  Users requiring the old behaviour
	    for scripts or applications can set the protocol variable 'api' 
	    to a pre 2009.1 value for example -Zapi=64.

	#205051 (Bug #32792) **
	    p4 resolve would report incorrect keyword differences
	    if either the base or theirs files were ktext files
	    which were branched from text files which had expanded
	    keyword fields as their original text forms.
	    Fixed by explicitly removing keyword expansion from ktext
	    base and theirs files during resolve.

	#200645 (Bug #33896) *
	    Tagged output (or other than C++ apis) from 'p4 jobs'
	    against a unicode server with user defined fields which
	    are not translatable into the P4CHARSET could crash
	    the p4 command line or other p4 api programs.

	#200638 (Bug #33983) *
	    p4 set would not allow the P4CHARSET variable to be cleared on
	    Windows platforms.  It could be set to 'none' however.  Fixed.

	#199805 (Bug #32202) **
	    The fstat filter flag '-F' operators '<' and '<=' were reversed
	    in their operation behavior,  this has been fixed.

	#199277 (Bug #33645) **
	    The fstat flag '-r' (reverse order) would not reverse output
	    when used with the '-Sr' (sort by revision).  This has been
	    fixed.

	#192904 (Bug #32200) **
	    'p4 obliterate' was not providing accurate journal information
	    for non-key record data.  Although this doesn't break journal 
	    replay,  it has been fixed for improved accuracy and diagnostic 
	    benefits.

	#192695 (Bug #14789) **
	    'p4 info' now reports the server IP address from the 
	    license file if it is available.

	#188592 (Bug #28540) * **
	    'p4 add' upon detecting a text file assigns the filetype
	    'text'.  This is not optimal for large files.  The default
	    will change to 'ctext' if the added file is greater than
	    10MB.

	#188212 (Bug #28268) *
	    Undocumented 'p4d -jds' crash fixed.  This operation is
	    still not meant for regular production use.

	#168530 (Bugs #6390, #31344) *
	    'p4 revert' would fail to revert a file if the type changed
	    from symlink to text (or visa versa) and the contents remained 
	    unchanged.

	#186041 (Bug #32335) * 
	    'p4 -R' would crash when reading strings with lengths in
	    the ranges: 128-255, 32768-65535. This has been fixed.

	#182939 (Bug #31755) *
	    The 'p4' command would search for a P4CONFIG file from
	    the real current directory prior to the directory
	    specified with the '-d' option which could cause
	    automounter problems.  Fixed.

	#176992 (Bug #31375) **
	    'p4 obliterate -y' would fail to purge a revision 
	    immediately prior to a deleted revision as a result of a
	    bug introduced in 2008.1. This has been fixed.

	#172617 (Bug #31503) **
	    The server could crash if the db.trigger table was locked when
	    accessed. This could happen if, for instance, the files were 
	    opened by anti-virus programs examining them. Fixed.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2008.2

	Support for Zeroconf (service registration and discovery) * ** ***

	    Perforce servers can now register their service using multicast
	    DNS. The service type for the server and proxy is '_p4._tcp'.  
	    By registering a human-readable name as a service it is
	    possible to browse for perforce servers using standard DNS
	    service discovery utilities.

	    example register

	    % p4d -0 -In "artists store" -p 4211 -r /usr/dep/art

	    example browse (using bonjour dns-sd utility)

	    % dns-sd -B _p4._tcp

	    Timestamp     A/R Flags if Domain   Service Type  Instance Name
	    15:00:03.330  Add     3  4 local.   _p4._tcp.      graphics-dev
	    15:00:03.330  Add     3  4 local.   _p4._tcp.      code-dev

	    The perforce command line also has a built-in browse command
	    'p4 browse'.  

	    To establish a connection to the server using the human
	    readable name,  simply use it where you would usually specify
	    P4PORT.

	    example connect

	    % p4 -p "artists store" info

	    Although this works seamlessly on Mac OSX most platforms will
	    require some software installation or configuration to make 
	    use of this new feature.  Note on linux and freebsd perforce
	    dynamically loads the avahi implementation for zeroconf services
	    rather than apple's bonjour implementation.

	    Registration is available also with p4p, p4ftp and p4web. 

	    Note:  Authentication will not succeed through any process that
	           sits between the client and the server. This restriction
	           is required to prevent unauthorized server access. 
	           (consequently registering p4p is generally of little
		   use). This restriction is also true when trying to
		   connect to old 2007.3 servers, since they do not have
		   the extra security protocol support.

Minor new functionality in 2008.2

	#165397 (Bug #30393) * **
	    'p4 -z tag', which produces 'tagged' output like 'p4 fstat'
	    is now supported.  It has long been present but undocumented.

	#163750 (Bug #29931) **
	    'p4 admin' has new command options to report the sizes of
	    the db tables, journal and log files. 'p4 admin dbstat -s'
	    reports the sizes of the db tables. 'p4 admin logstat' 
	    reports the sizes of the journal, error log (if it exists),
	    and audit log (if it exists).

	#163087 (Bug #8941) **
	    'p4 changes @change,@change' and 'p4 changes
	    @datetime,@datetime' have been sped up by using the db.change
	    table directly.  Apart from generally being much faster,
	    commands with this syntax will also report changes that have
	    no files attached due to obliteration.

	#161413 (Bug #29930) **
	    'p4 sizes' has a new flag (-z)  which will ignore lazy copies
	    when summing up the file sizes for a path.

	#159758 (Bug #26621) **
	    A new flag '-F filter' for 'p4 fstat' allows the user to limit 
	    the output to files satisfying the expression given as
	    'filter'.  See 'p4 help fstat' for more info.

	#156356 **
	    'p4 sync' locking has been changed to improve concurrency 
	    during very long compute cycles.  The new algorithm allows
	    for early release of locks on the db.have table.  The
	    combination of this change and #155509 should result in
	    less demand for the lock on the db.have table.

	#155509 **
	    'p4 sync' updates to the db.have table have been improved by 
	    dynamically changing the batch size.  Previously the number of
	    rows updated was fixed at 100. In this release the update batch
	    size is adaptively increased when the db.have table is busy.

Bugs fixed in 2008.2

	#189734 (Bug #32494) **
	    The new tcp buffer calculation could cause a deadlock in
	    client/server communications.  This problem was only detected
	    on configurations involving Solaris or Linux.  Due to the
	    complications of platform specific tcp implementations the
	    algorithm has been reworked to make allowances for certain
	    eccentricities. 

	#188676 (Bug #32384) *
	    'p4 resolve' using the automatic option could crash the client
	    application when running on windows.  This would only happen
	    if the 'theirs' file had been locked by another windows
	    application e.g. microsoft word.

	#188603 (Bug #31933) **
	    A user with a complicated view map could crash the server
	    by creating a spec using '-i' or editing a spec to use
	    a name which contains '%%<somenumber>'. This has
	    been fixed.

	#187408 (Bug #32247) **
	    'p4 opened -C' with a non existent client spec causes the server
	    instance to terminate abnormally.  Fixed.

	#185697 (Bug #32178) *
	    'p4 browse' could return an invalid error message when no
	    Perforce services were available.

	#185416 (Bug #32266) *
	    Setting P4CHARSET via 'p4 set' on Windows platforms
	    to an invalid value could not be reset to a correct value.
	    Fixed and P4CHARSET setting restricted to legal values.

	#185329 (Bug #32255) **
	    Submitting a keyword expanded file (+k) which was integrated
	    to and resolved with an ignore (-ay) might falsely trigger
	    the tamper check reporting and fail to submit.  Fixed.

	#185198 (Bug #32138) *
	    'p4 login', and 'p4 passwd' did not work on AS/400 and MVS
	    due to problems in ASCII/EBCDIC conversion. This problem has
	    been corrected.

	#187080 (Bug #31946, #32428) * **
	    'p4 admin dbstat -s' and 'p4 admin logstat' could report
	    negative file size when the file size exceeds 2GB. This has
	    been fixed.

	#184476 (Bug #31737) **
	    Excessive wildcard use in client views could crash the
	    ntx64/p4d server under circumstances that would be handled
	    correctly by the ntx86/p4d server. It was discovered
	    that the 64-bit version of the windows server requires more 
	    stack space to perform commands involving excessive wildcard
	    usage in client mappings. This has been resolved so that the 
	    ntx6/p4d process behaves similarly to the ntx86/p4d.
	    
	#181214 (Bug #31771) **
	     'p4 fstat -F' with a filter that contains a not (^) crashes
	     the Perforce server. This has been fixed.

	#183252 (Bug #31952) **
	    A failure to open a temporary file during submit of a
	    compressed file could lead to a server crash.  This problem
	    could occur on a windows server only.  Fixed.

	#168149 (Bug #30403) **
	    'p4 admin updatespecdepot' had a memory leak. This has
	    been fixed.

	#167560 (Bug #30910) * **
	    'p4 resolve' run interactively with 'accept theirs' after
	    a 'p4 integrate -t' which will change the target file type
	    from symlink into something else did not record the new
	    file type properly such that a following 'p4 integrate -f -t'
	    followed by 'p4 resolve' would produce an error.  Fixed.
	    If an old client is used with a new server in this case,
	    the resolved file will be left read-write when it should
	    be read-only, using a new client prevents this.

	#166870 (Bug #30750) **
	    'p4 annotate -i' using a revision range erroneously applied
	    that range to the source as well as the target. Now the range
	    is correctly only applied to the target, and the data
	    originating from the source will now be credited from all
	    of its revisions.

	#165299 (Bug #18774) **
	    The 1.5GB maximum size for an RCS checkin has now been imposed
	    on non memory-mapped I/O available systems. Some 64-bit
	    platforms could exceed the maximum which would make file
	    archives incompatible.

	#165270 (Bug #30647) *
	    'p4 sync -f' would fail to update the db.have table correctly
	    if a previous refreshed file had encountered an error.  This
	    has been fixed.

	#165134 (Bug #30569) **
	    'p4 submit -t' would still submit a changelist even though
	    one of the files had been tampered with and reported to
	    the user.  This has been fixed.

	#164667 (Bug #26025) *
	    'p4 tickets' would report garbage characters if p4v was
	    used to login via a ticket and the server is in unicode mode
	    with a P4CHARSET not utf8.  This fix causes the user name
	    in the ticket file to always be stored in utf8 and translated
	    as needed to P4CHARSET.  Ticket entries from old clients
	    may no longer be compatible as they may have been stored
	    with other character encodings than utf8.  When a
	    character in the ticket file can not be translated it
	    will now appear as '?'.

	#164511 (Bug #30640) **
	    'p4 diff -sb' could sometimes return a confusing error: 
	    "Can't find  in depot map",  this has been fixed.

	#164280 (Bug #29205) **
	    Multiple integrations and resolves where an earlier resolve
	    required an edit and the later resolve(s) were 'accept yours'
	    could falsely trigger a tamper check error.  Fixed.

	#164153 (Bug #30136) **
	    'p4 edit -t <filetype>' was not changing the mode of
	    the file immediately as it had in 2007.2 and earlier.
	    Fixed.

	#163731 (Bug #29609) **
	    'p4 annotate' using a revision range scanned the db.rev
	    table beyond the file being annotated. This has been fixed.

	#163482 (Bug #15660) **
	    The Spec depot now handles spec names with characters in
	    them that are illegal characters in the spec depot 
	    filesystem.  For example ':' is a legal character for 
	    a client workspace name but is an illegal character on
	    a windows filesystem.

	#163028 (Bug #29993) **
	    Tagged output for 'p4 counter' did not report the value
	    of the counter being set. This has been fixed.

	#162617 (Bug #30352) **
	    Tagged output for 'p4 groups -v' caused a memory leak.
	    This has been fixed.

	#162324 (Bug #30404) **
	    'p4 admin lockstat' caused a small memory leak.  
	    This has been fixed.

	#161719 (Bug #30247) *
	    'p4 login user' against a unicode enabled server would
	    overwrite the originating users ticket rather than generating
	    a new ticket for the supplied user.  This has been fixed.

	#161285 (Bug #30304) **
	    The metadata btrees may lose track of a free page
	    when a row delete causes several levels of btree nodes
	    to be freed.  This is very rare and does not damage
	    the data stored in the btree file.  Fixed.

	#159549 (Bug #29916) **
	    'p4 info' using tagged protocol now reports the client's
	    current working directory.

	#158730 (Bug #29951) *
	    'p4 login' could create multiple ticket entries in the
	    Perforce ticket file for the same user. This would happen
	    when executing multiple logins (mixed case username)
	    against a case insensitive server (windows).  Fixed.

	#157167 (Bug #10490) **
	    'p4 labelsync' and 'p4 tag' now only require 'list'
	    permission.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2008.1

	Performance improvements - #135973, #149641, #148921 **

	    1) Server Lock acquisition

	        The algorithm to lock database tables has been changed to
	        prevent wedging.  Some commands,  for example 'p4 client
	        -d' need to writelock a large group of tables.  Previous
	        server versions acquired locks in a blocking fashion.  This
	        new algorithm will release previously acquired locks if
	        another command is holding onto a lock which would cause it
	        to block. After a third attempt to acquire the necessary
	        locks in this fashion fails,  the command will fallback to
	        a blocking mode.

	    2) Connection protocol * ***

	        TCP connections between Perforce processes; clients,
	        proxies and servers, now discover network buffering levels
	        and make better use of that buffer space.  Performance
	        should be improved especially for long proxy to server
	        connections.

	    3) Proxy compression (Bug #16398, #28490) ***

	        Uncompress of binary files can be done on the client
	        instead of the server when the proxy is in use.  Both the
	        server and new proxy are required.

	Command improvements - #138839, #145664, #144624, #149074 
			       (Bug #9314, #28223, #26563, #27706,
			       #28452) **

	    1) 'p4 fstat'

	        'p4 fstat' has been optimized to reduce memory allocation
	        and improve performance.  The result of this optimization 
	        is a 40% decrease in memory usage and a 30% speedup of the 
	        compute phase.

	    2) 'p4 changes'

	        'p4 changes -m max <filepath>' optimization has been
	        improved for this release.  Performance of this command is
	        now less dependent on filepath depth or number of changes
	        specified.  The new algorithm makes use of a field in the
	        db.change table, which is calculated on submit or (for
	        existing changes) by a 2008.1 upgrade.

	    3) 'p4 integrate'

	        'p4 integrate' has been sped up (again), markedly in cases
	        where there is much integration history between the source
	        and the target.

	    4) 'p4 obliterate'

	        'p4 obliterate' has been sped up, sometimes significantly,
	        when obliterating many files in a repository with a large
	        db.archmap table.  (Tested with db.archmap with >100,000
	        entries.)

	New admin command - #137848 **

	        New command 'p4 admin lockstat' reports the read or write
	        lock status for each database table.

Minor new functionality in 2008.1

	#152278 **
	    'p4 protect' now allows specification of permission 'rights'.
	    Previously, 'p4 protect' only allowed using permission levels 
	    which include the specified access (ie 'read') and also all
	    of its lesser permissions (ie 'read' = 'read' + 'list').
	    Permission rights make it possible to deny individual rights
	    without having to re-grant lesser rights.  The new 
	    permission rights are '=read', '=branch', '=open',
	    and '=write'. This functionality was previously undocumented,
	    and is now fully supported for 2008.1.

	#151491 (Bug #2362, #18057, #19935) **
	    'p4 group' fields MaxScanRows, MaxResults, MaxLockTime,
	    and Timeout now use the value 'unlimited' to specify no
	    limit for a parameter regardless of the limits 
	    imposed by a user's other groups. The value of 'unset'
	    is used to specify no limit, but this will be
	    trumped by any other limit for that parameter imposed by
	    a user's other groups. Old group specs with this server
	    will have the values of 'unlimited' replaced with 'unset',
	    and members of all groups should have the same behavior
	    as before. Similarly, Timeout of '0' will be replaced
	    with 'unset', and also '0' Timeout will no longer be
	    allowed for this field (use 'unset'). 

	#150806 (Bug #6554) **
	    A new flag '-e nameFilter' for 'p4 labels/clients/branches'
	    allows the user to limit the query using wildcards. This is
	    very useful for sites that have a large collection of these
	    domains.

	    e.g.  p4 labels -e "*sep*2000*" //depot/main/releases/...

	#146787 (Bug #26473) **
	    'p4 triggers' can now make triggers on 'p4 triggers'.
	    Previously, triggers were specifically excluded to avoid
	    trouble.  If a broken trigger is installed that prevents
	    the 'p4 triggers' command from working, the only recourse
	    is to rename or remove the db.triggers file from the
	    server root directory.

	#146678 (Bug #9471) **
	    'p4 jobspec' can now specify the default status for fixes
	    created by 'p4 fix' and 'p4 change'.  (It had been hardwired
	    to "closed".)  This default status is given in the jobspec's
	    Presets value for the Status field, as an optional 2nd value
	    preceded by the string "fix/", e.g. "Status open,fix/fixed"
	    makes the default value for job status "open" but fix status
	    "fixed".  The fix status replaces the job status when the
	    associated change is submitted.  The new special fix status
	    "same" leaves the existing job status in place.

	#146676 **
	    'p4 fix' and 'p4 fixes' now report the job status associated
	    with the fix in all cases.  Previously the status was
	    suppressed if it was the status "closed".

	#141168 (Bug #1340) **
	    'p4 info' now reports the uptime of the Perforce Server.

	#140525 (Bug #27198) **
	    The performance of 'p4 revert' has been improved by batching 
	    its updates to benefit from the internal cache and a reduction 
	    in lock requests.

	#140369 (Bug #27287) **
	    Change-commit triggers now use a new script variable,
	    oldchangelist, to report the pre-commit changelist number.

	#138643 (Bug #6096) **
	    Counters managed by 'p4 counter' can now be any string, not
	    just a number.

	#137438 **
	    After a submit has completed,  ktext files need to have
	    their digest and size recalculated.  Previously updates
	    of the db.rev and db.revhx tables happened individually 
	    for each file. These updates are now batched.  This change 
	    results in fewer lock requests,  potentially improving the
	    total elapsed time for submit.
	 
	#139128 (Bug #26301) **
	    'p4 fstat' has two new flags.  The '-S' flag is used to request
	    a different sort order for output.  The '-r' flag will reverse
	    the output order.  See 'p4 help fstat' for details.

	#134117 **
	    New server identification startup flags:

	    p4d -In <name>
		Specify a unique identifiable name for your server.  
	        This name is visible with 'p4 -ztag info' output.

	    p4d -Id <description>
	        Specify an identifiable comment for your server.  
	        This description is visible with 'p4 -ztag info' output.

Bugs fixed in 2008.1

	#179182 (Bug #31775) **
	    'p4 sync -p' via the proxy did not transfer files which
	    were not in the proxy's cache.  Fixed.

	#175236 (Bug #31596) **
	    When using the proxy, 'p4 print' of binary files without
	    the '-o' flag would be output as compressed and possibly
	    output twice in a row.  Fixed.

	#174121 (Bug #31547) **
	    'p4 monitor' with the options '-a' or '-ae' could crash the
	    Perforce server (on windows only).  This has been fixed.

	#171553 (Bug #29148) **
	    'p4 integrate' has been modified so that changes which have
	    been copied out of and back into the same branch will now be
	    candidates for re-integration into other branches.  This
	    should make synchronizing branches after forced integrations
	    easier, at the cost of scheduling extra integrations in some
	    cases.

	#168144 (Bug #30753) *
	    Shell wildcard expansion on Windows can once again be disabled
	    by double quoting arguments.

	#164029 (Bug #30616) **
	    Using 'p4 -x' with many thousands of files would take longer
	    due to an optimization that was made for the more general
	    use of Perforce.  This optimization became a penalty for
	    single file operations.  Fixed.

	#161164 (Bug #30289) **
	    'p4 admin lockstat' had a protocol error which caused 
	    p4v (and possibly other client applications) to generate 
	    incorrect results if used jointly with another command
	    using tagged output. This has been fixed.

	#160022 (Bug #29974) **
	    The new tcp buffer calculation could be too aggressive
	    on some platforms (causing a deadlock in client/server
	    communications).  The algorithm has been tweaked to 
	    prevent this from happening.

	#158746 (Bug #29943) **
	    Change #153657 introduced a regression that could cause
	    'p4 integ' to scan the db.integed table excessively.
	    This has been corrected.

	#156864 (Bug #29811) **
	    'p4 integrate' of temporary files followed by 'p4 resolve -at'
	    done multiple times with the same target file before a
	    submit would not submit the final resolve but instead
	    the first resolved file.  Fixed.

	#156771 (Bug #12510) **
	    Commas are no longer allowed as part of branch, client,
	    depot, or label names. Existing entities containing
	    commas in their names can still be accessed, but no new 
	    clients, branches, depots or labels can be created with 
	    commas in their names.

	#154569 (Bug #29250) **
	    'p4 user -f' or 'p4 user -f -i' would allow creation of
	    new users with all-numeric user names. This has been
	    fixed to work as intended, which is to disallow 
	    all-numeric user names.
 
	#153657 (Bug #20413, #29176) **
	    'p4 integrate' has been adjusted to detect when a revision
	    has been integrated out and then back into the same file,
	    and to suppress integrating the later revision into another
	    file if the original revision has already been.  

	#152854 (Bug #28635) **
	    The proxy was storing revisions which were lazy copied
	    between different local depots in multiple locations.
	    Fixed.

	#149573 (Bug #25380, #28412) **
	    'p4 change -u' no longer requires both the username and 
	    workspace of the user to match those of the owner of the 
	    submitted change. Now only the username needs to match.

	#149297 (Bug #22108) *
	    'p4 set' will now report on the P4POPTIONS variable.

	#149109 (Bug #28605) **
	    Editing a client spec form with 'p4 client' can reset
	    'LineEnd' or 'SubmitOptions' to their default values.  This
	    problem only occurred if the 'Options' field was processed
	    after either of the other two (usually through the api).

	#147069 (Bug #25357) **
	    'p4 obliterate' now purges archive files in numerical order
	    rather than alphanumeric.  Removing RCS revisions in the
	    correct ascending order is much faster.

	#146485 (Bug #13892) **
	    p4d will now report a non-zero exit status and a summary
	    error message of journal files skipped due to recovering
	    those files out of sequence.

	#146472 (Bug #26042) *
	    'p4 set' on the Windows platform did not always find the
	    right P4CONFIG file when the P4CHARSET is set to shiftjis.
	    Fixed.

	#144699 (Bug #27493) **
	    'p4 sync' to a deleted revision using tagged protocol no
	    longer reports a bogus file size in its summary data.

	#142417 (Bug #452, #2061, #6339, #10563, #20914) **
	    'p4 integrate' and 'p4 diff2' could produce misleading error
	    messages when trying to explain why there was no output.
	    The most common message was 'No target files in both client
	    and branch view.'  Now this message has been augmented with
	    a number of more specific error messages, and the correct
	    argument (source file or target file) is displayed with the
	    error message.

	#142061 **
	    A user with only an unmapping access line in 'p4 protect'
	    (e.g. 'list user * * -//...') could still cause a license
	    to be consumed.  Now such a user gets the same response
	    ("Access for user 'xxx' has not been enabled by 'p4
	    protect'.") as with no access at all.

	#141985 (Bug #26279, #23447, #22998, #18164, #16797, #13491,
	         #26793) **
	    'p4 help' for diff, diff2, describe, annotate, and resolve
	    have been updated to clarify the usage and behavior of 
	    -d<flags> and -s<flag> diff options. The server's usage messages 
	    have also been updated.

	#141042 (Bug #3539, #5899) **
	    Users may now revert their own files so long as they have at 
	    least "list" permission on the files to be reverted.
	    Previously 'p4 revert' required at least "open" permission to
	    revert files.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2007.3

	Ability to specify group owners - (Bug #1591, #9600) **
	
	    'p4 group' has a new 'Owner' field which is used
	    to specify users allowed to modify the group
	    spec without SUPER permission. Owners may change or
	    even delete a group via the new 'p4 group -a' 
	    command. Owners are members of their owned group, 
	    but with enhanced privilege to also administer the group.

	Performance improvements - #122007, #124181, #124726,
                                   #128272 **

	    'p4 integrate' locking changes.

	        To improve concurrency during very long complicated 
	        integrate compute cycles,  database queries have been 
	        modified.  The new algorithm allows for early release 
	        of locks on the db.working, db.have, db.locks and 
	        db.resolve tables.  Besides a significant reduction 
	        in the time that "update" commands have to wait, the 
	        overall elapsed time for a branch has been reduced by 
	        as much as 25%.

	    'p4 submit' locking changes.

	        A rewrite of the commit phase for 'p4 submit' in a 
	        previous version improved concurrency for a number 
	        of commands.  This has now been extended to commands 
	        that make use of the db.counters table.  For example
	        'p4 change' can run concurrently during the first
	        (and longest) commit phase of a large branch submit. 

	    'p4 sync' locking changes.

	        Sync has been modified so that during its compute
	        phase it is less likely to block commands that need
	        access to the db.resolve table.  This allows commands
	        like 'p4 revert' to operate during this time.  Also
	        initial syncs or 'p4 sync -p' operations will no longer
	        read lock the db.have table,  thus allowing concurrent
	        syncs update access to this table.
	
	    'p4 labels' locking changes.

	        When used with a file argument 'p4 labels' attempts to
	        cache all of the file db.rev data so that the lock on that
	        table can be released early.  Sites that have a very large 
	        number of labels and run 'p4 labels <filepath>' will no 
	        longer wedge the server,  only 'p4 labelsync' commands 
	        will have to wait.

	    Cache management change.

	        Caching of disk pages has changed. Pages are written
		earlier to avoid writing too many pages together
		when table locks are released.  This also reduces
		memory and cpu usage by the metadata cache system.

	    TCP buffering change.

		Perforce clients, servers, and proxies will attempt
		to increase TCP send and receive buffers to 32Kbytes
		if those buffers are less than that amount.  This can
		improve network performance on high latency networks.

Minor new functionality in 2007.3

	#132766 (Bug #6964) **
	    'p4 sync' and 'p4 integ' with large data sets and large
	    protections tables now consume less CPU than before.

	#132360 **
	    Protections have been tidied up in a few odd cases: 'p4 dirs
	    -H', 'p4 have', 'p4 labelsync', and 'p4 opened' now require
	    having 'list' access.

	#130733 (Bug #25273) **
	    'p4 groups -v [group]' provides summary data for the named
	    group, much like 'p4 users [user]'.

	#130372 (Bug #7546) **
	    Trigger standard output is now passed to the client on success
	    as well as failure.  As previously, on trigger failure an
	    error is sent to the client with the standard output embedded.
	    Now, on trigger success a message is sent to the client with
	    the standard output, unadorned.  Previously the output was
	    discarded on trigger success.  Users can force the old
	    behavior by setting the "api" protocol level to 61 or less
	    with 'p4 -Zapi=61 <command>'.

	#129728 **
	    'p4d -jc' and 'p4d -jj' now only hold read locks on the
	    database files, allowing read operations in the server to
	    continue.  The db.counters file is still locked, as it is
	    updated.

	#129045 (Bug #10866) ** ***
	    Proxy will now cache files as they are submitted
	    through the proxy.  A new cache validation system
	    based on MD5 signatures is being used.  If a new
	    proxy is working with an old server, the old timestamp
	    validation is used.  Recommend running "p4 verify" to
	    assure that the p4d server has MD5 signatures computed
	    as the proxy will not validate its cache for revisions
	    which the p4d server does not have an MD5 signature.

	#127926 (Bug #24825) **
	    'p4 filelog' now sports a '-h' option.  This option allows 
	    the user to follow 'branch from' and 'copy from' integration
	    history.  For more details see 'p4 help filelog'.

	#125001 (Bug #21537, #24909) **
	    Journal rotation with 'p4d -jc' or 'p4d -jj' is now an
	    instantaneous rename (rather than a copy) on UNIX. 
	    The -z flag (compress checkpoint/journal) still copies.

	#124026 (Bug #3372) **
	    'p4 protect' entries may now use CIDR syntax for
	    IP address specification.  For example "172.16.0.0/16"
	    would match all IPv4 addresses which start with 172.16.
	    You cannot combine wildcards with CIDR notation except
	    at the start to allow proxy or no proxy matching.

	#129897 (Bug #25366) **
	    'p4 change' now allows the user to modify the client of
	    a pending changelist,  provided there are no open files.

Bugs fixed in 2007.3

	#159007 **
	    The 64-bit windows Perforce server version now handles 
	    exceptions caused by invalid parameters. This is necessary
	    due to a change in the way that microsoft is now  handling 
	    artificial C runtime faults. (Bug #27279).

	#152382 (Bug #29016) **
	    Sometimes 'p4 integrate' would find a distant base when
	    cherry picking revisions to integrate.  Now 'p4 integrate'
	    insists that the base be the revision before the first
	    revision being integrated when cherry picking revisions.

	#152296 (Bug #28853) **
	    'p4 submit' could report "No files to submit" if the
	    combination of client mapped files and protections table 
	    exceeded an internal limit.  This limit was incorrectly 
	    reached on case-insensitive Servers (Windows) by repeated
	    values in a generated map.  This has been fixed.

	#149704 (Bug #28659) **
	    'p4 integrate' could skip integrations in the face of
	    large branch views coupled with large protection tables.
	    This has been corrected.

	#149541 (Bug #28422) **
	    'p4 integrate' could report "no permission on file(s)" if
	    the protections managed by 'p4 protect' had excessive
	    wildcards (too many ...'s in too many entries).  Now 'p4
	    integrate' should be no more sensitive than other commands to
	    the number of wildcards in protections, and in any event
	    should fail with a more appropriate message ("too many
	    wildcards").

	#145613 (Bug #27892) **
	    Change #130372 caused a server with a form-out
	    spec trigger that generates standard output upon success
	    to crash when a user issued 'p4 spec' or 'p4 jobspec'. 
	    Form-out trigger standard output upon success also caused 
	    command-line options to be ignored during execution of 
	    'p4 change', 'p4 group', or 'p4 submit' commands that fire 
	    the trigger.  This has been fixed.

	#143891 (Bug #27919) **
	    'p4 change' would take out unnecessary write locks on 
	    certain tables. This has been fixed.

	#143551 (Bug #27922) **
	    Change #142077 could cause a truncation error bug, if the
	    journal file supplied with the -J option was in a different
	    file system.  This has been fixed.

	#142077 (Bug #27607) **
	    Some Unix platforms (Solaris, HPUX, AIX) would fail trying
	    to rotate the journal file.  This has been fixed.

	#141953 (Bug 27585) *
	    Change #127617 caused P4EDITOR, P4DIFF, and P4MERGE 
	    settings with spaces to no longer be broken apart into 
	    distinct arguments on non-Windows platforms.  This has been
	    fixed.  Windows clients continue to treat all parts of the 
	    command before the first +, -, or / as an executable path.
          
	#141402 (Bug #27504) **
	    'p4 client/label/branch -d' would request write locks
	    of database tables that were not required for its
	    operation.  This has been fixed.

	#139650 (Bug #26763) **
	    Rpc inbound and outbound sizes in bytes were sometimes
	    incorrectly reported as negative when server tracking
	    had been enabled. This has been fixed.

	#139099 (Bug #25684, #24578) **
	    Rpc inbound size in bytes was incorrectly reported
	    to be zero when server tracking had been enabled.
	    This has been fixed.

	#138968 (Bug #27061) **
	    Change #119708 introduced a regression causing
	    'p4 revert -k' to fail to report results of a
	    successful revert when using tagged protocol.
	    This has been fixed.

	#137032 **
	    Upgrading to 2007.3 will rebuild db.archmap and db.view
	    (haveMap entries).  This upgrade will fix bad data which 
	    was introduced by bug #24943 and previously patched 
	    on-the-fly by change #136742.

	#136601 (Bug #26468) **
	    Failure to connect to a remote depot resulted in a
	    garbled error message. This has been fixed.

	#133838 (Bug #25794) **
	    'p4 help protects' clarifies the behavior of
	    the '-m' flag by noting that it does not report
	    exclusionary mappings.

	#133764 (Bug #26005) *
	    'p4 set -S <service>' will now print $P4AUDIT if it is set.

	#133327 (Bug #25771) **
	    'p4 submit' would let you update the changelist form with
	    files not currently open for add/edit.  Although these files
	    would be ignored, the error would not be reported.  This has
	    been fixed.

	#133189 (Bug #26009) **
	    The change #117342 introduced a regression that 
	    would prevent the use of 'p4 login' against a server
	    that failed to find a reverse DNS entry. This has been
	    fixed.

	#132920 (Bug #25968) **
	    Very small journal files concatenated together might fail
	    to replay with 'p4d -jr'.  This has been corrected.

	#130369 (Bug #25408) **
	    Issuing a 'p4 unlock' of a file which someone else was 
	    submitting might not always be detected.  This has been fixed.  

	#130219 (Bug #12532) **
	    'db.monitor' entries are not journalled but are incorrectly
	    checkpointed.  This has been fixed.
 
	#130201 (Bug #25326) **
	    Fixed memory leak on 'p4 sizes' in summary mode.

	#129956 (Bug #25373) **
	    Fixed tiny memory leak when a query string is missing
	    the right-hand side of a relational operation.

	#129950 (Bug #25347, #25371) **
	    Corrected processing of search queries which contain mixed
	    case and wildcards. Searching is case insensitive. 

	#129925 (Bug @25349) **
	    Update the spec depot and index remaining content of jobs
	    when a field contains a word which is extremely long. 
	    Note that these words will not be indexed.

	#129820 (Bug #25340) **
	    'p4 change -d' would make an unnecessary scan of the 
	    'db.working' table.  This could take a long time on 
	    large sites with many open files.  Fixed.

	#129045 (Bug #25274) **
	    'p4 sync -p' run through the proxy would update
	    the have list when the proxy needs to bring over
	    a revision from the server.  Fixed.

	#129045 (Bug #23408) ** ***
	    The proxy can effectively cache files with a zero
	    modtime.

	#129045 (Bug #22802) ***
	    'p4 -Zproxyverbose print' will now report if the proxy
	    cache was used to satisfy the command.

	#128995 (Bug #11155) **
	    'p4 protect' now describes the 'admin' mode in the
	    comments section.

	#128595 (Bug #25245, #18873, #21511) **
	    Corrected underlying issue which caused the server to
	    fail with 'integbatch: too many handles!' or
	    'syncbatch: too many handles!' errors.

	#128356 (Bug #24800) **
	    A perforce server will shutdown with the message 
	    "License expired" even when a new license with a valid
	    expire date is put in place (either manually or with
	    the 'p4 license' command).  This only happened if the
	    license that the server was originally started with 
	    became out of date.

	#128087 (Bug #17988) **
	    Failed authentication attempts are now recorded in the 
	    server error log.

	#127651 (Bug #10125) **
	    'p4 submit' of files imported from a remote depot could
	    fail with the following error:

	    Operation: dm-SubmitChange
	    Operation 'dm-SubmitChange' failed.

	    <filename> is missing from the rev table.

	    This has been fixed.

	#127617 (Bug #690, #5297, #24174) *
	    Spaces in P4EDITOR, P4DIFF, and P4MERGE are now handled
	    differently on Windows and UNIX.  On UNIX, as before, separate
	    words are treated as the command name and initial arguments.
	    On Windows, separate words are treated as the command name
	    (with embedded spaces), until a word begins with +, -, or /, 
	    which is assumed to introduce initial arguments.  

	#127480 (Bug #20986) **
	    'p4 diff2 -u' incorrectly included binary files,  which
	    could result in unreadable binary diffs.  This has been
	    changed.  Now binary files are only force diffed when
	    the '-t' option is used.

	#127031 (Bug #23377) **
	    Server audit output '-A auditlog' could also end up in the 
	    errorlog file '-L logfile'.  This was most likely to happen
	    when tracking '-vtrack=1' was enabled.

	#124983 (Bug #12956, #21593) **
	    'p4 monitor show' will no longer show stale processes.
	    Those processes that never exited correctly will have
	    their status records automatically removed from the
	    db.monitor table.

	#124936 (Bug #19911, #21506) **
	    %clienthost% in triggers will be replaced with the IP address
	    of the client if no reverse DNS entry is found.

	#124875 (Bug #16726, #18049) *
	    'p4 sync' (and other commands) could loop if the underlying
	    filesystem had certain permission combinations, such as the
	    ability to create but not chmod a file (usually on network
	    filesystems such as samba or NFS).  This has been corrected.

	#124344 (Bug #24961) **
	    Submitting a new revision to an RCS ,v file could result
	    in losing previous revisions if the file access mode had
	    been manually modified to remove the read permissions.
	    This is now prevented.

	#123740 (Bug #24900) **
	    'p4 edit' of a file synced back to a point where it
	    had a different filetype than the head revision's filetype
	    would treat the file as if it were the head revision
	    type instead of the sync'ed to revision.  This typically
	    caused problems with symlinks either by not changing
	    file modes or changing the file mode of the target
	    of the symlink.

	#121849 (Bug #24538) *
	    Negative numbers, or numbers which overflow into negative
	    numbers, are no longer allowed as changelist arguments to p4
	    commands. For instance 'p4 review -c 111111111111' against a
	    windows server would cause the changelist argument to overflow
	    into a negative value, resulting in the server consuming 
	    excessive cpu and hanging the machine. Now this no longer
	    happens.

	#121382 (Bug #24558) *
	    Pending revision entries in db.revpx, created when
	    content triggers are used, now correctly report the 
	    file's size (instead of reporting size as -1).

	 #131532 **
	    Client commands originating through proxy servers are 
	    now logged in the server and audit log files with 
	    the proxy host/client host format.  The format for the 
	    'p4 monitor show -e' now reports the client host, rather 
	    than the proxy host for these same commands.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2007.2

	New file type 'utf16' - #119109 * ** ***

	    A new filetype utf16 has been added which is a textual
	    file type which stores UTF16 client files.  These files
	    must be valid UTF16 translatable into UTF8.  When the
	    content of these files is used in command output such
	    as 'p4 diff' that content will be in UTF8.  Only full
	    file representations will be in UTF16.  This filetype
	    works with the server in non-unicode mode as well as
	    unicode mode.  If these files are sync'ed with pre-2007.2
	    clients, they will be transferred as UTF8.  If the server
	    is in unicode mode, command output with contents from
	    UTF16 files will be converted according to the P4CHARSET
	    selected.  BOMs are needed to automatically detect utf16
	    with the 'p4 add' command.  Without a BOM, a file is
	    assumed to be in client byte order.  When a file is written
	    such as via 'p4 sync', it will be written with a BOM
	    and in client byte order.

	File type modifier '+S' enhanced - #115478 (Bug #1880) **

	    The filetype modifier '+S' has now been extended to include
	    an optional numeric value that informs the server of the 
	    number of file revisions to keep.

	    e.g.  p4 add -t binary+S7 foo.exe

	    In the above example as the eighth revision is submitted, the 
	    first revision will be purged.  The numeric values supported
	    are 1 through 10, 16, 32, 64, 128, 256, 512.

	    Note that files with this filetype are never lazy copied. This
	    means that although space is saved when purging old revisions,
	    multiple branching of a file will result in more space used.

	    See 'p4 help filetypes' for more information.  

	New 'p4 sync' option bypasses db.have updates - #111247
	(Bug #22857) **

	    'p4 sync' now sports a '-p' option.  This allows the user to 
	    sync files without the server keeping track of it.  This 
	    option is very useful when populating  build clients or when 
	    publishing content when there is no requirement for saving 
	    the client workspace state.  

	Performance improvements - #114771, #113299, #117618, #115072
	(Bug #23907, #6837) **

	    1) Submit of branched files

	        Continuing on from the branch/submit improvements made in
	        the previous release.  The commit phase of 'p4 submit' has 
	        been rewritten to improve performance during large branch 
	        creation.  Most commands are now blocked for only a
		fraction of the time when compared to previous releases.
		The overall time taken to create the branch has also been
		reduced as much as 30%.

	    2) Connection protocol *

	        The Perforce connection establishment protocol and
		buffering have been adjusted to avoid the nominal 1/10th
		second delay that TCP can introduce on some operating
		systems.  In some cases, this can drastically reduce the
		time needed for a series of short commands. 

	    3) <filespec>@label,@label speedup

	        Specifying revisions using <filespec>@label,@label could
	        be really slow when there is little overlap between the
	        filespec and the number of matching files in the label.

	    4) Lockmode changes on last access updates

	        The server no longer takes write locks on db.user or 
	        db.domain to update access time unless the access time 
	        is actually updated.

	New admin commands - #108286, #118447 (Bug #19309) **

	    'p4 admin dbstat'

	        Dbstat scans the internal nodes pages of database file(s)
	        then outputs some simple statistics. The operation will
	        lock out write access to the database table during its
	        scan, so therefore it should be used with care.  

	    'p4 admin updatespecdepot'

	        Updatespecdepot instructs the server to archive forms
	        into the spec depot.  This command can be very useful
	        for installations that have just enabled the spec depot
	        and want to pre-populate it with existing form data.

	    See 'p4 help admin' for more information about these
	    new commands.

	New triggers - #116132 **

	    'fix-add' trigger will be executed prior to adding a fix
	    with the 'p4 fix' command.

	    'fix-delete' trigger will be executed prior to deleting a fix
	    with the 'p4 fix -d' command.

	    'form-commit' trigger is executed after a form has been 
	    committed to gain access to automatically generated fields.
	    (This trigger which was introduced in 2006.2 but undocumented
	    is now fully supported).
	    
	    See 'p4 help triggers' for more information.

Minor new functionality in 2007.2

	#119528 (Bug #14419) **
	    'p4 protect' will not allow the user to delete its last
	    'super' entry.

	#119344 (Bug #23591) **
	    Content triggers can now access the timestamps on the files
	    being submitted via the 'headModTime' field in the output
	    of 'p4 fstat @=<change>'. Previously timestamp information
	    was not available until after the files had been submitted.

	#118826 (Bug #1159)  **
	    'p4 change' has a new '-u' option to allow the owner of a
	    submitted change to update its description and/or jobs fields.

	#116469 (Bug #202, #218, #7522, #8649, #13352, #15653, #16636,
		 #16845, #16888, #20370, #22382, #23343) * **
	    Changes to integrate and resolve.  

	    'p4 integrate' now performs compatibility checking and will
	    disallow integration between incompatible types, unless the 
	    '-t' flag is used.  (see chart below for type compatibility). 

	    When files have been integrated with '-t',  'p4 resolve' 
	    behaves as follows:

	    'accept theirs'  changes the type of the file on the client.

	    'accept yours'   reverts the type change so that the open file 
	                     type will match the 'yours' file type.  

	    Note, this new behaviour is also true if the user issues a 
	    'p4 reopen' and changes the file open type.

	    T - Resolved as text
	    B - Resolved as binary
	    x - Incompatible types (requires 'integrate -t')

	    Compatibility:
		     text   binary  symlink  resource unicode apptxt apple
	    text      T       B        x        x       T       x      x
	    binary    B       B        x        x       B       x      x
	    symlink   x       x        T        x       x       x      x
	    resource  x       x        x        B       x       x      x
	    unicode   T       B        x        x       T       x      x
	    apptxt    x       x        x        x       x       T      x
	    apple     x       x        x        x       x       x      B

	#119955 (Bug #23698, #24251, #24207, #23469, #24150) **
	    The 'p4 integrate' algorithms for suppressing reintegration
	    and for picking the optimum base, which were reimplemented
	    in 2006.1, have been tuned significantly for this release.
	    The following new changes have been made:

	    Integrating a single 'copy from' revision now gives credit for
	    all earlier revisions, so that a subsequent 'p4 integrate' of
	    any earlier revision will find no work to do.  This can only
	    come about by 'cherry picking' (providing to 'p4 integrate'
	    specific revisions to integrate).

	    Pending integration records (files opened with 'p4 integrate'
	    but not yet submitted with 'p4 submit') are now considered
	    when finding the most appropriate base.  This makes
	    integrating into a related file already opened for branch
	    possible without the 'p4 integrate -i' flag.

	    'p4 integrate' follows indirect integrations through
	    complicated combinations of merge/copy/ignore integration
	    records better.  This should result in fewer integrations
	    being scheduled, and closer bases being picked, for
	    integration between distant files.

	    'p4 integrate' could wrongly choose a base on the source
	    file after the revisions needing to be integrated if the
	    revisions needing to be integrated were before revisions
	    already integrated.  This normally only comes about in cases
	    of 'cherry picking' (providing to 'p4 integrate' specific
	    revisions to integrate).
	    
	    'p4 integrate' in certain cases wouldn't find a base (or
	    choose a poorer base) if the source file was branched and
	    reopened for add, and then the original file was changed
	    further and branched again.

	#115979 (Bug #11938) **
	    'p4 monitor terminate [id]' can now be used successfully on
	    commands that have moved beyond the compute phase of their
	    processing.  Note, that it may take up to 10 seconds before 
	    the process will actually terminate.

Bugs fixed in 2007.2

	#140379 (Bug #27216) **
	    When integrating between two branches separated by an
	    intermediate branch, 'p4 integrate' would conclude there was
	    nothing to integrate if the target file had merged from a
	    revision of the intermediate file that itself was a copy of
	    a revision in the source file.  This merge/copy chain is now
	    treated as a merge, not a full copy.

	#139758 (Bug #27240) **
	    The p4d server on SOLARIS could intermittently terminate a
	    command due to incorrect detection of a client dropped 
	    connection.  This has been fixed.

	#136754 (Bug #24800) **
	    A perforce server could shutdown with the message 
	    "License expired" even when a new license with a valid
	    expire date was put in place (either manually or with
	    the 'p4 license' command).  This only happened if the
	    license that the server was originally started with 
	    became out of date.

	#136742 (Bug #26682) **
	    'p4 obliterate' under certain conditions could purge an
	    archive file which still had lazy copies pointing to it.
	    This change prevents that from happening.
	     
	#136614 (Bug #24943, #26541) **
	    In certain cases inconsistent results depending on depot 
	    path could be observed for some commands.  Typically when
	    this happened an unrestricted 'p4 sync' would bring back
	    correct behaviour.  This problem only occurred when a file 
	    that had been previously synced was no longer mapped by the 
	    current client view and the client path name had a '.' in 
	    a significant position of its path.  This has been fixed.

	#135827 (Bug #26464) **
	    The change (#120526) also introduced a regression that could
	    cause 'p4 changes' to not work correctly with the '-u' or
	    '-c' option when specifying '-m1 <filepath>'.  This has been
	    fixed.

	#135235 (Bug #25662) **
	    Unintegrated revisions prior to a delete could cause
	    undesirable file re-branching in subsequent integrations.
	    This change brings back an older behavior, which is to
	    not re-branch from revisions prior to a delete when the
	    target is also deleted.

	#132978 (Bug #25981) **
	    In the rare case where the Perforce Server on Windows fails 
	    to create a thread,  the reason is now logged in the server
	    errorlog.  Under these conditions the server will no longer
	    try to run the command in the main parent thread,  but will
	    wait for resources to become available before executing any
	    more commands.
	
	#132390 (Bug #25828) **
	    'p4 changes -i', 'p4 fixes -i' and 'p4 jobs -i' under
	    certain conditions could exclude changelists that were 
	    integrated into the specified files.  This problem 
	    has been fixed.

	#131348 (Bug #25612) **
	    The Perforce Server on Windows could hang for some commands
	    when the auditlog was enabled.  This has been fixed.  

	#131114 (Bug #25312) **
	    The change (#117342) also introduced a regression that 
	    would prevent the use of 'p4 login' (perforce tickets)
	    against a central authentication server.  This has been
	    fixed.

	#128851 (Bug #24156) **
	    The server no longer exits after 10 consecutive attempts
	    to accept an incoming connection.  Usually the reason for
	    this is that the computer is under configured and its 
	    simply a server resource problem.  In some cases the 
	    problem can be on the client end.  Because of this the
	    server now sleeps, then continues to retry.

	#124999 (Bug #17409) **
	    When the 'p4 integrate' command syncs files it will now
	    sync file deletes before adds so as to remove directories
	    in case they are replaced with normal files.

	#124947 (Bug #25038) **
	    'p4 submit' would wrongly prevent a check submission
	    when a binary file is resolved due to simple version
	    updating (i.e. p4 sync to head requiring p4 resolve)
	    rather than due to 'p4 integrate'.  The submit
	    report report, "edit or revert" but the file is
	    already open for edit.

	#123381 (Bug #24793) **
	    Adding a job with three strings of about 2700 characters
	    in the description could possibly corrupt the jobs index
	    btree.  Fixed.

	#123248 (Bug #24711).  **
	    'p4 submit -d' would set the status field to "ignore" in
	    all jobs matching the user's JobView. Now jobs matching a
	    user's JobView are not modified when using "p4 submit -d".

	#122782 (Bug #24663) **
	    'p4 submit' could fail when 'p4 integrate' mistakenly
	    attempts to branch from a deleted revision if that
	    source file was re-added and that re-added revision was
	    ignored into the target file.  Fixed.

	#122672 (Bug #24270) *
	    .DS_Store files are now deleted when removing a directory.
	    (seen mainly on the Macintosh).

	#122284 (Bug #24671) **
	    'p4 submit' would not always honor the submit options if
	    the change form had to be edited a second time.  This has
	    been fixed.

	#120969 (Bug #24454, #24205) **
	    It is now possible to configure the filetype for spec depot 
	    files by using 'p4 typemap'.

	    e.g.   TypeMap: text //spec/client/...

	    Note,  the default for spec files is ctext.  By changing the
	    creation filetype to text (like in the example above) the
	    server will not require subdirectories which can be a problem
	    with sites that have more clients than their filesystem can
	    create directories for.  When setting a filetype for spec 
	    depot files only the server storage type has any relevance,
	    setting storage modifiers will have no affect.

	#120526 (Bug #17862) **
	    'p4 changes -m1 <filepath>' optimization of using the db.revcx
	    table does not always perform well.  Now if the scan of the
	    db.revcx table does not find any matching files after trying
	    a pre-set number of rows it will give up and fall back to
	    using db.rev directly.

	#120385 (Bug #24149) **
	    'p4 integ' could change the HaveRev to 'none' of a synced 
	    file when used with a branch spec and fileset that creates 
	    an out-of-order integration list.  This has been fixed. 

	#119979 (Bug #24335) **
	    Under certain rare circumstances the error:

	    'Database open error on db.<name>!' 
	    'BTree is corrupt!'

	    Could be incorrectly displayed.  This could only happen
	    on windows servers due to an initialization problem.
	    This has been fixed.

	#119708 (Bug #21679) **
	    'p4 revert -k <file>' was checking the client side file
	    when it does not need to.  Fixed.

	#119687 (Bug #24079) **
	    Running p4 diff2 with tagged output would leak a small
	    amount of memory on each pair of files diffed.  Fixed.

	#119631 (Bug #23077) **
	    Tagged output of p4 diff2 -q was including identical
	    files.  Changed so that with the -q flag identical
	    files are not included in the tagged output.

	#119616 (Bug #23950) *
	    'p4 -d <directory>' run in unicode mode would ignore
	    the command line directory override.  Fixed.

	#119597 (Bug #23999) *
	    Exif format jpeg files were added as binary rather
	    than cbinary (already compressed).  Fixed.

	#119596 (Bug #24023) *
	    p4 diff -sd would wrongly report a symlink as missing
	    if that symlink's target was missing.  Fixed.

	#119245 (Bug #24204) **
	    Triggers run on Unix platforms were inheriting some
	    open file descriptors from the server.  This should no
	    longer occur.

	#119012 (Bug #19922, #13231, #18962) **
	    The error message and documentation have been improved for
	    'p4 change -f' to reflect which fields are read-only.

	#118635 (Bug #22297) **
	    'p4 submit' could submit a branched file with a bad archive
	    entry if the source revision of the branched file is purged 
	    before the submit is completed. This has been fixed.

	#118282 (Bug #24104) * 
	    Hostname lookups that succeed without returning an address
	    will no longer cause the client to crash.
	    
	#118102 (Bug #24116, #24081, #24447) **
	    Error-handling for the spec commands has been improved to
	    not allow the mutually exclusive '-i', '-o', and/or '-d'
	    flags to be used together in one spec command. Previously 
	    wrong errors may have been generated, and in some cases the
	    command may have executed using any one of the flags.

	#118064 **
	    'p4 obliterate' no longer reports delete revisions in the
	    list of revisions being "purged".  The "purged" message
	    is now reserved for the act of removing file contents from the
	    archive.

	#118057 (Bug #23536).  * **
	    'p4 submit' with the 'revertunchanged' submit mode would fail
	    to reset the client file permissions.  This has been fixed 

	#117730 (Bug #16296) **
	    p4 job -d will only delete jobs that have no associated
	    pending or submitted fix records.

	#117342 (Bug #16707, #18349) * **
	    Different values of P4PORT for the same server instance
	    e.g. (ip:port# vs host:port#) would result in multiple
	    ticket entries in the Perforce ticket file. This has 
	    been fixed so that the same server instance will always
	    produce a single ticket entry that either P4PORT value can
	    use.

	#117090 (Bug #23953) **
	    'p4 integrate' between two deleted files would give a bogus
	    error message about permissions.  Now it more properly says
	    "all revision(s) already integrated."

	#116771 (Bug #23915) **
	    'p4 obliterate file@change' of a file opened for add would
	    remove the open record, while 'p4 obliterate
	    file@change,change' would not.  Now neither does: to remove
	    an open-for-add record you must use 'p4 obliterate file'
	    without a revision.  

	#116451 **
	    Superusers can now delete protected counters using
	    'p4 counter -f -d'.  Previously they could be set,
	    but not deleted.

	#116428 (Bug #15562, #23777) **
	    Syncing between revisions where the revision on the client
	    was binary+w (or other non-text types) and the new revision
	    was binary would incorrectly fail with a "Can not clobber"
	    message.  Also, if a client had a writable file not
	    controlled by Perforce and that file is then added by
	    another client as a +w type Perforce would overwrite
	    the file when syncing.

	#116173 (Bug #14880) **
	    Failed trigger of type 'change-content' would leave edited
	    files on the client workspace in a read-only state.  This
	    has been fixed.

	#116113 (Bug #15520) * **
	    Providing the security level permits it, expired perforce
	    tickets no longer override valid P4PASSWD settings.

	#115153 (Bug #23630) ** ***
	    It is no longer possible to start more than one Perforce
	    Server or Perforce Proxy Server on the same TCP port on a
	    Windows platform. Now such attempts will correctly report
	    that the address is in use.
	
--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2006.2

	Client file tamper checking - #101065, #101345, 101699
				      (Bug #17607, #15928, #15654,
				      #20029, #20587) * **

	    'p4 submit' will now check that files integrated and resolved 
	    with 'am', or 'ay'  are not modified after 'resolve' and
	    before 'submit'.  If such tampering is detected then an error 
	    will display the modified file and request that the file be
	    re-edited or reverted in order to complete the submit.

	    e.g.

	    //client/main/foo tampered with after resolve - edit or revert.

	    To check for tampered files before submitting, 'p4 diff -sb'
	    will now report files which are open for integration and have 
	    been resolved but have been modified.  These files can be 
	    reopened for edit with the command
	    'p4 diff -sb | p4 -x - edit'.

	    Note that in order for tamper checking to work with files 
	    resolved with 'am', a 2006.2 client as well as the server
	    is required.  

	    Tamper checking for branch/sync files and resolve 'at'
	    files is not done at submit time, but 'p4 diff -sb' will
	    report those files.

	    Tamper checking is not done on files imported from a remote
	    depot.

	New client option 'SubmitOptions' - #106812 **

	    The new 'p4 client' field 'SubmitOptions' allows the user to 
	    alter the behavior of submit.  The six different values for 
	    this field affects what happens to unchanged files and if
	    submitted files are reopened.  For more details see 'p4 help 
	    client'.

	    SubmitOptions             unchanged       submitted
	    value                     files           files
	    ----------------------------------------------------
	    submitunchanged           submitted       
	    submitunchanged+reopen    submitted       reopened
	    revertunchanged           reverted
	    revertunchanged+reopen    reverted        reopened
	    leaveunchanged            left open
	    leaveunchanged+reopen     left open       reopened

	    In addition 'p4 submit' now sports a '-f option' flag.  This 
	    allows the user to override the SubmitOption which is set in 
	    the client.

	    e.g.  p4 submit -f leaveunchanged
	
	Speedup of 'p4 submit' branched files - #101435, 107393 **

	    The time taken to update the metadata (locking db.* files) has
	    been reduced by as much as 40% by a combination of the
	    following changes.  The biggest reduction is seen when
	    submitting a large number of branched files.
	    
	    1) db.archmap table replaces db.archive

	        An earlier version of the server improved obliterate
	        performance by introducing the db.archive table.  A side
	        effect of introducing this table was a performance penalty
	        when submitting files that resulted in lazy copies.  This
	        table has now been replaced with the db.archmap (archive
	        map) table that does not suffer the same performance
	        problem.

	    2) buffered journal file

	        Performance has generally been improved by optimizing the
	        way that journal records are written.  This change reduces
	        the number of writes and the number of locks taken against
	        the journal file.

	'Automatic' labels - #107125 (Bug #20887) **

	    The new automatic label feature introduced in 2005.2 but 
	    undocumented is now fully supported.  By adding a "Revision"
	    field to the label specification you can now make that label
	    appear as if 'p4 labelsync' had been done on the label using
	    that revision.  The only difference is that if the "Revision"
	    specification is dynamic (e.g #head) the apparent contents 
	    of the automatic label will change, while a static label set
	    with 'p4 labelsync' will not.  Note that when executing the
	    command 'p4 labels <filespec>' automatic labels will not be
	    displayed.

	Improved management of remote depots - #106497, #100829, #108461
					       (Bug #19730, #18694, #14896,
					       #22146) **

	    Several changes have been made that improve the management
	    and interoperability of remote depot servers.

	    1) Better lock support

	        The server no longer locks the db.rev (or db.revhx and
	        db.revcx) tables when accessing only files in a remote
		depot.  This means that using 'p4 dirs' on a remote depot
		(often by expanding a remote folder in p4v) will no longer
		hold local locks.

	    2) MaxScanRows/MaxResults support

	        Remote depot operations are now subject to MaxScanRows and
	        MaxResults limitation imposed by 'p4 group' on the remote
	        user 'remote'.

	    3) Protocol to negotiate table version.

	        By negotiating the highest level for table compatibility
	        several problems have been solved.  Previously, files with 
	        some complex type modifiers (like text+Fk) could not sync 
	        from remote depots.  The negotiation allows for new fields 
	        like the file size to be included in data transfer from the 
	        remote server ('p4 sizes' will work with remote depots).  

	New MaxLockTime in 'p4 group' - #106371 (Bug #21206) ** 

	    'p4 group' now has a 'MaxLockTime' field,  which can be used to 
	    prevent queries from holding locks on database tables for too
	    long.  See 'p4 help maxLockTime'.

	Improved license file handling - #103739 (Bug #1948) **

	    The new 'p4 license' administrator command allows a user with
	    'super' access to add a new license file to Perforce without
	    having to shutdown the server.  See 'p4 help license' for 
	    additional information.

Minor new functionality in 2006.2

	#112275 (Bug #3582) **
	    Journal files now contain lines that demark rows written under
	    a single database lock, to better support tools that parse it.

	#107394 **
	    'p4 obliterate' has been changed for this release.  Obliterate
	    now makes use of the db.archmap (archive map) table to check
	    for branched files (lazy copies).  If lazy copies exist then 
	    the archive (file contents) will not be removed, consequently 
	    obliterating a file does not guarantee that the corresponding 
	    archive file is removed.  See 'p4 help obliterate'.

	#107110 (Bug #21543, #22756) **
	    Files are now stored in the database archive keyed to the
	    filename and (pending) change number, rather than filename
	    and revision number.  This information is normally only ever
	    reported to users by the 'p4 obliterate' command, but
	    administrators who examine the archive will notice the change
	    as well.  Note that old revisions in the archives will not
	    be renumbered.

	#107943 (Bug #18440) **
	    Resolve conflict markers will now use whole paths
	    to indicate file names and revisions.  The ORIGINAL
	    and THEIRS files will be in depot syntax while the
	    YOURS file will be in client syntax.

	#107082 (Bug #3271) **
	    The new 'p4 sizes' command displays size information for 
	    files in the depot. It is functionally similar to the UNIX 
	    'du' command.  See 'p4 help sizes' for additional information.  

	#106450 (Bug #258) **
	    'p4 submit' now sports a '-d description' option.  This allows
	    the user to submit files without the need for a changelist 
	    dialog.  See 'p4 help submit'.

	#105638 (Bug #10664, #19802) **
	    'maxScanRows', which can be applied via 'p4 group' to prevent
	    users from consuming too much server resources, has been
	    extended to a number of additional commands and tables.

	    Previously, it only applied to the db.rev, db.revhx, and
	    db.revdx for all commands and the db.revcx table for 'p4
	    changes'.   Now it applies to all tables for the p4 annotate,
	    branches, change, changes, clients, describe, diff, diff2,
	    filelog, files, fixes, fstat, have, integrate, integrated,
	    jobs, labels, labelsync, lock, obliterate, open, opened, 
	    release, reopen, resolve, resolved, reviews, sync, and tag 
	    commands.

	    maxScanRows applies separately to the number of rows read
	    from each table, not the total from all tables.

	    The most visible effect of this change is that 'maxScanRows'
	    will limit access to the db.integed table for 'p4 integrated'.

	#102279 (Bug #6053) **
	    'p4 branches/clients/labels' now sports a '-u user' option.
	    This flag limits the command output to those owned by the 
	    specified user only.

	#101906 (Bug #10634, #21275) **
	    'p4 changes -s pending' now allows a filepath where previously
	    it didn't.

	#98791 (Bug #19375) **
	    The Perforce Server on Windows now uses native I/O routines
	    for database access rather that using the POSIX layer.  This 
	    fixes the problem of hitting the maximum number of open POSIX
	    file handles.

	#121930 (Bug #24586) **
	    'p4 verify -v' on Windows could leak file handles when
	    encountering missing or corrupt revisions in RCS archive files.
	    This has been fixed.

	#121180 (Bug #24532) **
	    Under very rare circumstances of data in a btree,
	    which are more likely just after a checkpoint restore,
	    a btree record insert could cause the server to loop
	    forever.  Fixed.

	#120458 (Bug #24389) **
	    'p4 resolve' used interactively resolving a ktext file
	    with 'ay' i.e. accept yours would incorrectly report
	    the resolved file as being tampered with at submit time
	    or with 'p4 diff -sb'.  Fixed.

	#119263 (Bug #24236) **
	    'p4 obliterate' could leave database files in an inconsistent 
	    state.  This could only happen if the user hit ^C or the
	    command 'p4 monitor terminate <pid>' was used during the
	    processing of the obliterate.  This has been fixed.

	#116847 (Bug #23776) **
	    p4 submit would fail for files reopened by a previous
	    p4 submit with a reopen option if those files were
	    branched by the earlier submit.  Fixed.

	#114374 (Bug #23004) *
	    When p4d is in unicode mode, and the p4 command line
	    has P4CHARSET set to a wide character set (i.e. utf16)
	    and P4COMMANDCHARSET set to a character set other than
	    utf8, p4 commands to edit specifications would interpret
	    those specs as utf8 instead of the P4COMMANDCHARSET.
	    Fixed.

	#113270 (Bug #23258) **
	    Files changed from type ktext to text would be stored
	    at the server with the keywords unexpanded even if the
	    files had been submitted with the keywords expanded.
	    This behavior, present only in release 2006.1, has been
	    fixed.

	#112219 (Bug #23211) **
	    'p4 describe -s' would fail if the change contained a file
	    in which the file's previous revision had been obliterated.
	    This behavior has been fixed.

	#112011 (Bug #22578) **
	    'p4 change -o' with tagged output would not see any
	    modifications made by a form-out trigger.  This has been fixed.

Bugs fixed in 2006.2

	#111144 (Bug #22987) **
	    'p4 describe' on a change where an affected file's previous 
	    revision has been deleted could report incorrect differences.
	    This case is now correctly handled by displaying an error 
	    message instead.

	#110722 (Bug #22731) **
	    'p4 protects' command now displays an error message if the
	    protections table is empty.

	#110294 (Bug #22537) **
	    'p4 login <user>' which requires 'super' privilege can change
	    the impersonated user's current session timeout.  This has
	    been fixed.

	#109913 (Bug #18387) *
	    The cygwin 'p4' client program had trouble creating a
	    directory if there was an executable by the same name in the
	    parent directory.  This was due to the way cygwin makes "foo"
	    and "foo.exe" look the same.  Now the 'p4' client program
	    handles this case.

	#109855 (Bug #18182, #10561, #19916) **
	    Excessive wildcards (... and *) in client views, in branch
	    views, in the protection table, and on the command line could
	    cause the server to consume a lot of memory and time trying
	    to work out all the possibilities.  An efficient algorithm
	    has been put in place that simplifies this work, and so such
	    use of wildcards should not cause nearly as much problem for
	    the server.

	    This problem was previously addressed in 2006.1 by enforcing
	    an internal limit on wildcard handling, but that was too
	    restrictive and the limit was removed as a patch.  A less
	    restrictive internal limit is back in 2006.2, and that limit
	    is very unlikely to be hit with the new algorithm.

	#108679 (Bug #22113) **
	    'p4 filelog' can make unnecessary scans of the rev table
	    under certain conditions.  Typically this problem is
	    triggered when the file following the argument filelist
	    is excluded by a protection mapping.  Fixed.

	#108376 (Bug #22332) **
	    'p4 fstat -Rn' would not filter files correctly as 
	    described in the documentation. This has been fixed.

	#108292 (Bug #13476) **
	    On some platforms, p4d would not start or log errors
	    if the error log file exceeded 2 Gbytes.  Fixed, now 
	    log files should not have problems exceeding 2 Gbytes
	    if the platform supports such large files as database
	    files.

	#108230 (Bug #22296) **
	    Corrected example trigger type in "p4 triggers" comments

	#108021 (Bug #21864) **
	    'p4 integrate -f' of a deleted file more than once would
	    leave the target file in an unusable state, where 'p4 submit'
	    would say "Merges still pending" and 'p4 resolve' would say
	    "file - has been deleted - revert and sync".  Now the
	    subsequent 'p4 integrate -f' has essentially no effect.  

	#107629 (Bug #15878) **
	    Errors from a remote depot (most likely lack of permission
	    for the 'remote' user) were going unreported by the local
	    server.  This has been fixed.

	#107321 (Bug #14726) **
	    Creating a new user with 'p4 user -f' with server security 2+
	    would result in "Bad parameters passed to mangler!" errors.
	    This no longer happens, and the user should now only get
	    the expected password error messages instead.

	#107305 (Bug #9814, #17099) * **
	    Logic regarding file clobbering and symlinks has changed
	    substantially.  Syncing a symlink onto a writable file
	    should now honor the clobber client option.  If a file
	    type changes from symlink to text, the sync will no longer
	    report a clobber error if the previous symlink points
	    to a writable file.  The P4 API also changed, see the
	    p4apinotes.txt for details.

	#106098 (Bug #21942) **
	    Adding a View entry to any spec form with a leading '$' will
	    result in an error and the form will not be saved. Previously
	    this would not result in an error, and the spec would be
	    saved without the entry, and also result in a bogus db.view 
	    value with map state of 3 corresponding to this invisible 
	    view. In the case of a branch spec, this would
	    cause subsequent attempts to integrate using the spec to
	    fail.

	#105408 (Bug #19573) * **
	    Temporary file handling has changed to not fail if
	    a conflicting temporary filename already exists.
	    Temporary files are also now named using a random sequence.

	#105334 (Bug #20829) **
	    Fields in spec forms (branch, client, label, etc) that have
	    a # in the value are now quoted when output, so that the #
	    is not stripped as a comment when the form is read back in.

	#105272 (Bug #21901) **
	    Date fields in jobs which are set by the server will be updated
	    once after validating the job contents and again upon commit so
	    that the value will reflect the time of commit.

	#105043 (Bug #21822) * **
	    Unknown field types or unknown field options in a
	    spec definition no longer cause the server to
	    abort on windows.

	#104828 (Bug #20584) **
	    'p4 resolve -at' after a 'p4 integ' between files
	    where only one of the files has keyword expansion
	    as part of its type caused problems because keyword
	    expansion would be done based on the source file's
	    type, but after submit, sync would expand keywords
	    based on the target file's type leading to differences
	    which would be reported with 'p4 diff -se'.  With this
	    fix, in this case, 'p4 resolve -at' will expand keywords
	    based on the target file's type.  The proxy was also
	    caching the wrong keyword expansion which could appear
	    in other clients later sync operations.

	#104340 (Bug #19220) **
	    Server lock errors "Locking failure: 'table1' locked after 
	    'table2'!", and  "Locking failure: no upgrading 'table's'
	    lock!" no longer cause the server to abort. Now the error is
	    logged and will be tracked if server tracking is enabled, and
	    the server will not exit.

	#102859 (Bug #7130, #18896, #17100, #2540) * **
	    A multiple resolves into the same target file revision
	    where a subsequent resolve resulted in an 'at/accept theirs'
	    i.e. a copy would cause earlier resolves to be converted
	    into 'ignore'.  Now, if you have new clients and this
	    new server these earlier resolves may be converted
	    into 'merge' if the merge system can reasonably determine
	    that no work is lost.

	#100946 (Bug #12339, #13329) **
	    'p4 integrate' will now integrate into files already opened
	    for add/branch/import.  The action (add/branch/import) doesn't
	    change, but a merge for 'p4 resolve' gets scheduled.  This
	    is the same behavior that has been available with files
	    opened for edit/integrate.

	#100886 (Bug #20653) **
	    'p4 integ -b' failure caused by invalid view mappings 
	    is reported more accurately. If the failure is caused by
	    invalid havemap entries, the error will not be erroneously
	    reported as invalid overlay mappings.

	#100847 (Bug #21172) **
	    The # (comment) character in specs is now treated more
	    consistently: it never introduces a comment in text blocks,
	    and always introduces a comment in non-text block values.

	#100814 (Bug #2146) **
	    'p4 client -d -f <name>' will now delete pending changelists
	    created by the named client and also delete any fix records 
	    associated with it.  The -f flag is now always required when 
	    deleting a client that has a numbered pending changelist
	    associated with it.

	#100613 (Bug 5422, 7152, 12904, 21751) **
	    / is no longer allowed in client or depot names.  Because
	    of the way Perforce manages views, having a / in the name
	    can cause data inconsistencies.  Now / is simply disallowed.
	    Most other entities (branches, labels, jobs, etc) can still
	    have a / in them.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2006.1
    
	User file access tracking - #99426 **

	    The server can now log individual file access to an audit
	    logfile.  When auditing is enabled the server logs every time
	    file content gets transferred to the client. Consequently this
	    file will get large very quickly and there may be a small
	    performance impact.

	    To enable this feature:

	    % p4d -r /usr/perforce -A auditlog 

	    Example output:

	    2006/05/09 09:52:45 karl@nail 127.0.0.1 diff //depot/src/x.c#1
	    2006/05/09 09:54:13 jim@ston 127.0.0.1 sync //depot/inc/foo.h#1

	    This was undocumented functionality in the 2005.2 release, but 
	    is now fully supported.

	'p4 integrate' improvements - #96464 (Bug #413, #17318, #17577,
				      #17751, #18293, #20006) **

	    'p4 integrate' has been rewritten to improve three areas,
	    mostly with respect to indirect integration (when there is
	    no direct relationship between source and target):

		1) Better performance, especially when faced with rich 
		   branch history and many out-of-date files;
	    
		2) Better recognition of previous integrations, resulting
	           in fewer merges; 

		3) Better base selection, using a "closest ancestor"
		   approach, resulting in simpler merges.  The previous
		   logic almost invariably stuck to the source file when
		   selecting the base.  Now any revision of the source,
		   target, or indirectly related files is a candidate,
		   with the revision that shares the most changes with
		   both the target and source being selected.  As before,
		   'p4 integrate -o' and 'p4 resolve -o' report the 
		   selected base.

Minor new functionality in 2006.1

	#99037 (Bug #20692) **
	    'p4 integrated -b branch' now uses the branch view more
	    efficiently to limit the number of integration records that
	    have to be scanned.

	#96538 **
	    Minor 'p4 integrate' fixes with respect to deleted revisions:
	    'p4 integrate -Di' now attempts to integrate all outstanding
	    revisions of a file that has been deleted and re-added, rather
	    than only those revisions since the last add.  Previously
	    '-Di' would find a base prior to the add but would only give
	    credit for the revision after the add.  'p4 integrate -d'
	    now implies 'p4 integrate -Di', as 'p4 help integrate' seems
	    to have suggested.

	#95979 **
	    The merge algorithm has been rewritten.  It now produces 
	    fewer conflicts to resolve, making automatic merging ('p4 
	    resolve -am') more likely to succeed. Also, it is now better 
	    able to recognize identical changes that have been made in 
	    'theirs' and 'yours' files.  This should reduce the chances 
	    of getting duplicate inserts and generally improve merge 
	    output.

	#95535 (Bug #19994) *
	    Clients operating in unicode mode with utf8 as their
	    character set will now validate that data going to the
	    server is valid utf8 and will error if it is not.
	    New P4CHARSET options allow unvalidated operation.

	#93413 (Bug #20097, #18869, #17246) **
	    The 'monitor' counter now reflects the level of monitoring
	    that the server provides. '0' and '1' are unchanged from
	    from their current behavior of no monitoring or monitor
	    running commands respectively. '2' also reports on idle
	    processes that have run at least one command. Changes to
	    the monitor counter requires a restart of p4d.

	#91389 **
	    'p4 submit' has been modified to improve concurrency through
	    better database locking. 

	#90477 **
	    The following 'p4' commands now sport a '-m max' option:
	    'branches', 'clients', 'diff', 'fixes', 'fstat', 'groups', 
	    'labels', 'opened' and 'users'.  When this option is 
	    specified it limits output to 'max' number of entries.

	#88933 (Bug #7335) **
	    'p4 groups' now has a -i flag to include subgroups when
	    listing to which groups a user or group belongs.

	#89305 (Bug #2102) **
	    The new 'p4 protects' command shows the lines from the 
	    protections table that affect the given user/path.

Bugs fixed in 2006.1

	#114840 (Bug #23592) **
	    CPU usage has been reduced for 'p4 integrate' when it is
	    handling indirect integrations through a large number of 
	    branches (hundreds or more).

	#113964 (Bug #19865) **
	    Concurrent 'p4 submit -c' and 'p4 change -i' of the 
	    same changelist could (under rare circumstances) leave
	    a pending change record.  Since the pending change record
	    and the submitted change record share the same description,
	    deleting the pending change would result in removing the
	    committed change description.  This has been fixed.

	#113941 (Bug #23440) **
	    Unable to edit existing jobs which contain a TEXT
	    field of type always or once and were set using a
	    preset. This has been fixed.

	#113687 (Bug #10201) **
	    'p4 revert -a' could delete a local (modified) file, if 
	    the head revision was deleted and the client had been 
	    subsequently synced.  This has been fixed.

	#113339 (Bug #23307) **
	    'p4 opened -a //...' was being adversely affected by
	    the optimization in change #109212.  It is now back to
	    its previous performance.

	#113270 (Bug #23258) **
	    Files changed from type ktext to text would be stored
	    at the server with the keywords unexpanded even if the
	    files had been submitted with the keywords expanded.
	    This behavior, present only in release 2006.1, has been
	    fixed.

	#112408 (Bug #23191) **
	    'p4 depot' will not abort when it encounters a UNC
	    path in the Map field so long as the path also ends in
	    '...'.  UNC path handling in the depot form was broken
	    by change 93286, but it has now been fixed.

	#109659 (Bug #22438) *
	    Apple file types (apple, resource, etc...) stored from
	    a PPC or classic Mac and later synced onto an Intel
	    Mac or vis versa would have their Finder information
	    swapped.  Fixed.  However, such apple files submitted
	    from Intel macs may need to be synced with an old
	    client and resubmitted with a new client to fix
	    bad Finder information.

	#109240 (Bug #22460) **
	    The internal buffer on labels for 'p4 labels filespec' has
	    been raised from 10,000 to 1,000,000.  The command works
	    regardless of the number of labels being examined, but if
	    under the limit the command releases an important lock
	    (on db.domain) early, allowing other commands to run.

	#109212 (Bug #22288) **
	    'p4 opened -a filename' has been sped up considerably for
	    sites with a large number of client workspaces.  Previously,
	    its performance was related to the total number of client
	    workspaces on the server, but now it is only affected by
	    the client workspaces that have the named file(s) opened.

	#108308 (Bug #21706) **
	    Change 89167 introduced in r06.1 restricted the use of
	    '...' wildcards in client, branch and protections maps
	    in order to prevent excessive use of cpu and server crashes.
	    The limit imposed by that change was determined to be too
	    restrictive, so the limit was lifted.

	#108264 (Bug #22306) **
	    'p4 fstat -W <filepath>' performance could be very slow if
	    a large number of files are opened.  This has been fixed.

	#107809 (Bug #22198) **
	    'p4 integrate' would sometimes skip integrations when the
	    integration history involved a copy away from the target.
	    This has been corrected.

	#105845 (Bug #21946) **
	    Using 'p4 diff2' with a content trigger against a pending
	    revision could incorrectly identify files as identical when
	    they are different.  This has been fixed.

	#105715 (Bugs #21893,#34376) **
	    Submitting a new version of a file with a pre-2003.2 client
	    would result in the wrong digest value being set. This has
	    been fixed.

	#104421 (Bug #21735) **
	    Classic Mac OS clients could cause the 2006.1 p4d server 
	    to exit with an error about translate paths for OS 'current'.
	    Now the server will not exit. 

	#104154 (Bug #21741, #21742) **
	    Memory leaks fixed.  Server leaked a small amount of
	    memory for each table opened which was modified.

	#104130 (Bug #21624) **
	    p4 integrate of files with many branches and a complex
	    integration history could cause the server to run
	    out of memory.  Fixed to limit the extent and depth of
	    history searching.

	#104074 (Bug #21595) **
	    The new merge code was choosing an edit over a conflict even 
	    though the "theirs" edit effectively stomped on the "yours" 
	    delete.  In most cases since both "yours" and "theirs" are
	    removing lines this is probably a safe thing to do, however
	    for safe merging this case will now be marked as a conflict 
	    like it was in the previous release.

	#104039 (Bug #21693) **
	    Integrating a ktext file to a text file resulted in bad
	    checksums when running 'p4 verify' using the initial
	    2006.1 server. Fixed.

	#103879 (Bug #21587) **
	    'p4 changes -i' under certain conditions could exclude
	    changelists that were integrated into the specified files.
	    Fixed.

	#103651 (Bug #21613) **
	    When a job is updated without specifying the '-f' flag, the
	    server will reject changing the value of any 'always' or 'once'
	    field to a new non-null value. If these fields are either
	    omitted or have an empty value, then the server will set the
	    'always' fields as specified in the presets or restore the
	    current values for the 'once' fields. By using this method of
	    updating jobs, an application loses the ability to have the
	    server detect potential job clobbering and will instead have
	    to implement its own method for preventing overwriting of
	    valid data.

	#103316 (Bug #21578) **
	    Using an older proxy (i.e. prior to 2006.1) with a 2006.1
	    server could cause binary files to be treated like
	    text files and subject to newline translations.  Other
	    cases where filetypes get changed to text also occur.
	    Fixed.

	#103097 (Bug #21451, #21589) * **
	    The new merge code was not recognizing certain cases which
	    were borderline conflicts.  This change applies a more
	    conservative approach, now choosing to throw those edge 
	    cases into conflict blocks.

	#102793 (Bug #21513) *
	    p4 integrate with a 'cherry picked' source range
	    might choose a bad base when a 'dirty merge' from the
	    target to the source files is present.  Fixed.
	    Similar to bug #15656.

	#102186 (Bug 21467) **
	    'p4 revert -a' could incorrectly report "no file(s) opened
	    for edit".  This was introduced by change #94600 which prevents
	    file type changes from being reverted with the '-a' flag.
	    This has been fixed.

	#100015 (Bug #21070) **
	    'p4 login' with a very high value for timeout would always 
	    create a new server ticket, rather than extending it.  This
	    would mean that logging in from one machine would effectively
	    log you out of another.  This has been fixed.

	#99861 (Bug #21033) **
	    'p4 integrate' no longer needlessly locks the db.revsx
	    table (the revision table for spec depot entries), so that
	    long running 'integrate' commands don't block spec updates.

	#99829 (Bug #20599) **
	    Shell expansion of 'p4' command line arguments no longer
	    occurs when the command invokes a trigger.

	#95339 (Bug #19759) **
	    p4 print without the -o option can constructively use the
	    proxy's cache now.  For this to work both the server and the
	    proxy must be upgraded.

	#94979 (Bug #4169) **
	    The error "Client 'client' can only be used from host
	    'host.com'" would also be generated if the hostname was case
	    mismatched.  This check has now been made case-insensitive.

	#94951 (Bug #1138) **
	    'p4 revert' has been changed to prevent a user from reverting 
	    a file opened by different user.

	#94600 (Bug #11390) **
	    'p4 revert -a' default behaviour has been changed so that it
	    no longer reverts files that have been opened with a different
	    type.

	#94008 (Bug #20002, #9869) **
	    Starting 'p4d', or performing checkpoint, journal, or
	    recovery options on a depot with upgrade counter = 0 will 
	    generate the informational message "Perforce db files
	    in 'P4ROOT' will be created if missing...".

	#93944 (Bug #14864) **
	    'p4 diff -sl [ file[rev]... ]' displays unopened files with the
	    status of 'same', 'diff', or 'missing' as each file is compared
	    to its revision in the depot. When used in conjunction with
	    '-f', this command may show this diff summary for all files in
	    the file argument, including opened files.

	#93514 (Bug #18555) **
	    The Spec depot now handles concurrency correctly. Multiple
	    changes to a spec occurring at the same time should no longer
	    result in missing revisions. 

	#93503 (Bug #20111) * **
	    The file types "text+C" and "text+F" are now treated by
	    'p4 diff2', 'p4 resolve' using merge, and 'p4 describe'
	    as text files. Now files of these types can be compared and
	    merged.

	#93286 (Bug #18580, #19128) **
	    'p4 depot' will not save a depot spec unless the Map entry 
 	    contains a trailing set of ellipses. The trailing ellipses
 	    is the only wildcard allowed. 

	#90843 (Bug #14813) **
	    jobspec fields which are specified as 'always' will have the 
	    read-only nature of the field enforced by the server unless 
	    the -f flag is used.  Since the server will populate these 
	    fields upon commit, any user data will be lost. This behavior 
	    can be used to prevent most job clobbering situations by 
	    including an always field of type date (e.g., a field for
	    LastModifiedDate). 
	    
	#90571 (Bug #19566) **
	    'p4 labels file[revrange]' can block other Perforce commands
	    that need to update the db.domain table.  This problem has
	    been fixed by early release of this table lock. 

	#90261 (Bug #19649) *
	    p4 print -o would fail when the result file specified
	    is a device such as /dev/null or /dev/fd/1. 

	#89366 (Bug #11188) **
	    Wildcards (..., *, or %%x) are no longer allowed to be
	    right next to each other in file arguments or views.
	    Putting them together serves no useful purpose and consumes
	    CPU as the server tries to deal with the combinations.

	#89167 (Bug #18182) **
	    Excessive use of ... wildcards in client or branch mappings
	    (more than a few mapping lines with more than one ... in
	    them) could cause the server to consume a lot of memory and
	    time trying to work out all the possibilities.  Generally
	    this was not the intent of the user.  Now the server has an
	    internal limit and returns an error rather than wasting time
	    when the ... wildcard handling gets excessive.  

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2005.2

	PERFORMANCE IMPROVEMENTS
    
	A number of changes have been made in the 2005.2 server that
	should result in better performance at most sites.

	Optimization of head revision operations - #79472 **

	    This release adds a new table db.revdx which when combined
	    with the other head revision table db.revhx (2005.1) gives 
	    faster access to the top revision required by some commands 
	    e.g. 'p4 sync'.  This improvement will reduce the compute
	    phase (where locks are taken) especially where files have
	    many revisions.

	Speedup for the 'integ' command - #77216 **

	    The performance of 'p4 integ' has been improved by batching 
	    its updates to benefit from the internal cache and a reduction 
	    in lock requests.  Depending on usage,  performance can be as 
	    much as 3 times faster than previous server versions.

	Early release of db.working/db.resolve during sync - #84071, #85678
	(Bug #14146) **

	    Long running 'p4 sync' commands (compute phase) will no longer
	    block 'p4 add/delete/edit' or 'p4 revert' in most cases.  

	Server Performance Tracking - #86623 **

	    The p4d server now produces diagnostic output to help identify
	    performance problems.  The new support is on by default but
	    can be turned off or adjusted with the '-vtrack=x' flag to
	    the server.  Any user commands that exceed certain thresholds
	    for resource usage (CPU, lapse time, database I/O, network
	    I/O, among other things) automatically get logged into the
	    server error log P4LOG.  The levels that can be set with
	    -vtrack=x are:

			0 turn off tracking
			1 track all commands
			2 track excess usage for a server < 10 users
			3 track excess usage for a server < 100 users
			4 track excess usage for a server < 1000 users
			5 track excess usage for a server > 1000 users

	    If -vtrack is not provided on the server command line or
	    set with P4DEBUG, the tracking level is computed from the
	    number of users listed in the server license file.

	    The exact format of the tracking output is not documented,
	    and subject to change.

	Spec depot interferes less with other commands - #86495
	(Bug #18939)  **

	    Revision entries for a 'spec' depot are now kept in a separate
	    database file db.revsx, so that long running reporting
	    commands don't block updates to user/client/branch/etc forms.

	Special handling for @changelist - #85130 (Bug #18689) **
	    The syntax '//path/file@change1,@somethingelse' now performs
	    better in many common cases.  Previously, the server would
	    search based on changelist number or file path according to
	    hard-coded rules.  This worked poorly in a few common cases:
	    both '//singlefile@1,@date' and '//...@5000,5001' started
	    with the wrong search.  This left users trying odd syntax
	    to second guess the server.  Now the server adaptively tries
	    searching by change number, but if that appears to be too
	    inefficient (more than 80% of the revisions not matching the
	    path), it switches to searching by path.

	Speedup for clients with many opened files - #80624
	(Bug #8348, #8929, #8930, #8931, #13439, #14006, #14500,
	#16985) **

	    2002.1 and 2005.1 special optimizations were made to avoid
	    scans when accessing the db.have table with a depot file
	    argument (the db.have table is keyed on the client file).
	    This optimization has now been extended to the db.working
	    table (also keyed on the client file), and largely eliminates
	    the need for large scans when referring to a small set of
	    files.

	    Further, this optimization no longer depends on the client
	    view and db.have table being "in sync", often referred to
	    as "mapState 1".  Now the client view is augmented upon
	    upgrade to 2005.2 and every time the client view is changed,
	    and so mapState has been retired.

	EXTERNAL AUTHENTICATION TRIGGERS - #83081 (Bug #2398, #6730,
	#15417) **

	External authentication support is built upon the 2004.2 support
	for ticket based authentication.  When the user issues a 'p4 login'
	request the first trigger of type auth-check is executed, with the
	user's typed password on the trigger command's standard input.  If
	the trigger successfully authenticates then a Perforce ticket is
	issued.  Similarly, when the user issues a 'p4 passwd' request the
	first trigger of type auth-set is executed to set the new password
	(after the old one has been verified with any auth-check trigger).
	The user name is available as %user% to be passed on the trigger
	command line.

    UTF-16 SUPPORT - #85454 (Bug #1536) *

	When the server is in unicode mode, clients can support UTF-16
	as a P4CHARSET setting.  Details in i18nnotes.txt.

--------------------------------------------------------------------------

Minor new functionality in 2005.2

	#86443 (Bug #11924) **
	    When using overlay mappings, adding a file on the overlay
	    when a deleted file is present on the non-overlay mapping
	    would give a file name changed error.  Fixed.

	#86149 (Bug #18030) **
	    Jobs saved in the special 'spec' type depot are now updated
	    automatically if their contents are changed with 'p4 fix',
	    'p4 change', or 'p4 submit'.  The most likely automatic
	    changes are those to the 'Status:' and 'Date:' fields.
	    Previously the 'spec' depot was only updated by direct edits
	    with 'p4 job'.

	#85670 (Bug #15369) *
	    Character set translation failures during file transfers now
	    report a line number near the first failure.  Also, we now
	    inspect the first 8192 bytes of a file to determine if it
	    is a likely unicode vs text or binary file.

	#83894 **
	    Job fields marked as being 'always' updated are now updated
	    when a fix is added or deleting to the job using the 'p4 fix'
	    or 'p4 changelist' commands, or when a changelist affecting
	    the job is submitted with 'p4 submit'.  This is in addition to
	    being updated when the job is updated directly with 'p4 job'.  
	    Previously (but never clearly documented) the 'always' fields 
	    were updated only upon the change of status due to 'p4 fix'
	    (with a committed changelist) or 'p4 submit'.

	#83599 **
	    The trigger names in 'p4 triggers' have been renamed so as
	    to clarify their purpose.  The old trigger names 'submit',
	    'content', 'commit', 'in', 'out', 'save', and 'delete' are
	    still recognized but the new names 'change-submit',
	    'change-content', 'change-commit', 'form-in', 'form-out',
	    'form-save', and 'form-delete' are preferred.

	#82165 (Bug #15773) **
	    'p4 monitor show -e' and server log output will display a
	    version string appended to the program name. If a client's
	    version string is not available to the server (as set
	    via 2005.2+ ClientApi::SetVersion()), the version string 
	    defaults to the protocolClient value.

	#80660 (Bug #16132) **
	    'p4 opened -a file' and 'p4 opened -c change' have both been
	    optimized to avoid a wholesale scan of the db.working table.

	#80493 (Bug #15451) **
	    The new 'p4 annotate -i' flag follow branches, just as 
	    'p4 filelog -i' does.

	#78928 (Bug #17244) * **
	    Unicode type files could be submitted to a depot with
	    a leading Byte-Order-Mark (BOM) which is not translatable
	    into any character set other than UTF-8.  Now, such files
	    will sync into other character sets ignoring leading
	    Byte-Order-Marks.  This may cause discrepancies with
	    p4 diff -se or -sa for such files.

	#77727 (Bug #8946) **
	    The new option 'p4 add/edit/delete -n' just displays the
	    files that would be opened without actually opening them.
	    
	#76458 **
	    'p4 sync' now sports a '-k' option.  This (keep) files
	    option updates the server so that it appears that a client
	    workspace already has the file(s) requested.  Using this
	    flag prevents files from being moved to the client workspace.

	#76292 (Bug #16275) **
	    'p4 revert' now sports a '-k' option.  This (keep) files
	    option clears the open file action maintained by the server 
	    but does not change files in the client workspace.

	#75760 (Bug #8996) *
	    Three Russian/Cyrillic character sets added.  They are
	    'koi8-r', 'cp1251' (Windows Code Page 1251), and
	    'iso8859-5'.

	#73787 (Bug #16286) **
	    'p4 annotate' now sports the -db and -dw flags from 'p4 diff'
	    et al: ignore whitespace changes, and ignore whitespace 
	    altogether.

Bugs fixed in 2005.2

	#101271 (Bug 21127) **
	    Memory leak fixed.  A server running with spec depot enabled or
	    additional local depots would leak memory.  Typically this
	    would be 20 bytes for each additional depot multiplied by the
	    number of file arguments.

	#99156 (Bug #20905) **
	    Servers built with the SmartHeap memory manager (linux,
	    windows),  could require input from the user when the server
	    was unable to obtain more memory.  On linux this could happen
	    when the server was holding locks, which (eventually) brings
	    the server to a halt. The default behaviour has been changed
	    so that the server does not prompt when out of memory.

	#94339 (Bug #20192) **
	    'p4 changes @changelist' could be slower in 2005.2 than it
	    was in 2005.1 due to an optimization intended to speed up
	    changelist ranges (@changelist,changelist).  The optimization
	    has been tuned to be no slower than 2005.1.

	#92200 (Bug #19757) ***
	    The proxy would not properly expand the Date and DateTime
	    keywords for file submitted with modtimes during daylight
	    savings times while the submit actually happened not
	    during daylight savings or vis versa.  Fixed.

	#91541 (Bug #19576) *
	    Temporary files were sometimes left in client workspaces
	    by MacOS X clients.  Fixed.

	#90419 (Bug #19600) * **
	    'p4 -G jobs' lost the 'specdef' field when tagged output
	    for forms was implemented in 2005.2. Now this field has
	    been restored.

	#90017 (Bug #16559, #18645) **
	    'p4 submit' using files with invalid or missing file
	    modification dates will no longer cause file corruption.
	    Instead, an error will be generated and the submission
	    will fail.

	#89981 (Bug #19465) * **
	    Add new environment variables P4DIFFUNICODE and
	    P4MERGEUNICODE which are like P4DIFF and P4MERGE
	    for invoking external tools from the command line
	    except that when the file is of type unicode and
	    the server is in unicode mode, the character set
	    is passed as an argument to the commands those
	    variables point to.  This can allow p4merge to be
	    invoked from the p4 command line tool on UTF-16 files
	    successfully.

	#89793 (Bug #19529) *
	    Arguments to commands defined in P4MERGE or P4DIFF will
	    no longer cause the commands to fail to execute. This
	    behavior was due to a short-lived bug only in the beta 
	    release, and has now been fixed.
	    
	#89471 (Bug #19463) **
	    'p4 edit/delete/add' of a file in a spec depot should not
	    be allowed, this has been fixed.
	    
	#89406 (Bug #19455) **
	    Deleting a form when a spec depot has been enabled will 
	    result in a server crash, this has been fixed.

	#88299 (Bug #19044) **
	    The server was not updating the filesize or digest for spec 
	    depot files.  This has been fixed,  older files can be updated
	    by using the 'p4 verify -u' command.

	#86806 (Bug #17563) **
	    'p4 label' or 'p4 client' could cause the server to crash 
	    if the label or client name contained the "%%" wildcard
	    character sequence. Now this character sequence is not allowed
	    in the name of any new labels, clients, branches or depots. 
	    Any entity which already has this illegal character 
	    sequence in its name is still accessible.
 
	#86505 (Bug #15937, #17684, #18435) **
	    p4 submit -r would leave branched files read-only while
	    also open for edit.  Now such files are made read-write.
	    p4 submit -r should now leave open all submitted files which
	    remain on the client after a submit.

	#86189 (Bug #18844) * **
	    p4 resolve would wrongly duplicate a common insert
	    in some cases.  Fixed.

	#85995 (Bug #18780) *
	    'p4 -x <argumentfile>' would report unknown client
	    in the server log file for argument processing
	    after the first 128 arguments which are run in second
	    and subsequent commands.  Fixed.

	#85795 (Bug #17823) **
	    Importing from a remote depot could result in an unusable
	    db.rev archive file. This would require a certain combination 
	    of multiple integrations where the last is an ignored local
	    depot file.  Subsequent access to the newly submitted revision
	    would result in the error "Can't map //remotedepot/filename 
	    to archive!".  This has been fixed.

	#85674 (Bug #18652) **
	    An integrate command may miss that a delete needs to be
	    integrated when there are multiple levels of indirection
	    between the source and target.  Fixed.

	#85630 (Bug #18819) **
	    A narrow performance problem involving labels, the "*"
	    wildcard, and directories with lots of subdirectories has
	    been fixed.

	#85445 (Bug #18053, #18433) **
	    'p4 -R' now works with marshalled input from Ruby 1.8.x
	    
	#84221 (Bug #13451) **
	    A revision specification of @change,change against a remote
	    depot works again.  For a long time using a change number
	    in the revision syntax for remote depot files would use the
	    local change index against the remote files.  Now it filters
	    remote files using their own change numbers.

	#84221 (Bug #18441) **
	    A revision specification of pattern@1,@date now uses a lot
	    less memory, related to the number of files matching 'pattern'
	    rather than all files since change 1.

	#81300 (Bug #17199) **
	    Really long arguments (>2048 bytes) to 'p4 dirs' could crash
	    the server.  This has been fixed.

	#80547 (Bug #17798) **
	    'p4 logout -a' now removes the ticket stored on the client
	    as well as the ticket stored on the server.

	#80127 (Bug #17727) **
	    'p4 logout' can now be executed if the user has a valid ticket
	    but it has expired.  Previously the user would have to run
	    'p4 login' first.

	#76684 (Bug #16957) **
	    'p4 fstat' now accepts multiple -O and -R flags.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2005.1

	PERFORMANCE IMPROVEMENTS

	A number of changes have been made in the 2005.1 server that
	should result in better performance at most sites.

	Speedup for the 'dirs' command - #69248 (Bug #7068) **

	    The performance of the 'dirs' command is now no longer
	    affected by the number of files deleted at their head
	    revision. Since the 'dirs' command is used by GUIs such as
	    P4V and P4Win, browsing through portions of the repository
	    with files deleted at their head revision will now be
	    faster. This speedup uses the new db.revhx table.

	Speedup for the 'obliterate' command - #72594 (Bug #15047) **

	    A number of changes have been made to reduce the fixed
	    overhead of 'p4 obliterate'. Now the overhead is more or
	    less relative to the number of clients and labels, rather
	    than the size of the clients and labels. Also improved is
	    the handling of lazy copies in that obliterating a revision
	    that is the source of many lazy copies no longer creates
	    many revisions in the versioned files tree. This speedup
	    uses the new db.archive table and leverages the MapState
	    simplification (see below).

	Btree passive reorganization - #68043 **

	    As updates are made to the db.* tables, the server now
	    reorganizes portions of the table as necessary to maintain
	    sorted order across contiguous leaf pages. These passive
	    reorganizations will result in better performance when
	    scanning portions of the table since physical movements
	    of the disk heads will be reduced and readahead will be
	    more effective. This feature should reduce the need to
	    periodically recreate the db.* tables from a checkpoint
	    to improve performance, but may increase the size of
	    some of the db.* tables due to the allocation of new
	    contiguous pages.

	MapState simplification - #72631 **

	    Using depot syntax for a number of commands ('p4 sync', 'p4
	    have', 'p4 fstat') has been sped up considerably in certain
	    cases. Previously, such commands were fast only if the
	    client workspace was 'in sync' with its current client view.
	    This limitation no longer applies. Now the results of the
	    first scan after changing the client view are used to avoid
	    further costly scans, whether the client is in sync or not.

	SPEC DEPOT - #69793 (Bug #250)  **

	A new depot of type 'spec' archives all edited forms (branch,
	change, client, depot, group, job, jobspec, protect, triggers,
	typemap, and user) into special, read-only files in that
	depot. The files are named //specdepot/type/name[suffix];
	suffix is optionally given as the 'Suffix:' field on the
	depot form. The archived forms can be accessed as any other
	file, but there is no special provision for using the forms,
	other than using the form-specific command's -i flag (e.g.
	p4 client -i). Automatic updates to a form, such as access
	times, opened files (for changes), status (for jobs), etc,
	do not change the saved forms: only those made through the
	regular form editing commands. The spec depot was introduced
	as undocumented functionality in the 2003.2 release, but is now
	fully supported.

	PARTIAL FILETYPES - #68575 (Bug #594, #4003, #6562, #6742) **

	The filetype given to 'p4 add', 'p4 edit', 'p4 reopen', and
	'p4 typemap' can now be just a partial filetype, with the
	'+modifiers' only. A partial filetype modifies rather than
	replaces the default one. For example, if a text and binary
	file are added to a location in the repository covered by a
	typemap entry specifying a partial filetype of '+l', the text
	file is added with a filetype of 'text+l' and the binary file
	is added with a filetype of 'binary+l'. See 'p4 help filetypes'
	for additional information.

	DELETE TRIGGERS - #68258 (Bug #15235) **

	Complementing the spec triggers introduced in the 2004.2 release
	is a new spec trigger type of 'delete'. This trigger will run
	prior to deleting the spec. A delete trigger can be used
	to limit when a spec is deleted. For example, a delete trigger
	can be used to prevent unauthorized users from deleting jobs.

--------------------------------------------------------------------------

Minor new functionality in 2005.1

	#72238 **
	    'p4 verify' has a new flag '-m maxRevs' which limits the number
	    of revisions which can be verified.  Using this option may
	    require several iterations before each revision has been
	    processed.

	    As of change #70719 newly submitted files will have the length
	    maintained by the server.  Previous revisions will have their
	    length computed when running verify with either the '-u' or
	    '-v' option.  It is recommended for a large repository where
	    this update could take a long time to use the '-m' option
	    when updating the metadata for the first time after upgrade.

	#71026 (Bug #15880) **
	    'p4 filelog' has a new flag '-L'.  This option produces long
	    output with a 250 character truncated changelist description.

	#70950 (Bug #15791) **
	    'p4 changes' has a new flag '-L'.  This option produces long
	    output with a 250 character truncated changelist description.

	#70906 (Bug #14912) *
	    Allow the ticket file location to be configurable.  The user
	    can now define the location of the file used by 'p4 login'
	    and subsequent connection attempts by setting the environment
	    variable P4TICKETS.  This variable, like other Perforce
	    variables can be set at the command prompt or set in a P4CONFIG
	    file or as an NT registry variable through 'p4 set'.

	    e.g	   setenv P4TICKETS /secure/myname/ticketfile	(UNIX csh)
		   p4 set P4TICKETS=c:\secure\myname\ticketfile.txt   (NT)
		

	#70719 (Bug #15844) **
	    The server now maintains the filesize in the metadata, this
	    makes the 'p4 fstat' option '-Ol' much faster.

	#70543 **
	    Remote depot access for 98.2 and 99.1 servers has been
	    dropped.

	#70419 (Bug #15810) **
	    'p4 fstat' has a new flag '-Of'.  When this option is selected
	    all revisions for the given file(s) are displayed.

	#70345 **
	    Some commands have now been given synonyms:

		synonym        command
		--------       -------
		changelist     change
		changelists    changes
		workspace      client
		workspaces     clients

	    Either name will be accepted,  however errors and form fields
	    will continue to refer to the original command name
	    irrespective of what name the command was executed with.

	#69880 (Bug #15693) **
	    'p4 fstat' adds 'desc' (change description) to its list of
	    output fields.  This field will only be displayed when the
	    option to display files affected by a given changelist number
	    '-e changelist#' is specified.

	#69803 (Bug #15676) **
	    'p4 opened' has a new flag '-C client' which limits output
	    to files opened by the specified client.

	#69639 (Bug #15599) **
	    'p4 fstat' adds 'otherChange#' to its list of output fields.
	    This field will only be displayed if the file is opened.

	#68917 (Bug #15484) **
	    'p4 fstat' adds 'digest' to its list of fields that are output.
	    This field will only be displayed when the '-Ol' option is
	    used.

Bugs fixed in 2005.1

	#89300 (Bug #19381) **
	    A Perforce server running with monitor enabled could encounter
	    problems with a multi-threaded client issuing overlapping
	    requests on the same server connection.  Under certain 
	    conditions this could lead to a server crash.  This has
	    been fixed.

	#86943 (Bug #18960) **
	    Under rare circumstances a btree passive reorganization
	    may fail with an 'insert failure'.  Fixed.

	#86558 (Bug #18951) **
	    Using mmap (memory mapped) file access for the server platform
	    AIX 5.3 has been disabled due to a problem with that O.S.
	    implementation.

	#82815 (Bug #17328) **
	    Servers running on some versions of Linux prior to 2.6.11 
	    could be prone to seeing sporadic zombie processes. Although
	    this is a Linux kernel bug this change provides a workaround
	    for those customers who cannot obtain a later release of
	    the fixed kernel.

	#82100 (Bug #18091) **
	    Failure to archive forms to the 'spec' depot were not being
	    reported to the client application, this has been fixed.

	#81216 (Bug #17960) **
	    Bug fix #80169 (update db files) could be executed for each 
	    database access instead of once.  Although this update should 
	    not pose any problems it could slightly affect performance.
	    This has been fixed.

	#81207 (Bug #17909) **
	    'p4 verify -q' would not detect a missing archive file if
	    the digest had already been computed and saved. This has
	    been fixed.

	#80631 (Bug #17752) * **
	    p4 resolve or merge tools when 'accept theirs' is chosen
	    could leave a file which did not match the server's
	    version of the theirs file.  Bad auto merges are
	    also possible.  Fixed.

	#80628 (Bug #17822) **
	    Upgrading to 2005.1 from a release older than the previous
	    2004.2 release could result in an incorrect value for a files
	    size being reported (p4v, p4ftp).   This has been fixed.

	#80169 (Bug #17732) **
	    Upgrading to 2005.1 (this release) when the server's
	    db files were created originally by a p4d version prior
	    to 2001.1 and which a checkpoint has never been recovered
	    by a server version 2001.1 or later will have database
	    update problems.  Fixed.  Once this fixed server is run,
	    you can not run older 2005.1 servers without a checkpoint
	    recovery.

	#79941 (Bug #17691) **
	    p4 filelog -i would show details of files for which
	    the user has no permissions if those files were branched
	    to files the user has access to.  Now, filelog -i will
	    silently not visit ancestor files which the user does
	    not have permission to inspect.

	#79498 (Bug #14978) **
	    Application-licensed servers cannot be accessed remotely. This
	    has been fixed.

	#79322 (Bug #16613) **
	    For certain client views 'p4 labelsync' could repeatedly delete
	    and add the same file each time its executed.

	#78873 (Bug #13509) **
	    On some platforms (linux) with 'monitor' enabled the command
	    'p4 admin stop' could hang the server.  This has been fixed.

	#77879 (Bug #17233) **
	    Indirect Integrations involving recently branched files
	    which are then deleted via integration might stop
	    propagating the delete via indirect integrations.

	#75719 (Bug #16806) **
	    Under certain circumstances and on particular server platforms
	    (Solaris) the 'Options' field of a Perforce client could get
	    corrupted when being displayed. This has been fixed.
	
	#75711 (Bug #16482) **
	    'p4 -Rc -e #changelist' could take a long time if the 
	    client view prevented any of the files in the changelist
	    from being mapped.  This has been fixed.

	#74983 (Bug #16300) **
	    'p4 job Job' against an NT server would override the same
	    storage used by 'p4 jobspec'.

	#74847 (Bug #14524) **
	    'p4 tag' would create labels with uninitialized access and
	    modification times. This has been fixed.

	#74432 (Bug #16478) **
	    Indirect integration credit was missed in certain combinations
	    of a copy from and a branch from a common ancestor.

	#74228 (Bug #16031) **
	    'p4 fstat -W' has been speeded up by removing the redundant
	    db.have client file scan.

	#73742 (Bug #16342) **
	    'p4 fstat -e #changelist -W' on some platforms would fail to
	    return the files opened in that changelist.  This has been
	    fixed.

	#73518 (Bug #16238) **
	    The filetype option 'apple+k' would fail in previous versions
	    with the error "AppleSingle/Double corrupted". This failure
	    was due to an incompatibility between the apple resource fork
	    code and the RCS keyword substitution code.  This combination
	    is prohibited and is now rejected when trying to set it rather
	    than after submit.

	#72937 (Bug #15917) **
	    Indirect integrations might schedule deletes without the
	    -Ds or -d flags when such flags would be needed.  Fixed.

	#72512 (Bug #15583) **
	    Revisions for a 'group' stored in the spec depot did not
	    contain all the users added to that group only the last ones
	    added in the last update.  This has been fixed.

	#72406 (Bug #15933) *
	    On Windows clients operating with character set UTF8 use
	    Unicode Windows APIs to get user related environment
	    variables and allow Perforce variables to supply these
	    environment values.

	#71608 (Bug #15942) **
	    Indirect Integration credit was not given for all paths
	    when more than one credit path shares intermediate
	    credit paths indirectly resulting in some unnecessary
	    integrates being scheduled or base files for merging which
	    are older than needed.  Fixed.

	#71169 (Bug #15712) **
	    The 'Timeout' field which can be set by 'p4 group' was not
	    allowing a value of 0 (no timeout).	 This has been fixed.

	#70975 (Bug #11839) **
	    Starting p4d as a service on NT would fail if upper case
	    was used for the executable name.  Fixed.

	#70890 (Bug #15719) **
	    'p4 integ' would schedule integrations which are not needed
	    when the source was a copy integration from a third file
	    which was edited into the target.

	#69841 (Bug #15602) **
	    A trigger on 'p4 change' wouldn't fire on 'p4 change -s',
	    which is used by p4win.  Now it does.

	#68886 (Bug #15469) **
	    'p4 login' IP based tickets would not work against a central
	    authentication server. This has been fixed.

	#67888 (Bug #15265) **
	    If a post-submit trigger fails then the server can incorrectly
	    issue the message "Submit validation failed -- fix problems
	    then use 'p4 submit -c <changelist>'". If no ktext files are
	    refreshed during the submit then no error message is seen at
	    all.  This change fixes both these problems.

	#67042 (Bug #15175) **
	    p4 sync <filespec>#none no longer changes permissions
	    on symlink target files (Mac OS X and Darwin only).

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2004.2

	SECURITY LEVEL (Authorization and security levels)

	The new security features introduced in 2003.2 but undocumented
	are now fully supported.
	
	Most of the changes are built upon the existing system which when
	used correctly provide adequate protection for most development
	environments.  However, this system did not provide for password
	enforcement, password strength enforcement and allowed unsafe
	practices to be established.

	2004.2 introduces the concept of a perforce server security level,
	basically the higher the level the greater level of enforcement. In
	some cases enforcing a greater security level will make the usage
	too restrictive for some sites where it simply isn't necessary.

	The new security features do not offer native data encryption. As
	in previous versions, Perforce recommends SSH or VPN as a means of
	access over insecure networks.

	Setting a security level:

	To provide backwards compatibility the default setting for security
	allows similar authorization as previous versions.  To set a
	security level in the server a super-user must set the new
	'security' counter into the system:

	e.g.  p4 counter -f security 1	(server must be stopped/restarted)

	The following is a list of the values and their action.

	security     feature/function

	0 (unset)    * 'p4 login' support.

	1	     * 2003.2+ clients enforce passwords
		     * 2003.2+ clients require strong passwords

	2	     * cannot modify password through 'p4 user'
		     * cannot modify password through 'p4 passwd -O -P'
		     * pre-2003.2 clients cannot set password
		     * pre-2003.2 clients cannot use login
		     * unverified strength passwords must be changed
		     * passwords no longer stored/retrieved from registry
		       (NT)

	3	     * 'p4 login' tickets are the only way to connect to
		       a server, passwords are no longer accepted.

	NEW LOGIN/LOGOUT COMMANDS PROVIDE PERFORCE ACCESS THROUGH TICKETS

	    The new 'p4 login' command allows a user to establish an
	    authorized connection to the Perforce server by a ticket
	    granting mechanism.  A session can be terminated by issuing a
	    'p4 logout' command.  See 'p4 help login/logout' for usage.

	    New field 'Timeout' in 'p4 group'

	    'p4 group' now has a 'Timeout' field, which can be used to
	    change the default (12 hours) login timeout value for a group
	    of users.  This value represents the number of seconds that an
	    issued ticket from the server will be valid for.

	NEW TRIGGER SUPPORT (mid-submit, post-submit and forms) (Bug #796,
	#1651, #9738, #10536)

	    'p4 triggers' now supports mid- and post-submit triggers in
	    addition to the existing pre-submit ones.  mid-submit triggers
	    happen after file transfer and use a limited set of commands
	    to access the file content via the special revision
	    specification @=change, where change is the pending changelist
	    number.  post-submit triggers happen after the commit and
	    therefore cannot stop the operation.  (Bug #1651, #1929,
	    #11861)

	    Also, 'p4 triggers' supports triggers on all forms (like 'p4
	    branch' and 'p4 user').  There are three triggers available:
	    'out', 'in', and 'save'.  An 'out' trigger is run when
	    the form is generated; an 'in' trigger is run when the form
	    is being saved, but before the server parses it.  Both 'out'
	    and 'in' can modify the form.  A 'save' trigger is run after
	    the form is parsed and validated by the server.  A 'save'
	    trigger cannot modify the form.

	NEW INDIRECT INTEGRATION DEFAULT

	    'p4 integrate' now always considers indirect integrations
	    through intermediate branches when determining that
	    files are related and what changes need to be integrated.
	    The direct/indirect option in branch specifications has
	    been removed as all integrations will be considered
	    indirect.  Related is that 'p4 integrate' may select a
	    base for merge resolution from a common ancestor which
	    is neither the source nor the target file.

	NEW SMART RESOLVE LOGIC

	    Conflict resolution with 'p4 resolve' has been changed.
	    The new logic reduces conflicting regions with more
	    complex detection of commonality of changes.

	FILEPATHS THAT CONTAIN CHARACTERS @#%* CAN NOW BE ADDED TO DEPOT
	(Bug #1339, #13270)

	    Previously the special characters "@#%*" could not be included
	    in a file submitted to the repository, instead an error would
	    be generated.

	    As of this release the Perforce command 'p4 add -f' will allow
	    these special characters to be included as part of a filepath.
	    Without the '-f' option an error message will be generated for
	    files containing wildcards.

	    Once added these files can only be referred to in their
	    formatted syntax.  For example 'p4 add foo#bar' will result in
	    a file being submitted under the formatted name 'foo%23bar',
	    notice that the '#' gets translated to its ascii hexadecimal
	    represented value '%23'.  The syntax to edit the file once it
	    has been submitted would therefore be 'p4 edit foo%23bar'.
	    Perforce commands like 'p4 have' and 'p4 fstat' will show both
	    formatted and local (filesystem) names.  These filenames will
	    of course be expanded back to their original submitted name
	    when synced down onto client machines.

	    Note that due to this change, the wildcard %d used in
	    reordering filepaths in viewspecs has now changed to %%d.

	NEW TAG COMMAND PROVIDES EASY WAY TO ASSIGN A LABEL TO A FILELIST
	(Bug #9903)

	    Similar in syntax to the more advanced 'p4 labelsync' command
	    'p4 tag' allows the user to tag files with a label without
	    requiring a client spec.  See 'p4 help tag' for further details.

--------------------------------------------------------------------------

Minor new functionality in 2004.2

	#58026 (Bug #13343) **
	    'p4 fstat' has two new flags.  The '-O' flag used to request
	    extra information that is usually suppressed and the '-R' flag
	    that is used to restrict output depending on certain criteria.
	    A number of old fstat flags have been folded into these new
	    options.  See 'p4 help fstat' for details.

	#56674 (Bug #11929) **
	    'p4 integrate -Di' allows the integrate command to find
	    a base for file merge prior to the latest add of the
	    source file.  That is if a source file was deleted and
	    recreated (via add or a branch) those revisions prior
	    to the add could provide a base for integration.  This
	    is intended to support cases where files are deleted and
	    re-added but still maintain content continuity across the
	    delete.

	#56035 (Bug #13380) **
	    'p4 submit -r' now supports reopening of files that have
	    been branched.

	#56034 (Bug #413) **
	    The 'p4 integrate' command can now determine if a base
	    for merge resolution lies on any ancestor version even
	    if that version is a file which is neither the source
	    nor the target.  The base file and version is reported by a
	    change in the output of 'p4 integrate', 'p4 resolve', and
	    'p4 resolved' if a '-o' option is given with those commands.

	#55851 (Bug #3757, #9034, #10740, #11631) **
	    The new 'p4 integrate' default of considering indirect
	    integration history allows the command to refuse baseless
	    merges while considering indirect integrations when the
	    -i and -I flags are not supplied.  Changes to help
	    descriptions and spec descriptions and problems regarding
	    integrate and branch are corrected.

	#53703 (Bug #13258) **
	    'p4 fstat' has a new flag '-e #changelist'.  When this option
	    is selected only files that are affected by this changelist are
	    displayed.

	#53137 (Bug #13259) **
	    'p4 fstat' adds 'type' to its list of output fields, this
	    field will only be displayed if the file is opened.

	#52894 (Bug #13184) **
	    'p4 labelsync' is now atomic in its update of the label table.
	    Previously if a user issued a 'p4 sync //...@labelname' command
	    during a labelsync operation (of the same label) it could be
	    possible to get an inconsistent sync.

	#52329 * **
	    Files stored as compressed binary (most binary files) are
	    now left compressed over the wire and uncompressed only when
	    they reach the client.  (Previously, they were uncompressed
	    on the server and sent to the client that way.)  This new
	    behavior is not optional, and is unaffected by the client's
	    "compress" option, which continues to compress all data
	    between the client and server.

	#51751 (Bug #12737) **
	    'p4 monitor' now sports a '-e' flag to allow superusers to
	    see more about a users environment.  The '-e' flag adds the
	    client program name (if known), client name and host address
	    to the list of fields displayed.

	#50570 *
	    P4CHARSET now supports iso8859-15 which is essentially latin-1
	    with the Euro currency symbol.

	#50459 **
	    Overlay (+) mappings are now supported in client views.
	    This allows a client to overlay a sparse tree from the
	    depot on top of a denser on already mapped on the client.
	    Overlay mappings are specifically prohibited in branch views,
	    and have no special effect in label or other views.

Bugs fixed in 2004.2

	#81443 (Bug #17890) * **
	    During change resolution via p4 resolve an 'accept theirs'
	    could leave a file on the client which does not match
	    the server's original 'theirs' file.

	#80025 (Bug #17695) * **
	    Problem with resolve/merge duplicating code when the
	    base file has extra lines at the end that the source
	    and target file do not has been fixed.  

	#79733 (Bug #17654) **
	    Triggers were inheriting too many handles from the
	    server process on Windows and could exhaust a system
	    wide handle resource limit.  Critical handles no longer
	    inherited.

	#79315 (Bug #17399) *
	    P4 clients on MacOS X which change files not owned by
	    the user who runs the p4 client may encounter crashes and
	    many temporary files left after the crash.  Error messages
	    will now be produced.

	#76944 (Bug #17078) **
	    Prevent server from exiting prematurely on encountering a lock 
	    upgrade problem.

	#76880 (Bug #16991) * **
	    Resolve logic to expand common change regions could cause
	    crashes or bad merges.  Changed to only rarely expand common
	    changes when changes align at start.

	#76510 (Bug #16959) **
	    'p4 fix' of a job against a nonexistent changelist could
	    result in a server crash.  This has been fixed.

	#74828 (Bug #16596) **
	    Resolve might cause a server crash or repeat the whole
	    file contents as a conflict in rare cases.  Fixed.

	#73359 (Bug #16118, #16425, #16248) **
	    Bug fix #72493 introduced another possible crash.
	    Revised that fix to avoid the crash.  Diffs may report
	    slightly differently with this revised fix.

	#73084 (Bug #16205) **
	    With maxResults or maxScanRows set with 'p4 group', changing
	    your client view to map files to a different location could
	    result in being unable to refer to existing files in the
	    client workspace using depot syntax (//depot/name).  This
	    has been corrected.

	#72935 (Bug #15831) **
	    Trying to sync a compressed binary file from a pre-2004.2
	    remote server would result in the error:

	    "Operation 'rmt-FileFetch' failed.
	    Unsupported librarian file type 7!"

	    This has been fixed.

	#72642 (Bug #16141) **
	    Integrate might miss files which need integration
	    when there is a mix of cherry picked integrations
	    and those which are not in intermediate integrations
	    when searching for indirect integration credits.
	    Fixed.

	#72638 (Bug #16142) * **
	    Resolve might not detect conflicts when the two files
	    have a change which starts as a duplicate, becomes
	    a conflict, then one file has a change.  Fixed.

	#72493 (Bug #16118) * **
	    Resolve might cause the server to crash.  Crash was due
	    to reading past the end of the yours file.  Fixed.

	#71759 (Bug #15968) * **
	    The new resolve logic might cause the server to crash.
	    Would happen on very complex merges with overlapping
	    changes and similar regions.  Fixed.

	#71497 (Bug #15930) * **
	    The new resolve logic might loop consuming all CPU in the
	    server or merge tool when the two files being merged
	    are substantially the same but with many small fragments
	    in common with the base.  Fixed, but more cases may be
	    reported as conflicts than before this fix.

	#71324 (Bug #15597) **
	    The variable '%change%' for submit triggers is no longer
	    available.  This change corrects this omission.

	#70948 (Bug #15867) * **
	    The new resolve logic might loop consuming all CPU in the
	    server or merge tool when blocks of lines are shuffled with
	    few actual new lines or lines really removed.  Fixed.

	#70343 (Bug #15751) * **
	    The new resolve logic might drop a line in the following
	    situation:

		* There is a change common to the 'theirs' and 'yours'
		  files.

		* Just after that change a line in all files matches
		  a line at the end of a change in one but not both
		  of the 'theirs' and 'yours' files.

	    When this problem happens that common line is lost at end
	    of the insert block which is not common.
	    Servers with versions between 69424 and this fix actually
	    reported a conflict in this case and the conflicting
	    base case would report lines already merged.  Fixed.

	#70281 (Bug #15756) **
	    'p4 obliterate' cannot distinguish between an already deleted
	    archive file and failure to undo a lazy copy due to lack of
	    disk space, this can lead to archive data loss.  This has been
	    fixed by backing out change #45574.

	#69739 (Bug #15657) **
	    'p4 monitor show' could crash the server on SGI due to
	    large pid value.  This has been fixed.

	#69731 (Bug #15606) **
	    Client server would deadlock with the server on a Linux
	    machine.  Reverted change 55835 so that we once again
	    look at the OS TCP send buffer size rather than the receive
	    buffer and we reduced the maximum expected amount of
	    returned data to 16000 bytes.  (himark limit)

	#69727 (Bug #15656) **
	    Integrations with source revisions ranges specified
	    (so called cherry picked integrations) might choose
	    the base on the target file instead of the source file.
	    Fixed.

	#69643 (Bug #15640) **
	    The handling of 'p4 sync @=changelist' accidentally changed to
	    cause files not in the changelist to be removed from the
	    client.  This syntax is used by p4win to speed up syncing a
	    single change.  Now 'p4 sync @=changelist' again means the same
	    as 'p4 sync @changelist,changelist' as it should, and only
	    affects the files in the given changelist.

	#69424 (Bug #15425) * **
	    The new resolve logic could report conflicting regions
	    as too small and those lines would appear to not
	    be conflicting.  If that happened, sometimes lines would
	    also be omitted from the end of the file.

	#69124 (Bug #15538) *
	    Due to an inconsistent implementation of a specific system
	    call on LINUX, it was possible for p4 clients such as p4v
	    to consume lots of CPU and appear to hang. This has been
	    fixed.

	#69080 (Bug #15502) * **
	    The new resolve logic could duplicate lines in the result
	    if accept theirs were selected interactively from a client.
	    Fixed, however there may be minor differences in the
	    report of fragment counts regarding differences during
	    result and differences in reported common lines.
	    Standalone GUI merge clients are affected.

	#65225 (Bug #13257) **
	    The Perforce Windows Service now shuts down normally during a
	    system reboot.  Before it was terminated by the Service Control
	    Manager.

	#62199 (Bug #11561) **
	    'p4 -G job -o' and 'p4 -R job -o' failed if the jobspec
	    contained required fields that deliberately defaulted to
	    invalid values. This has been fixed.

	#61038 (Bug #14462) **
	    Saving a client spec with view arguments to depots which the
	    user has no access (i.e. no 'list' access or better as granted
	    by 'p4 protect') could cause the server to crash.

	#60787 (Bug #14431) **
	    Some passwords greater than 16 characters would not be
	    recognized after being set by the user. This has been fixed.

	#60299 (Bug #14461) **
	    The server will now recognize a license file called
	    "license.txt" as well as the default one "license".  This will
	    make installation easier on Windows platforms where often the
	    file has to be renamed before the server can be started
	    correctly.

	#59047 (Bug #13954) **
	    Archive files with redundant versions of revision text and
	    ancestral revisions of such a revision can be read properly.

	#58393 (Bug #7096, #11534) **
	    Mac OS X now uses Unix permissions instead of HFS locking
	    to prevent edits to a file. If it detects a file has the HFS
	    lock set, it will convert it to the new system. HFS locks will
	    never be set by Perforce.

	#58391 (Bug #13639, #13640) **
	    Syncing or opening links for edit will no longer change
	    the flags on the files pointed to by the link, but will
	    affect the link itself. Mac OS X only.

	#58964 (Bug #14229) **
	    Archive files with missing revision contents but revision
	    listed in archive header will no longer crash the server.

	#57966 (Bug #14141) **
	    Jobs with empty names can no longer be created (but they can
	    be deleted).

	#57268 (Bug #13931) **
	    'p4 login' tickets would not work against a proxy server,
	    this has been fixed.

	#57034 (Bug #13096) **
	    After 'p4 verify -u' had been used against the revisions in a
	    spec depot, all new revisions would be reported as 'BAD' by
	    'p4 verify'. This was caused by the server incorrectly reusing
	    the checksum of the previous revision. This fault has now been
	    fixed.

	#57029 (Bug #4796) *
	    Client connections would fail if P4PORT specified a hostname
	    starting with a digit. This has been fixed.

	#56972 (Bug #13803) **
	    'p4 dirs' is no longer limited by the number of directories
	    it can report.

	#55835 (Bug #13364) **
	    Client server would deadlock if the server's operating
	    system reported more TCP buffer space available than
	    was really available typically happens if a server has
	    been configured with very large TCP buffers.  p4d is now
	    more conservative and tries to keep less than 30000 bytes
	    expected in its receive buffer.  Also, measure the OS
	    TCP receive buffer rather than the send buffer for this
	    setting (himark limit).

	#55389 (Bug #13628) **
	    Under certain conditions where old tempobjs and new tempobjs
	    were being submitted together it was possible that some of
	    the new tempobj archive files would not be deleted.  This
	    has been fixed.

	#54731 (Bug #13279, #4104) **
	    During a 'p4 submit' operation it was possible for another
	    Perforce client (same P4USER, same P4CLIENT) to interfere
	    with the operation by (for example) reverting files currently
	    being submitted.  Checks have now been put in place that make
	    sure that this cannot happen. Should such a change be detected
	    'p4 submit' will issue the error message "Files newly opened or
	    reverted during submission" and abort.

	#54050 (Bug #13346) **
	    Missing '%' character in a 'p4 triggers' command string could
	    cause a server crash during a submit.  This has been fixed.

	#53436 (Bug #13228) * **
	    Text file diffs would rarely produce non-optimal diffs
	    on small files with short lines.

	#51219 (Bug #12789) **
	    Merely adding or removing a "-" to the mapping of a trigger
	    table line of 'p4 triggers' would fail to be recognized as
	    a change to the table.  This has been fixed.

	#50451 (Bug #1445) **
	    By remapping a file opened for edit to another depot file,
	    and then syncing that depot file using depot syntax, it was
	    possible to forget that the file was opened.  This has been
	    fixed.

	#50435 (Bug #2127) * **
	    'p4 diff2' now always displays '<none>' to indicate "no file".
	    Previously '< none >' was used on the left side.  Users
	    requiring the old behaviour for scripts or applications can set
	    the protocol variable "api" to a pre 2004.2 value for example
	    -Zapi=56.

	#50078 (Bug #13730) **
	    'p4 client' and similar commands that edit specs could
	    cause a server crash if a view argument was preceded
	    by a double-quote with no matching end quote.  This
	    has been fixed.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2003.2

	Performance Improvements

	2003.2 incorporates a number of changes addressed at the
	performance of large installations.  While these changes were
	tested against a server of 1M files they should, of course,
	benefit all servers to some degree.

	Optimization for frequent syncs - #47694 **

	    A narrow optimization was made for large client workspaces
	    that do frequent 'p4 sync' commands, typically automated
	    build or test client workspaces.  The syntax 'p4 sync
	    @changelist,#head' now makes use of a database index to make
	    its speed related to the number of files affected since the
	    named changelist, rather than the number of files already
	    in the client workspace.

	    To take advantage of this, scripted build or test clients
	    must remember a recent changelist number and sync to changes
	    since that changelist.  The provided changelist can be
	    earlier than that previously synced, but the closer it is
	    the faster.

	    This optimization is targeted towards automated client
	    workspaces, because they are in a position to track a recent
	    changelist number.  Further, interactive users typically
	    don't sync all of a large client workspace at once.

	Label use speedups - #47813, #47771 (Bug #11540, #7225) **

	    Specifying revisions using file@label,label, where the label
	    doesn't contain the named file, no longer causes quadratic
	    behavior.

	    Specifying revisions using @label, where the label doesn't
	    contain revisions from a remote depot, will no longer access
	    the remote depot.

	Locking and memory use improvements - #47939, #47402, #46797
	(Bug #9893) **

	    Concurrency and memory use on 'p4 sync' and 'p4 integrate'
	    have been improved by freeing up temporary resources earlier.

	    Subtle database locking improvements have been made.
	    Previously, any command that could expect a revision
	    specification locked tables (such as db.have and db.label)
	    in anticipation of needing them.  Now they are only locked
	    if the command actually makes use of them by including a
	    @client or @label revision.

	    'p4 sync' now batches its updates to benefit from the internal
	    cache and reduce lock contention.

	Speedups for large client views and protections tables - #48061 **

	    Large client views or protection tables should no longer slow
	    'p4 sync' or 'p4 integrate' quite so severely.

	Indirect integration much faster - #47038 (Bug #10587) **

	    Performance of 'p4 integrate -I', which looks at intermediate
	    integrations when determining a base, has been significantly
	    improved.  Its performance should now be similar to the
	    normal direct integration only case.

Minor new functionality in 2003.2

	#50484 **
	    'p4 annotate' now sports a -c flag: output change numbers
	    instead of revision numbers with each line of the file.

	#48532 (Bug #11969) **
	    Depots to which the user has no access (i.e. no 'list' access
	    or better as granted by 'p4 protect') no longer show up in
	    the output of 'p4 depots'.  Nor do they appear in the default
	    branch, client, and label views.

	#47719 (Bug #2696) * **
	    The MD5 digest (fingerprint) of files are now computed and
	    stored during submit.  For best performance, use both a new
	    2003.2 client as well as server, as the new 2003.2 client
	    programs offload the MD5 computation from the server.

	#47373 (Bug #11639) *
	    'p4 diff -db|-dw' now ignores line-ending differences as
	    well as whitespace.  This is very useful when used in a
	    mixed platform environment.

	#46947 (Bug #4654) *
	    'p4 diff' can now ignore line-ending differences when used
	    with the flag "-dl". This is very useful when used in a
	    mixed platform environment.

	#46649 **
	    'p4 integ' has an additional option -D<flag>, which allows
	    the user to specify whether source or target deleted revisions
	    are okay to integrate around.  See 'p4 help integ' for
	    further details.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2003.1

	2003.1 includes a number of as yet undocumented internal changes
	required for versioning and configuring of p4 specs.

	NEW MONITOR COMMAND DISPLAYS STATUS OF RUNNING P4 PROCESSES -
	#41063 (Bug #2931, #9889) **

	    The new 'p4 monitor' command displays the status of current
	    running p4 processes.  It is functionally similar to the UNIX
	    'ps' command.  A perforce administrator can also use monitor
	    to terminate long running processes.

	    See 'p4 help monitor' for usage.

Minor new functionality in 2003.1

	#43840 (Bug #5547) * **
	    'p4 resolve -a' of a binary file where either "yours" or
	    "theirs" has changed from the base now does an automatic
	    "accept theirs/yours", a conflict will still require manual
	    selection.  Interactive resolve will now suggest "at/ay" as
	    appropriate.

	#39123 (Bug #9887) **
	    The new option 'p4d -c command' runs the command while the
	    database tables are locked.

	#38864 (Bug #3224) **
	    'p4 changes' has an additional option "-t" when specified
	    will display the time as well as the date.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2002.2

	INTEGRATE ACROSS DISTANT BRANCHES - #35537 (Bug #413, #9323) **

	    'p4 integrate' now fully handles merging changes between
	    branches that don't have a direct parent/child relationship.
	    This occurs often when, say, both a release line and a
	    development line are branched from a main line and changes
	    must be merged directly from the development line to the
	    release line.

	    Previously, users had to rely on instructions in technical
	    note #9 to ensure that the Perforce server chose the right
	    base revision for merging.

	    Now an updated option to 'p4 integrate' does the work.  The
	    '-I' option looks for "indirect" integration history through
	    intermediate files when determining the base for merging.
	    This makes it able to handle files distantly related by
	    branching, not just those with a direct parent/child
	    relationship.

	    The new branch option 'indirect' implies 'p4 integrate -I'
	    for the branch, so that it need not be passed on the command
	    line.

	    While it is harmless to use the '-I' flag for directly
	    related branches, it is slower.

	    See 'p4 help integrate' and 'p4 help resolve' for updated
	    descriptions of their operation.

	NEW ANNOTATE COMMAND SHOWS HISTORY OF LINES IN A FILE - #35149
	(Bug #574) **

	    The new 'p4 annotate' command displays the lines of a file
	    along with the number of the revision that introduced each
	    line.  It is functionally similar to the CVS annotate command,
	    except that it has the option to show deleted lines and
	    note both the revision of introduction and deletion.

	    See 'p4 help annotate' for usage.

	SHARING CLIENTS USING MULTIPLE CLIENT ROOTS - #34879 (Bug #4471,
	#6200, #6243, #6275, #6521, #7268) **

	    Client workspaces that are shared across multiple platforms
	    can now be better accommodated by the ability to specify
	    multiple client roots.  If the same workspace is accessed
	    from different hosts, the same set of client workspace
	    files can appear with a different root directory.

	    Previously, only one root could be given in the client spec,
	    and the user had to change it manually as he moved among
	    platforms.

	    Now 'p4 client' supports up to three (3) client roots, one
	    main (named "Root") and two alternates (named "AltRoots" ).
	    The client's current working directory is tried against all
	    three, and the first one that matches is used.  If none
	    match, the main is used anyhow.  'p4 info' reports the
	    applicable root.

	    This support allows for client roots shared via multiple
	    UNIX paths with symlinks, shared via NFS or Windows shares,
	    or even between MacOS Classic and MacOS X.  When used with
	    the 'p4 client' LineEnd 'share' option, client workspaces
	    can be effectively shared between UNIX and Windows.

	    See 'p4 help client' for details on using multiple client roots.

	SPRUCING UP DIFFS

	The various commands that diff files have seen some enhancements
	to make them more compatible with the GNU diff and patch programs.

	Ignoring whitespace - #31144, #31078 (Bug #879, #1671,
	#1932) * **

	    'p4 diff', 'p4 diff2', 'p4 describe', and 'p4 resolve' now
	    can ignore whitespace changes, as the GNU diff does.
	    The -db flag ignores changes in horizontal whitespace, and
	    the -dw flag ignores horizontal whitespace altogether.

	    'p4 resolve' also passes the flags to the diff option in
	    resolve dialog.  Note that 'p4 resolve' will use text from
	    the client (aka "yours") file where the files differ only
	    in whitespace.

	    'p4 diff' requires a p4 client upgrade; 'p4 diff2' and 'p4
	    describe' require a p4d server upgrade.  'p4 resolve' requires
	    both.

	Patch-friendly output - #35143 (Bug #380) **

	    'p4 diff2 -u', which produces more patch-friendly output,
	    is now supported.  It has long been present but undocumented.

	TEMPOBJ FILETYPE REDUX - #36061 (Bug #1025, #2642, #3888, #7775) **

	    The 'tempobj' filetype, which stores only the head revision
	    of the file (to conserve space), has been reimplemented to
	    remove some of the serious problems associated with using
	    this filetype.  It is now safe to use.

	    Previously, the server knew there were multiple revisions
	    but they all shared the same text.  This created problems
	    with 'p4 submit' (aborted submits would update the text
	    anyhow), 'p4 verify' (the revision fingerprint would change),
	    'p4 sync' (syncing a non-head rev would still give the head
	    rev's text), and 'p4 obliterate' (obliterating the non head
	    rev would remove the head rev's text).

	    Now the server associates text with each revision (just as
	    with non-tempobj files) and goes through the extra step of
	    purging the previous revision during 'p4 submit'.  'p4
	    filelog' will display non-head revisions as 'purged' and
	    they are treated like a deleted revision: 'p4 sync' will
	    remove the file on the client and 'p4 verify' will ignore
	    them.

	    With this change, the filetype modifier "+S" changes from a
	    storage type (uncompressed binary with only the head rev
	    stored) to a storage modifier (purge non-head revs).  Any
	    type of file (text, binary, compressed) may now take on the
	    "+S" modifier.  The filetype modifier "+M", which previously
	    indicated compressed binary with only the head rev stored,
	    has been supplanted by +S's new meaning.

	    This table might make it clearer:

		keyword		pre-2002.2	2002.2
		--------	----------	-----------
		tempobj		binary+Sw	binary+FSw
		xtempobj	binary+Swx	binary+FSwx
		ctempobj	binary+Mw	binary+Sw

		+F = uncompressed
		+S = binary head-rev only (pre-2002.2)
		+S = purge non-head-revs (2002.2)
		+M = compressed binary head-rev only (pre-2002.2)

		+w = client file always writable (all tempobjs)
		+x = executable bit set on client

	    The 2002.2 server will upgrade existing tempobj files to the
	    new.  This requires a database upgrade with 'p4d -xu'.

	NEW PROTECTION LEVEL FOR SEMI-SUPER USERS - #35832 (Bug #3037,
	#1306, #2842, #3520, #5004.  This change only tangentially
	addresses some of these bugs.) **

	    A new 'p4 protect' level 'admin' has been introduced below
	    'super' to permit many administrative commands without
	    granting total superuser access.  The commands now requiring
	    only 'admin' access are:

		    p4 branch -f
		    p4 change -f
		    p4 client -f
		    p4 job -f
		    p4 jobspec
		    p4 label -f
		    p4 obliterate
		    p4 typemap
		    p4 unlock -f
		    p4 verify

	    The commands still requiring 'super' access are:

		    p4 admin
		    p4 counter -f
		    p4 depot
		    p4 group
		    p4 jobs -R
		    p4 passwd user
		    p4 protect
		    p4 triggers
		    p4 user -f

Minor new functionality in 2002.2

	#36081 (Bug #6881) **
	    "p4 resolve" now writes its messages through the methods of
	    the ClientUser class rather than directly to stdout to allow
	    API users to capture and parse the output. This change is
	    only relevant to API users.

	#35972 **
	    'p4 resolve' now recognizes if the resulting file has been
	    edited to match either 'yours', 'theirs', or the automatically
	    merged result, and changes its default suggested action
	    appropriately.  In this way, if an external merge tool
	    produces exactly 'theirs' then 'p4 resolve' can still arrange
	    for a lazy copy in the server.

	#35391 (Bug #13, #4974) **
	    'p4 describe' of a pending changelist now includes the
	    affected files.  This fixes our oldest open bug.

	#35390 **
	    The new option 'p4 revert -n' just displays which files
	    would be reverted without actually reverting them.

	#35368 (Bug #409) **
	    Long running operations that have been canceled by the
	    client can now be detected and terminated in the server.
	    This feature may not be available on all platforms.

	#35145 **
	    The new options 'p4 files -a' and 'p4 print -a' display all
	    revisions in a revision range, rather than just the highest
	    revision.

	#35114 (Bug #553) **
	    'p4 filelog' has an additional option "-t" when specified
	    will display the time as well as the date.

	#35063 *
	    Adding support for Mac OS Roman character set in i18n mode.
	    To use, set P4CHARSET to "macosroman".

	#34972 (Bug #9359) **
	    p4 info now displays the offset from UTC of the server
	    timezone numerically and with a symbol if the symbol supplied
	    from the OS is ASCII.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2002.1

	Internationalization (I18N) and Localization (L10N)

	Release 2002.1 incorporates the I18N and L10N changes that went
	into the 2001.2 release (made available only in Japan).  As of
	2001.2, the Perforce clients and server have an optional mode
	of operation where all metadata and some file content are stored
	in the server in the UTF8 Unicode character set and are translated
	into the local character set on the client.

	Additionally, in 2002.1 all error and informational messages
	returned from the server may be localized by the Perforce
	administrator.

	See the accompanying i18nnotes.txt for a full description of
	Unicode and localization support.

	Large Installation Performance Enhancements

	A number of changes have been targeted at large installations
	(typically those with more than a million files under Perforce
	control).

	Labels Command Speedup - #30690 (Bug #6531) **

	    The "p4 labels" command when supplied with a file argument
	    would run very slowly and potentially lock the system out to
	    all users due to the significant amount of scanning that was
	    required per label.  This command has now been optimized to
	    position the rev table rather than scan when looking for a
	    match.

	Pending Changes Speedup - #29365 **

	    Pending changes in the db.change table are now split into
	    a db.changex table, to speed up the performance of p4win's
	    frequent 'p4 changes -s pending' command invocation.  This
	    requires a database upgrade with 'p4d -xu'.

	Depot Syntax Speedup - #29329 (Bug #7069) **

	    To speed p4win's frequent invocations of 'p4 fstat' on files
	    in the explorer tree, a special optimization has been
	    introduced.  Because p4win refers to files using depot
	    syntax, normally the server must scan the client's entire
	    list of files to find the named file.  This optimization
	    allows the server to find the file directly if and only if
	    the client's view still reflects the files on the client.
	    This is always the case if the client has done a full sync
	    since last changing the view.  Bottom line: if p4win's fstat
	    calls are going slow, try syncing the entire client.

	Larger Database Pagesize - #27795 **

	    The server's default database page size has been increased
	    from 4k bytes per page to 8k bytes per page.  For large
	    tables this results in more efficient packing with less
	    wasted disk space and better performance.  Existing databases
	    continue to work unchanged, but to see the improvement a
	    restore from a checkpoint is needed.

	New MaxScanRows in 'p4 group' - #27952 **

	    'p4 group' now has a 'MaxScanRows' field, which can be used
	    to limit the number of rows that can be retrieved from the
	    rev table during an operation. Use MaxScanRows when MaxResults
	    cannot help control lengthy operations (these operations
	    could typically be speeded up by defining the depot filepath
	    more precisely).

	    By default, users have no limit on the size of scans they
	    can perform.  Once a user belongs to one or more groups with
	    any limit, however, that user has the maximum of those
	    groups' limits.  This allows, for example, an administrator
	    to create a "novice" group with a low limit, thereby affecting
	    only certain users.

	    See 'p4 help group', 'p4 help maxresults' and 'p4 help
	    maxscanrows' for further information.

Minor new functionality in 2002.1

	#29455 (Bug #1066) **
	    'p4 client -t' now copies client options as well as the
	    view.  Same for 'p4 label -t'.

	#28516 **
	    Server database journalling is now always on, unless explicitly
	    turned off with P4JOURNAL=off.  Previously, journalling was
	    disabled if P4JOURNAL was unset and there was no 'journal'
	    file in the server's root directory.  The absence of the
	    journal file no longer disables journalling.

	#28028 **
	    'p4 integrate' by default now syncs the target files to the
	    head revision before integrating.  To integrate using the
	    current revision had on the client, use the new 'p4 integrate
	    -h' flag.

	#27808 (Bug #982, #1004, #1010, #5518) **
	    Jobs searching now allows for matching punctuation: in
	    addition to indexing all alphanumeric strings, the job
	    indexer now also indexes all whitespace separated words.
	    So words with embedded punctuation can be matched.  To match
	    characters that are normally jobs search expression operators
	    (=^&|()<>), escape them with a \ character.

	    When searching for words with embedded punctuation in text
	    fields, the wildcard (*) operator is useful, as English
	    words often have trailing punctuation (commas, periods,
	    etc).

	    Existing jobs must be reindexed with the 'p4 jobs -R' command
	    for words with punctuation to be found.  Warning: this can
	    take considerable time on a system with lots of jobs.  It
	    is harmless to interrupt this command or run it more than
	    once.

	#27227 (Bug #449) **
	    "p4 submit" has a new option "-r",	this causes files that
	    have been opened for 'add' or 'edit' on the submitted
	    changelist to remain open after the submit has completed.

	#26931 (Bug #2351, #5516) **
	    Labels can now contain deleted revisions.  You must give an
	    explicit revision specification in the file argument to 'p4
	    labelsync' for it to include deleted revisions, because
	    normally 'p4 labelsync' includes only files on the client
	    (and clients can't have deleted revisions).

	    By being able to contain deleted revisions, labels can be
	    better used to control the operation of 'p4 integrate' and
	    'p4 obliterate'.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2001.2

	INTERNATIONALIZATION (I18N) SUPPORT

	The Perforce clients and server have an optional mode of operation
	where all metadata and some file content are stored in the server
	in the UTF8 Unicode character set and are translated into the
	local character set on the client.

	When running in internationalized mode, all non-file data
	(identifiers, descriptions, and so on), as well as the content
	of all files of type "unicode" are translated between the
	character set specified by the P4CHARSET variable on the client
	and UTF8 in the server.

	See the accompanying i18nnotes.txt for a full description of
	Unicode support.

Minor new functionality in 2001.2

	#26052 **
	    "p4 unlock" now has a superuser option "-f",  this allows
	    a superuser to unlock any file,  usually "unlock" is restricted
	    to files locked by their owner.

	#25966 **
	    Performance of many small p4 commands issued rapidly together
	    as might happen with scripts declined in 2001.1.  Such
	    performance should be back to pre-2001.1 levels.

	#24988 **
	    The p4d server now logs the IP address of its client when
	    the connection is closed unexpectedly.

	#23682 **
	    'p4 changes' now sports -u user and -c client options, to
	    restrict the output to the named user and/or the client.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2001.1

	DEFECT TRACKING INTEGRATION SUPPORT

	In 2000.2 support was introduced for improved integration into
	external defect tracking systems.  This functionality is now
	supported for general use.

	PYTHON I/O - #21918 *
	    For ease of scripting the p4 command line client, it now
	    supports a -G flag which formats output and expects input
	    as marshaled Python dictionary objects.

	FIX STATUS - #21918 **
	    The jobs schema has been extended to include a 'fix' status,
	    which is a status associated between a job and a change.
	    When the change is submitted, the job takes on the fix's
	    status.  'p4 change', 'p4 submit' and 'p4 fix' now take a
	    -s flag to set a per-fix status, rather than using the
	    default "closed" status.

	CHANGELIST/JOB UPDATE LOGGING - #21918 **
	    The new 'p4 logger' command tracks updates to jobs and
	    changelists, enabling external scripting to export such
	    changes.  See 'p4 help logger' for more info.

	BY POPULAR REQUEST

	SELECTABLE LINE ENDING ON ALL PLATFORMS - #20967 (Bug #2207) ** *
	    For users who share workspaces among platforms with different
	    line ending conventions, the Perforce clients now support
	    all common endings (cr/crlf/lf) on all platforms (Macintosh,
	    Windows, UNIX).

	    Specifically, the client option "crlf/nocrlf" has been
	    removed and a new LineEnd field added with a more flexible
	    set of options:  mac, unix, win, local, and share.  (The old
	    "crlf" is now "local", and the old "nocrlf" is "unix").
	    mac, unix, and win force files to be read and written with
	    platform-specific line endings (cr, lf, and crlf respectively).
	    "local" reverts to the client's native format.  "share"
	    writes unix style (lf) but reads either unix (lf) or windows
	    (crlf) style.

	EXCLUSIVE OPEN FILES - #20966 (Bug #233, #594, #1944) **
	    Certain files under Perforce control are best not changed
	    concurrently: images, libraries, and other binary files that
	    are difficult or impossible to merge.  The Perforce server
	    has a new filetype modifier that disallows multiple opens
	    on the same file, serializing updates.  This modifier (+l)
	    can use be used directly on the command line (by 'p4 add',
	    'p4 edit', 'p4 reopen'), or can be used in the file mapping
	    table managed by 'p4 filetype'.  For example, this makes it
	    possible to ensure that all .gif files added are treated as
	    exclusive-open binary files.  See 'p4 help filetypes'.

	OBLITERATING OLD REVISIONS ONLY - #20978 (Bug #929) **
	    'p4 obliterate' now allows a revision range, so that you
	    can obliterate specific revisions of files.  This makes it
	    easier to clear out old, unused revisions but keep the
	    latest, active ones.

	LABEL REPORTING - #21687 (Bug #403) **
	    'p4 labels' can now take a file[revRange] argument, to limit
	    the list of labels to those with that particular file/revision.
	    This makes it easy to see what labels are on a particular
	    revision of a file.

Minor new functionality in 2001.1

	#22316 (Bug #5367) **
	    #0 is now a synonym for #none when specifying (no) revisions.

	#21725 **
	    'p4 integrated' now reports a revision range on the target
	    files, rather than just the last revision integrated.  This
	    can only occur for reverse integration records (the ones
	    that reflect a target's contribution back to its source:
	    branch into, merge into, etc), because normal "forward"
	    integration records reflect the creation of the single,
	    newly submitted revision of the target file.

	#21715 ** *
	    A new 'p4 resolve' option has been introduced: 'ae' (for
	    'accept edit').  This is the suggested and default option
	    when the user edits the file (with the 'e' option), either
	    to remove conflicts or to make any edit.  It is also the
	    option used when merges with conflict markers in them are
	    forcibly accepted.  The old 'am' (for 'accept merge') now
	    indicates a purely automated merge, without original user
	    changes.  Resolves completed with 'ae' will show up in 'p4
	    filelog' as 'edit from' records.  This new distinction
	    between 'merge from' and 'edit from' assists in determining
	    whether the change should ever be integrated back: purely
	    automated changes need not be, while original user edits
	    should be.  Now if a user makes original edits, whether by
	    using the 'e' option in 'p4 resolve' or by re-opening the
	    file for edit with 'p4 edit', they will be candidates for
	    merging back to the source file.

	#21633 **
	    The db.have table has been split, with label entries moving
	    out to the new db.label table.  This eases database size
	    constraints in two ways: first, just splitting the data
	    means the individual tables will be smaller.  Second, having
	    a separate table for labels allows for a more compact storage
	    format: the new format requires about 60% of the old space.
	    This requires a database upgrade with 'p4d -xu'.

	#21574 **
	    One of the larger database tables, db.integ, has been split
	    into db.integed and db.resolve.  This requires a database
	    upgrade with 'p4d -xu'.

	#21089 (Bug #1509) **
	    'p4 resolve -a' of a binary file where both versions are
	    identical now does an automatic "accept theirs."  If they
	    are not identical, a manual selection is still required.

	#21009 (Bug #1074, 1339) **
	    All identifiers (user names, file names, etc) may now contain
	    characters previously considered unprintable, specifically
	    those in the range 0x80-0xFF.  Normal ASCII control characters
	    (such as backspace, bell, etc), as well as #, @, %, *, and ...
	    in filenames, are still disallowed.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2000.2

	2000.2 includes a number of as yet undocumented internal changes
	for use by the Perforce Defect Tracking Integration project.

	Otherwise, 2000.2 is a bugfix only release.

Minor new functionality in 2000.2

	#19047 (Bug #163) **
	    'p4 integrate' now supports a new -t flag, which makes 'p4
	    integrate' propagate the source file's filetype to the target
	    file instead of retaining the target file's previous filetype.

	#18875 (Bug #526) **
	    The default depot ("depot") no longer must be created before
	    creating other depots.  Previously, the default depot was
	    only implicit if there were no other depots defined, and
	    creating another depot would eclipse the default one.  Now,
	    the default depot "depot" is implicitly defined as a local
	    depot with mapping 'depot/...' whenever it isn't explicitly
	    defined by 'p4 depot'.

	#18796 **
	    The 'p4 jobspec' form has changed slightly: fields that
	    allow only selected values are now listed under a single
	    "Values" entry; fields with defaults are now listed under
	    a single "Presets" entry.  Previously, for each such field
	    there was a special entry "Values-<fieldname>" or
	    "Preset-<fieldname>", but that format made it hard to
	    automate the generation of the jobspec.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 2000.1

	FILE HANDLING OPTIONS

	Mapped filetype selection - #15936 (Bug #604, #3819) ** *
	    Filetypes for 'p4 add' can now be selected based on
	    the file's name.  The new 'p4 typemap' command manages
	    a file name-to-type mapping.  If a file's name matches
	    an entry in that table, it will be used in preference
	    over the type sensed by the client program.

	    Note that this change only requires an updated server to work,
	    but old clients will wrongfully report that empty or missing
	    files are being added as text, even when the typemap is used.
	    New clients are required for warning messages that mention
	    the correct type.

	More keyword expansion - #15900 (Bug #387) **
	    More keywords are now available with ktext files:
	    in addition to $Id$ and $Header$, there is now:

		$Date$ - date of file submission
		$DateTime$ - date and time of file submission
		$Change$ - change of file submission
		$File$ - just the file name, sans revision
		$Revision$ - just the revision number, sans file name
		$Author$ - the user who submitted the file.

	    Notably absent is $Log$ (filelog).  It is still anticipated.

	    For compatibility, previously existing ktext files are now
	    named text+ko, which continues to expand just $Id$ and
	    $Header$.

	    In order to take advantage of the new keywords, files must
	    have their type changed with 'p4 edit -t ktext' and
	    resubmitted (presumably updated to include some new
	    keywords).

	    In order to produce valid values for $Change$ and $Date$ (at
	    least), the client program now refreshes ktext files _after_
	    the changed is committed, rather than just before.  If the
	    refresh is interrupted, either by network failure or the
	    user hitting ^C, files not refreshed will not be considered
	    by Perforce to be on the client filesystem, and must be
	    refreshed properly with a subsequent 'p4 sync'.

	File modification time preserved - #15891 (Bug #844, #1254,
	#2457) ** *
	    File modification times can now be preserved.  The client
	    spec's 'modtime' option continues to cause 'p4 sync' to
	    update a file's modtime, but now to the modtime of the file
	    as of the 'p4 submit', rather than the time of the 'p4
	    submit' itself.

	    Additionally, files with the new +m modifier always have
	    their modtimes set on 'p4 sync', regardless of the client
	    spec's modtime option.

	    New client executables are required for the modtimes to be
	    detected upon 'p4 submit'.  Pre-2000.1 client programs will
	    continue to use the time of the 'p4 submit' as the modtime.

	JOB SEARCHING

	Wildcards - #14534 (Bug #1190, #1414, #2262) **
	    'p4 jobs -e expr' now allows the wildcard * in its
	    expression, to allow for partial word matches.  This also
	    allows 'jobs' to check for the presence of a text field
	    being set at all ('field=*').  It also makes it easier to
	    search for all jobs except selected ones, as 'jobs -e'
	    doesn't allow a lone "not" (^) operator.  E.g.  the
	    expression 'job=* ^word' returns all jobs excluding those
	    with 'word' in it, because 'job=*' matches all jobs.  See
	    'p4 help jobview' for more details.

Minor new functionality in 2000.1

	#16617 **
	    The new option 'p4 print -o localFile' redirects the output
	    to the named file on the client filesystem.  The difference
	    between this and redirecting stdout (via the command shell)
	    is that this creates a file of the proper type (text, binary,
	    symlink, apple, xtext, etc).

	#16298 (Bug #2923) **
	    'p4 info' now reports the date, time, and timezone on the
	    server machine.

	#14126 (Bug #14126) **
	    'p4 labelsync' now supports a revision range on its file
	    argument, just as 'p4 sync' does.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 99.2

	MORE MACINTOSH FILE SUPPORT

	New 'apple' filetype - #13015 (Bug #858, #863, #2699) ** *
	    There is now an alternative mechanism for storing the resource
	    fork and type/creator information of files originating on
	    the Macintosh.  The new filetype 'apple' stores the following
	    all under a single depot file name:	 the data fork, the
	    resource fork, the Finder info (including the type/creator
	    information), and the comment string.  These files are
	    encoded into AppleSingle format for storing on the server.

	    The previous mechanism, which stores the data fork under
	    the regular file name and the resource fork and type/creator
	    information under a separate .file name with type 'resource',
	    is still available.

	    When 'apple' type files are synced onto non-Macintosh 99.2
	    clients, they are decoded into AppleDouble format, with the
	    non-data portion written into a %file.  Unlike the 'resource'
	    type .file, the %file is manifested only on the client: the
	    server only knows of the file by its normal name.

	    If a pre-99.2 client syncs an 'apple' type file, it will be
	    unaware of the encoding and get the raw binary contents,
	    which is in AppleSingle format. Users of CWPerforce 99.1
	    may want to wait for CWPerforce 99.2 before starting to use
	    the 'apple' file type.

	    It is permissible to submit AppleDouble format files from
	    99.2 non-Macintosh clients or AppleSingle format files from
	    pre-99.2 clients, but the 99.2 Macintosh AppleSingle
	    implementation decodes only DATA, RESOURCE, COMMENT, and
	    FINDERINFO entries.

	Support for Macintosh Internet Config - #11821 *
	    Internet Config (part of the MacOS 8.x "Internet" control
	    panel) is now used by 'p4 sync' on the Macintosh to map file
	    extensions to Macintosh type/creator.  This is overridden by
	    type/creator information stored in 'apple' type files or in
	    companion 'resource' .file's.

	BRANCHING AND INTEGRATION IMPROVEMENTS

	'p4 filelog' follows branch history - #12482 (Bug #599, #634,
	#1690, #2192) **
	    'p4 filelog' can now follow branch history.  If a file was
	    created by branching, 'p4 filelog -i' displays the revisions
	    of the source file (but only revisions up to the branch
	    point).  It properly handles files that were branched
	    from other files which themselves were branched from still
	    other files.

	No more 2-way text merges - #12354 **
	    'p4 integrate' now refuses to arrange a baseless merge
	    unless passed the -i flag.  A baseless merge arises when
	    both the source and target files already exist but are not
	    directly related by branching.  Previously, 'p4 integrate'
	    would schedule a baseless merge, which 'p4 resolve' would
	    then present as a 2-way text merge.

	    If 'p4 integrate' is forced to schedule a baseless merge,
	    'p4 resolve' now uses the first rev being merged as the
	    base, rather than attempting a 2-way text merge.  This
	    eliminates 2-way text merges altogether.

	'p4 integrate' resists mistaken branching - #13292 (Bug #2672) **
	    'p4 integrate' now specifically disallows branching a file
	    from a non-add revision.  This means that it will no longer
	    attempt to re-branch a source file on top of a deleted target
	    file when the source file changes.  It also won't delete
	    the target file of an integration if it has changed since
	    it was last integrated into the source.  'p4 integrate -d'
	    overrides this, reverting to pre-99.2 behavior, where it
	    was permitted to mix edits with a deleted file.

	Reverse integration records always created now - #10627 **
	    A reverse integration record (one that shows up in 'p4
	    filelog' as 'xxx into') is now created for each forward
	    integration record (one that shows up in 'p4 filelog' as
	    'xxx from').  Previously, an "impure" integration -- a branch
	    downgraded to add, or integrate downgraded to edit, or
	    integrate from multiple sources, didn't generate a reverse
	    integration record.  This was meant to signal that the
	    target file's changes still needed to be merged back into
	    the source file, but the lack of integration record was
	    confusing to users.  Now special "add into" and "edit into"
	    reverse integration records are created.  This only affects
	    reporting.

	ADMINISTRATION

	New 'p4 admin' command - #11701 **
	    The new 'p4 admin' command allows the superuser to stop or
	    checkpoint the server.  See 'p4 help admin' for command
	    details.

	Subgroups - #12240 (Bug #2301) **
	    'p4 group' now allows other groups, rather than just users,
	    to be members of a user group.

	Journal format changes - #11722, #13174 **
	    Server journal files are now marked with a version line
	    to prevent them from being used to update a database created
	    from a different checkpoint.

	    Journal files now distinguish between new records being
	    written (with the @pv@ mark) from existing records being
	    replaced (with the new @rv@ mark).

	Checkpoint naming changed - #11759 (Bug #1059) **
	    The argument to 'p4d -jc' is now a prefix for the name of
	    the checkpoint and journal files, rather than just the name
	    of the checkpoint file.  ".ckp.N" and ".jnl.N" are appended
	    to the prefix to generate the checkpoint and journal file
	    names.  The prefix path is relative to the server's root
	    directory.

	    NOTE: THIS IS A CHANGE FROM THE USE OF THIS FLAG IN 99.1
	    AND BEFORE.

	Journal only flag - #13176 **
	    'p4d -jj' copies and truncates the journal, just as 'p4d -jc'
	    does, but without making a checkpoint.  This enables a
	    checkpoint to be made offline by building a second database
	    from a previous checkpoint and the newly saved journal (and
	    checkpointing the resulting, second database).

	Server runs in background - #13167 (Bug #729) **
	    The new 'p4d -d' flag causes it to fork first before accepting
	    connections, so as to act more like a typical UNIX daemon
	    program.  The exit status of the parent indicates whether it
	    successfully started up.

	REMOTE DEPOT SUPPORT BETWEEN UNIX AND NT - #12114 (Bug #867) **

	    Remote depot interaction between UNIX and NT is now usable,
	    but still not complete.  In particular, browsing in the
	    Windows GUI is not possible because 'p4 dirs' does not yet
	    work correctly between UNIX and NT.

	LOCKING WORKSPACES TO A SPECIFIC HOST - #12409 (Bug #1242) * **

	    Client workspace access can now be restricted to a given
	    host by setting the "Host" field in the 'p4 client' form.
	    By default, new client workspaces are now created with the
	    "Host" field set.  Delete the field from the form to allow
	    unrestricted access.

	    This functionality requires a 99.2 client and server.  The
	    client will take the following as the host name, in order
	    of preference: a name passed as 'p4 -H host' on the command
	    line, the value of $P4HOST in the client's environment, the
	    client host's "hostname" (which is generally platform
	    specific).

	    The restriction is not a security mechanism, as it can be
	    circumvented with the 'p4 -H host' option.  It is meant to
	    prevent accidental misuse of a client workspace from the
	    wrong machine.

	    'p4 info' displays the client host name as determined by the
	    'p4' command.

Minor New Functionality in 99.2

	#12805 (Bug #708) **
	    'p4d -V' now uses $P4ROOT or the '-r root' option to find the
	    license file, so that it can properly display the licensing
	    information.

	    The server root directory now defaults to the current directory
	    if $P4ROOT is unset and '-r root' is not used.  Previously, it
	    was a fatal error not to provide a root directory.
	
	#12243 **
	    'p4 branch' now rejects attempts to save the default view
	    as the actual branch view.  The default view is just a sample
	    that won't work.

	#12103 (Bug #2661) *
	    The BEOS p4 client now supports symlinks (as the UNIX p4
	    clients do).

	#12073 **
	    The new 'p4 jobs -r' flag sorts jobs in reverse order by name.
	    Normally, they are sorted in ascending order.

	#11903 **
	    'p4 diff' and 'p4 diff2' now take a -t flag to force a
	    textual diff even for non-text (binary) files.  The 'p4
	    resolve -b' flag has been renamed '-t' to match.

	#11889 (Bug #601) ** *
	    The new client option 'rmdir' causes the p4 client program
	    to attempt to delete the enclosing directory if all files
	    therein have been removed by 'p4 sync', 'p4 integrate', or
	    'p4 revert'.  This action is recursive, in that if removing
	    the directory makes the parent directory empty, that parent
	    directory will be removed as well.

	#11888 **
	    'p4 filelog' now takes a '-m maxRev' flag to limit the number
	    of revisions per file output.

	#11825 (Bug #1405) ** *
	    'p4 revert' now supports a -a flag, which reverts only
	    unchanged files that are opened for edit or integrate, and
	    that don't have any resolved integration records.

	    'p4 revert' now avoids refreshing client files which haven't
	    changed.  This requires a new p4 client executable.

       #11486 (Bug #2539) **
	    A branch view that mapped a file back onto itself could, in
	    rare circumstances, cause 'p4 integrate' to attempt to merge
	    the file with itself.  Normally, 'p4 integrate' ignores
	    these self-mappings.  This confused the logic in 'p4 submit',
	    which assumed a file couldn't be integrated from itself,
	    and lead to bogus integration records and revision records
	    with null fields being created.  This has been corrected.

	#11289 **
	    'p4 flush', a command that fakes a 'p4 sync' without moving
	    files, is now part of the documented and supported command
	    list.

	#11271 **
	    Branch specifications can now be locked, via an option on
	    the branch specification, just as client and label specs
	    can be locked.

	#11197
	    'p4 diff -sx file#rev' now implies -f, namely that it will
	    do the checksum comparison even if the client has the file
	    at the named rev.  Normally, 'p4 diff' skips files if the
	    client has the named rev, but -sx is generally used to verify
	    that the client has the right text, so it makes sense to
	    force the comparison.

	#10769 **
	    You now only need 'list' access, not 'review', just to view
	    a counter with the 'p4 counter' command.  You still need
	    'review' access to delete or change the counter.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 99.1

	PRESUBMIT TRIGGERS - #8594 **

	    Pre-submit triggers are now supported.  These are commands
	    run on the server after the change is created and the files
	    are locked but prior to file transfers taking place, used
	    to provide user-validation of the change being submitted.

	    See 'p4 help triggers' or the manual for more information.

	LINE COMPRESSION - #8622 (Bug #1000) * **

	    The new client option 'compress' turns on compression of
	    the client/server connection.  Both client and server must
	    be 99.1 for this to work.  If either client or server are
	    older, this option is silently ignored.

	    Line compression's effectiveness depends on two factors:
	    the nature of the data being transferred and the speed of
	    the link balanced against the processor speed at each end.

	    Because of the repetitive nature of Perforce file names
	    (e.g.  //depot/this/that/theotherthing/...), among other
	    factors, compression yields a 10:1 gain on the basic protocol.
	    If text or binary files are being transferred, the gain is
	    roughly the same as compressing the files before submitting
	    them into Perforce.

	    Because compressing data takes CPU cycles, line compression
	    is only effective if the processors can compress faster than
	    the link can pass the data.  As a rule of thumb, compression
	    is best for WANs (wide area networks bridging remote locations)
	    and not so good for LANs (local area networks, such as
	    Ethernet).

	EDITABLE CHANGELISTS - #8744 (Bug #14) **

	    'p4 change' of a pending changelist now presents the jobs and
	    files associated with the changelist, and allows you to
	    add/delete those jobs and files.  Only files from the default
	    changelist can be added, and removing a file causes it to
	    return to the default changelist.

	    'p4 change' of a submitted changelist now presents the jobs,
	    and allows you to add/delete jobs.  Adding a job closes the
	    job as with 'p4 fix'.

	FLEXIBLE FILETYPES - #7724 **

	    User-definable filetypes are now supported: individual bits
	    that control how a file is manipulated and stored can now
	    be set when specifying the filetype during 'p4 add', 'edit',
	    or 'reopen'.  See 'p4 help filetypes' for more information.

	NEWLINE TRANSLATION SUPPRESSION - #7880 (Bug #333, #695,
	#940) ** *

	    The new client option 'nocrlf' suppresses newline translation
	    on Macintosh and Windows clients.  If this option is set,
	    text files are read and written as binary files on the client,
	    meaning that the newline is passed through untouched.
	    Normally, newline is translated to carriage-return/newline
	    on Windows and carriage-return on Macintosh.

	    Note that the Perforce server uses newlines, not
	    carriage-return/newline, in text files.  This is true even
	    with the server on Windows/NT.

	    This option works with pre-99.1 client programs, but 'p4
	    diff' and 'p4 resolve' will not diff what they think are
	    binary files, and they won't set the execute bit for xtext
	    files.  Upgrade to 99.1 clients for full support of 'nocrlf'.

	P4 DIFF2 OVERHAUL

	Summary Line - #9151 (Bug #1311) **
	    The header line has been changed to include a (one word)
	    summary indicating content or type mismatches.

	Comparing binary files - #9127 (Bug #1607) **
	    Diff2 now compares binary files and prints out the line
	    "(... files differ...)" if they are not identical.

	Quiet flag - #8494 (Bug #693, #550) **
	    Diff2 now takes a '-q' flag to suppress all output for
	    files known to be identical (because they are the same file
	    or because they were branched).  Also, 'p4 help diff2' now
	    attempts to explain the output of diff2.

	Using a branch view - #8306 (Bug #799) **
	    Diff2 can now take -b branch name to specify the pairs of
	    files to be compared.  If file arguments are also present,
	    they can further limit the files and specify the revisions
	    for comparison.

	BIG INSTALLATION ADMINISTRATION

	MaxResults avoids unwieldy operations - #8720 (Bug #1189) **
	    'p4 group' now has a 'MaxResults' field, which can be used
	    to limit the size of operations for users in that group.
	    This enables large installations to prevent users from
	    swamping the server with inadvertent, oversized requests
	    (such as 'p4 files //depot/...').

	    By default, users have no limit on the size of operations
	    they can perform.  Once a user belongs to one or more groups
	    with any limit, however, that user has the maximum of those
	    groups' limits.  This allows, for example, an administrator
	    to create a "novice" group with a low limit, thereby affecting
	    only certain users.

	    See 'p4 help group' and 'p4 help maxresults' for further
	    info.

	Access times for clients, branches, labels - #8276, #9648
	(Bug #1236) **
	    Branches, clients, and labels now all have last access dates
	    to facilitate finding and deleting old, unused ones.

	    - For branches, the last access is the last time the branch
	      was used with 'p4 integrate' or 'p4 diff2'.

	    - For clients, it is the last time the client was used for
	      any command that _required_ a client (many commands, such
	      as 'p4 describe', 'p4 changes', etc. do not), or when the
	      client was used as a revision specification (@client).

	    - For labels, it is the last time the label was updated with
	      'p4 labelsync' or when the label was used as a revision
	      specification (@label).

	Archive validation - #8587 (Bug #861) **
	    'p4 verify' now can save the MD5 digest (fingerprint) of
	    file revisions and later compare them to verify archive
	    contents.  This can be used, for example, to verify that
	    the server's archive is consistent with the metadata after
	    a restore from backup.

	    The saved digests are also used by 'p4 diff' and 'p4 diff2'
	    to avoid having to compute them for their normal operation.
	    This can considerably lighten the server load if these commands
	    are used frequently.

	    See 'p4 help verify' for information.

	Compressed checkpoints/journals - #8558 (Bug #61) **
	    The server can now generate and read compressed (gzip)
	    checkpoints and journals when the -z flag is used with -jc,
	    -jd, or -jr.  The live journal of database updates remains
	    uncompressed.

Minor New Functionality in 99.1

	#9627, #9754 **
	    'p4 integrate' now supports a '-s from' flag, which specifies
	    the source files of an integration when a branch view is
	    used (normally only the target files are allowed).  -s also
	    tells it to use the union of the branch view and its reverse
	    (with the target and source files exchanged).

	#9662 **
	    The 'p4 fstat' command, long present but undocumented, is
	    now supported.  See 'p4 help fstat' for info.

	    The 'p4 -s' flag, also long present but undocumented, is
	    now supported.  See 'p4 help usage'.

	#9260 **
	    'p4 jobs' now has a '-m max' flag, like 'p4 changes', to limit
	    the output to the first 'max' jobs.

	#9240 (Bug #1319, #1670) **
	    'p4 jobspec' has been altered to handle read-only fields,
	    Required fields, and Default values differently.  Now a single
	    'field-type' flag on the field definition line determines how a
	    field is set (automatically, or otherwise).  See 'p4 help
	    jobspec'. 

	#9139, #9649 * **
	    'p4 resolve' now takes a -b flag to force it to attempt a
	    3 way merge, even if the files are binary.  It also makes
	    the files editable/diffable in the resolve dialog.  When
	    resolving binary files, Perforce uses an 8-bit clean path.

	    This option works with pre-99.1 client programs, but 'p4
	    resolve' will not or edit diff what it thinks are binary
	    files.

	#8951 **
	    The 'p4 client' and 'p4 label' commands now allow you to use
	    '-t template' for existing as well as new clients and labels.
	    This copies a client or label's view from another client or
	    label.

	#8878 * **
	    The new 'p4 passwd' command enables you to set the user's
	    password without having it appear on the screen as editing
	    the form for 'p4 user' does.  On Windows clients, 'p4 passwd'
	    also sets the password in the registry in the same way that
	    'p4 set P4PASSWD' does.

	#8803 **
	    You can now directly edit any (unlocked) client.  Previously,
	    the Perforce server wouldn't allow you to edit a client other
	    than the current one, but that could easily be circumvented by
	    saying "p4 -c xxx client".  Now the more direct "p4 client xxx"
	    works.  To protect a client against inadvertent updates by
	    other users, you can use the upgraded lock mechanism
	    (see #7787).

	#8713 (Bug #812) **
	    The new 'p4 counter' command allows users with 'review' access
	    to set and delete counters directly.

	#8557 (Bug #459) **
	    'p4 add' now allows you to re-add a file that has been deleted
	    if your client has 'p4 sync'ed to something other than the
	    (deleted) head rev.

	#8556 (Bug #420, #429) **
	    File patterns in client, label, and branch views can now be
	    quoted (") to allow embedded spaces.  The quotes must surround
	    the file pattern.  Client roots must now be quoted if they
	    contain spaces.

	#7848 **
	    The logging done by setting P4DEBUG to "server=1" now puts
	    all info for each operation on a single line.

	#7787 (Bug #850, #962, #1043, #1144) **
	    Locking of clients is now possible, and locking of labels and
	    clients has converged to mean: it can't be deleted, and its
	    spec can't be updated except by the owner.  As before, 'p4
	    labelsync' can't be used on locked labels.  Now, no commands
	    that affect a client can be used on a locked client, _except by
	    the owner_.

	    The client option 'allwrite', present since 98.2, has now been
	    documented in 'p4 help client'.  This option leaves all client
	    files writable.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Major new functionality in 98.2

	NEW JOBS FUNCTIONALITY - #6542 **

	    Jobs have been upgraded.  Two major shortcomings have been
	    rectified: lack of configurability and lack of searching.

	    1.	Jobs may now contain user defined fields, rather than a
		fixed set of fields.  This is controlled by the jobspec,
		which is set by the superuser.  The default jobspec is
		compatible with 97.3 jobs.  See 'p4 help jobspec' for
		redefining the jobspec.

	    2.	Jobs now support a fast searching mechanism.  As jobs
		are entered or updated, text and dates are indexed.
		The index can be searched by passing the 'p4 jobs'
		command a search expression with the new '-e jobview'
		flag.  The jobview field in 'p4 user' is likewise now
		a search expression.  See 'p4 help jobs', 'p4 help
		jobview', 'p4 help user' for more information.

	EASE OF USE

	P4CONFIG Names Client Config File - #5955 (Bug #349, #773) *
	    The new variable P4CONFIG names a file containing variable
	    settings for the client.  If the file can't be found in the
	    current directory, then parent directories are searched for
	    the file.  Each variable setting is alone on a line and of
	    the form: P4VAR=value.  The variables that can be set for
	    the client are currently:

			P4CLIENT
			P4DIFF
			P4EDITOR
			P4MERGE
			P4PASSWD
			P4PORT
			P4USER

	New Revision Specification @date - #5628 **
	    Wherever revision specifications are supported, @date and
	    "@datetime" can now be used in addition to @change and
	    @label.  The format for date is YYYY/MM/DD, and the format
	    for datetime is YYYY/MM/DD:HH:MM:SS.  If no time is given,
	    midnight is assumed.

	Syncing Specific Revisions - #5808 **
	    'p4 sync', 'p4 files', and 'p4 print' now allow their file
	    specifications to include a revision range, which limits their
	    operation to files affected within that range.  Previously,
	    only the top revision could be specified, and all files as of
	    that revision were considered.  This makes it possible to
	    take a single change ('p4 sync @n,n') or to display the
	    files affected between two labels ('p4 files @lab1,lab2').

	PROTECTIONS/GROUP

	User Authentication - #6323 * **
	    Simple user authentication is now supported.  Each user may
	    have an optional password set via 'p4 user'.  The password is
	    provided by the client either by setting the new $P4PASSWD
	    variable or by using p4's new '-P passwd' flag.  To make use
	    of passwords, both the client and server must be 98.2 or
	    later.  If an older client attempts to connect to the server
	    and the user has a password, the server will reject the
	    connection.

	    SETTING THE PASSWORD WITH 'P4 USER' WILL TRANSMIT THE PASSWORD
	    IN THE CLEAR, AND SHOULD BE DONE LOCALLY ON THE SERVER MACHINE
	    OR OVER NETWORKS THAT ARE TRUSTED.  The authentication
	    protocol itself does not transmit the password.

	Protection Groups - #6355 (Bug #637) **
	    User groups are now supported for use with the 'p4 protect'
	    command.  Groups are created, updated, and displayed with
	    the new 'p4 group' and 'p4 groups' command.  Lines in the
	    protection table managed by 'p4 protect' now have an indicator
	    as to whether they apply to individual users or to a group.

	Unauthorized Access Doesn't Use a License - #6427 **
	    Entries in the user table are now created only after the
	    access level check completes, so that if a user does not
	    have access to the server, then he will not accidentally
	    consume a user license.

	Protection Levels Make More Sense - #6484, #6471, #5310 **
	    Non-superusers can now use the depot/group/jobspec commands
	    with the -o flag, as that makes them display only commands.

	    A superuser (a user with 'super' access granted by
	    'p4 protect') can now create a new user with
	    'p4 user -f username'.

	    If a user has 'list' but not 'read' access to a file (as
	    granted by 'p4 protect') and attempts to 'p4 sync' the file,
	    the file will now be deleted.  Previously, it just pretended
	    the client didn't have the file (and did nothing to it).
	    This allows for part of the depot to be made obsolescent by
	    granting only list access.

	New "Force" Flags Empower Superusers - #5511 **
	    The 'branch', 'client', 'label', 'job', and 'user' commands
	    all now take a -f flag to force actions: deleting entities not
	    owned by the current user and setting the modified date of
	    entities.  The -f flag requires superuser access.

	Directly Invoking p4d - #2884 * **
	    UNIX ONLY.  The p4 client program can now directly invoke
	    the p4d server program by setting P4PORT to "rsh:p4d -ir
	    _root_".  The "rsh:" instructs the client to run the program
	    following the :, and the -i flag makes p4d run once with
	    its stdin/stdout as the communications pipe.  By setting
	    P4PORT to "rsh:rsh host cmd" it is possible to invoke a
	    server on a remote machine, if "cmd" is either the invocation
	    of p4d or a wrapper script which does as much.

	DATABASE UPGRADES

	New database format with flexnames - #5312 **
	    All identifiers may now be of arbitrary lengths.  Previously,
	    identifiers were limited to lengths of 32 (user names), 64
	    (client/label/branch/job names), or 128 (file name) bytes.
	    Because the data is now manipulated using the actual size
	    of the data, rather than the maximum size, the disk and
	    memory usage for the Perforce server has shrunk considerably.
	    Databases are typically 1/3 to 1/2 of their former size,
	    and memory use is commensurately smaller.  Because much less
	    data is moved around, the server Performs much better,
	    especially on large queries which previously caused the
	    server to page.

	Big Databases for SGI Irix - #5713 **
	    The p4d server now supports database files in excess of 2GB
	    on SGI Irix.  Typically, it is the db.have ("have" and label
	    lists) that grows the most, and on large installations these
	    database files have approached the 2GB limit.  Now the internal
	    limit for database files is 8TB (8000 GB) for SGI Irix.

	Upwardly Compatible Checkpoints/Journals - #5313 **
	    Checkpoint and journal files now have a version number on
	    each line that indicates the format of the line.  This will
	    allow checkpoints from previous releases and journals made
	    from multiple releases to be handled properly.  Previously,
	    a server could read checkpoints and journals only from the
	    same release level.

	    Most database upgrades are handled by compatibility code for
	    the binary database itself.  In some cases, however, it will
	    be necessary to checkpoint and restore in order to upgrade
	    releases.  In those cases the compatibility of checkpoints (and
	    journals) will come into play.

	LIBRARIAN

	Lazy Copy on Resolve - #5320 **
	    'p4 resolve' 'accept theirs' now gets the text of the new
	    revision of the file by doing a lazy copy from the integrated
	    file, rather than taking the text from the client.  When
	    using 'p4 integrate' to copy one set of files on top of
	    another, the lazy copy can save space.

	Compressed File Types - #6120 **
	    Compressed file types are now supported for text and binary
	    files. The existing binary, xbinary, and resource types have
	    become compressed types, with the old uncompressed types
	    being renamed to ubinary, uxbinary, and uresource.  There
	    is also a new ctext and cxtext for storing compressed text.
	    Compressed types are stored in gzip format on the server,
	    but otherwise behave like regular text and binary files on
	    the client.

	New "Temporary Object" File Types - #6113 **
	    Two new file types are now supported: tempobj and xtempobj.
	    Both are binary files that are always left writable on the
	    client and only have the head revision stored in the server.
	    xtempobj also has the execute permission set on the client.

	$Id:$ Now Expands More Like RCS - #6042 (Bug #819) **
	    $Id:$ in ktext and kxtext files are now expanded with a space
	    before the final $, so as to be compatible with RCS and its
	    "ident" program.  This makes current ktext files look
	    different according to 'p4 diff -se', so users of that
	    command should refresh their ktext files with 'p4 sync -f'.

	$Header:$ Mimics $Id:$ - #5608 **
	    The keyword $Header:$ is now supported for ktext type files.
	    It expands the same as $Id:$.

Minor New Functionality in 98.2

	#6559 **
	    The p4d server process id is now logged in the error log
	    along with the date, client, command, etc when command
	    logging is turned on.  Turn command logging on by setting
	    P4DEBUG to "server=1".

	#6360 **
	    'p4 opened' now sports a '-c changelist#' to restrict output
	    to the given changelist number.

	#6021 (Bug #833) **
	    'p4 where' now also outputs the local name of the mapped
	    file.  This is in addition to displaying the name in both
	    depot and client form in Perforce syntax.

	#5381 (Bug #709) **
	    'p4 filelog' now includes the filetype at each rev.

	#5369 (Bug #694) **
	    All ASCII forms are now more tolerant of indenting.  Except for
	    text blocks (where the indent is exactly the first white
	    space), values in the forms may be arbitrarily indented, as
	    long as they are indented at all.  This makes 'p4 submit' more
	    immune to accidental alterations to the 'Files:' list.
	    'p4 submit' now has a kinder, gentler message when a file
	    appears in the list that wasn't part of the default changelist.

--------------------------------------------------------------------------
--------------------------------------------------------------------------

Upgrading from 97.3 and earlier.

	1.	NEW DATABASE FORMAT WITH FLEXNAMES.  The 98.2+ database
		is not compatible with earlier databases.  You must convert
		it using a 97.3 checkpoint (checkpoints from earlier
		releases will not be compatible):

			/path/to/97.3/p4d -r$P4ROOT -jc checkpoint.97.3
			(remove the $P4ROOT/db.* files)
			/path/to/98.2/p4d -r$P4ROOT -jr checkpoint.97.3

		The Windows/NT installer will perform this upgrade
		automatically for you if you do not do it yourself.

		See change #5312 for details on flexnames.

	2.	NEW JOBS SUPPORT.  Jobs data (if any) must be upgraded
		after restarting from pre-98.2.   To convert, issue the
		client command:

			p4 jobs -R

		You must have 'superuser' access, as granted by
		'p4 protect' to use this flag.  It is harmless to run this
		more than once.

		Note: the jobview field of the user form is not
		automatically converted.  Users must replace their jobviews.
		The new jobviews that correspond to the old ones are:

			Old JobView	New JobView
			-----------	-----------
			all		status=open
			mine		user=username status=open

		replacing 'username' as appropriate.

	3.	The new password support (see change #6323) requires 98.2
		or newer clients and servers.  You cannot set the password
		if the client program is earlier than 98.2, and once the
		password is set you cannot connect at all with old client
		programs.

	4.	You cannot mix a 98.2 server with a lower version server
		using remote depots.   Further, remote depots between
		Unix and NT do not work correctly because of the different
		sort ordering.

	5.	$Id:$ EXPANSION CHANGED.  $Id:$ in ktext files now expands
		with a space before the final $, like RCS.  This makes
		current ktext files look different according to 'p4 diff
		-se', so users of that command should refresh their
		ktext files with 'p4 sync -f'.
